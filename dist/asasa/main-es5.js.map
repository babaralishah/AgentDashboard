{"version":3,"sources":["webpack:///src/app/Pipes/Non-Utilized_Pipes/table-filter.pipe.ts","webpack:///src/app/signupotp/signupotp.component.ts","webpack:///src/app/signupotp/signupotp.component.html","webpack:///src/app/services/Map/mapservice.service.ts","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/header-navigation/navigation.component.ts","webpack:///src/app/header-navigation/navigation.component.html","webpack:///src/app/services/Authentication/authentication.service.ts","webpack:///src/app/dashboard/profile/profile.component.html","webpack:///src/app/dashboard/profile/profile.component.ts","webpack:///src/app/Pipes/Non-Utilized_Pipes/table-filter04.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/app/Pipes/Non-Utilized_Pipes/table-filter02.pipe.ts","webpack:///src/app/Pipes/Non-Utilized_Pipes/table-filter06.pipe.ts","webpack:///src/app/dashboard/users/users.component.ts","webpack:///src/app/dashboard/users/users.component.html","webpack:///src/app/dashboard/leads/leads.component.ts","webpack:///src/app/dashboard/leads/leads.component.html","webpack:///src/app/dashboard/inventory/inventory.component.ts","webpack:///src/app/dashboard/inventory/inventory.component.html","webpack:///src/app/newpass/newpass.component.ts","webpack:///src/app/newpass/newpass.component.html","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/guards/islogin.guard.ts","webpack:///src/app/dashboard/options/options.component.ts","webpack:///src/app/dashboard/options/options.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/leads/add-leads/add-leads.component.ts","webpack:///src/app/dashboard/leads/add-leads/add-leads.component.html","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/dashboard/inactive/inactive.component.ts","webpack:///src/app/dashboard/inactive/inactive.component.html","webpack:///src/app/dashboard/header/header.component.ts","webpack:///src/app/dashboard/header/header.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/dashboard/inventory/add-inventories/add-inventories.component.ts","webpack:///src/app/dashboard/inventory/add-inventories/add-inventories.component.html","webpack:///src/app/sidebar/menu-items.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/Pipes/Non-Utilized_Pipes/table-filter05.pipe.ts","webpack:///src/app/dashboard/both/both.component.ts","webpack:///src/app/dashboard/both/both.component.html","webpack:///src/app/services/guards/redirectlogin.guard.ts","webpack:///src/app/Pipes/Non-Utilized_Pipes/table-filter03.pipe.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/forgetpass/forgetpass.component.ts","webpack:///src/app/forgetpass/forgetpass.component.html","webpack:///src/app/dashboard/users/add-users/add-users.component.ts","webpack:///src/app/dashboard/users/add-users/add-users.component.html","webpack:///src/app/forgetpassverify/forgetpassverify.component.ts","webpack:///src/app/forgetpassverify/forgetpassverify.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["TableFilterPipe","user","search_id","filter","userId","toLowerCase","indexOf","name","SignupotpComponent","authServ","formBuilder","router","route","submitted","params","subscribe","param","email","initialize","signupotpForm","group","code","required","minLength","maxLength","pattern","invalid","otpcode","value","verifyOTPEmail","data","console","log","status","msg","alert","navigate","controls","onSubmit","selector","templateUrl","styleUrls","MapserviceService","http","apiurl","get","providedIn","SidebarComponent","modalService","showMenu","showSubMenu","sidebarnavItems","element","sidebarnavItem","NavigationComponent","toggleSidebar","showSearch","AuthenticationService","httpClient","headers","set","url","post","pipe","handleError","form_title","id","File","formData","FormData","append","token","localStorage","setItem","Error","getItem","put","body","removeItem","res","error","ErrorEvent","message","genericId","authToken","ImageSnippet","src","file","ProfileComponent","authService","username","tokenization","getToken","getDecodedToken","decodedToken","tokendata","event","target","files","reader","FileReader","addEventListener","selectedFile","result","readAsDataURL","_id","updateUser","onSelectFile","updateImage","TableFilter04Pipe","search_type","contact","environment","production","mapbox","accessToken","TableFilter02Pipe","search_location","location","TableFilter06Pipe","search_client","fullname","UsersComponent","toastr","getUserList","setUser","navigateByUrl","getUsers","err","deleteId","deleteUser","success","timeOut","LeadsComponent","withAutofocus","getLeadsList","setFormTitle","getLeads","leads","deleteInventory","InventoryComponent","getInventoryList","getInventory","inventories","NewpassComponent","newpassForm","password","newpassword","DashboardComponent","AppComponent","isShown","title","loading","loginForm","login","IsLoginGuard","OptionsComponent","addoptionForm","add_newcity","added_cities","add_newloc","added_loc","enter_newloc","add_newtype","added_type","add_newstatus","added_status","formDeclare","reset","AppModule","forRoot","declarations","imports","providers","bootstrap","AddLeadsComponent","addleadForm","client","agent_status","admin_status","phone_no","added_on","area","type","purpose","prop_type","prop_no","demand","comment","assigned_to","getCities","getLocations","cities","locations","submitForm","MapComponent","mapservice","opacity","style","lat","lng","geojson","features","properties","iconSize","geometry","coordinates","mapArray","tag","size","initializemapbox","map","container","center","zoom","forEach","marker","el","document","createElement","className","backgroundImage","innerHTML","fontStyle","textAlign","color","width","height","fontSize","fontWeight","fontFamily","setLngLat","setPopup","setHTML","addTo","mapboxOverlay","addControl","positionOptions","enableHighAccuracy","trackUserLocation","slider","getElementById","sliderValue","on","addSource","addLayer","source","paint","e","input","setPaintProperty","parseInt","textContent","InactiveComponent","users","Id","Client","Purpose","Prop_type","Prop_num","Area","Location","Demand","Phone_num","Comment","Assigned_to","Admin_status","Agent_status","Added_on","HeaderComponent","NavbarComponent","city","AddInventoriesComponent","formSendingStatus","access_type","access","access_type1","isInvalid","isInvalid1","selectedLocations","selectStringLocations","urls","fileToUpload","isRent","user1","getUser","removeUser","getFormTitle","removeFormTitle","addinventoryForm","patchValue","updatefields","userList","greaterThanValue","lessThanValue","greaterThanValue1","lessThanValue1","property_type","client_type","demand_price","property_purpose","beds_number","client_name","client_number","i","length","push","selectedCity","item","assigned_to1","admin","city_value","cityId","sub_location","sub_locationId","min_price","max_price","min_area","max_area","area_unit","locId","loc","optionValue1","updateInventory","createInventory","ROUTES","path","icon","extralink","submenu","SignupComponent","accessType","registerForm","confirm_password","abc","register","registerUser","TableFilter05Pipe","search_demand","BothComponent","getAllList","getAll","RedirectLoginGuard","TableFilter03Pipe","search_area","routes","canActivate","component","AppRoutingModule","exports","LoginComponent","setToken","errorMessage","loginUser","ForgetpassComponent","forgetPassForm","verifyEmail","AddUsersComponent","adduserForm","createUsers","ForgetpassverifyComponent","forgetpassForm","verifyOTPCode","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","keys","module"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaA,e;;;;;;;oCAELC,I,EACAC,S,EAAiB;AAGjB,gBAAI,CAACD,IAAD,IAAS,CAACC,SAAd,EAAyB;AACrB,qBAAOD,IAAP;AACH;;AACD,mBAAOA,IAAI,CAACE,MAAL,CAAY,UAAAF,IAAI;AAAA,qBACnBA,IAAI,CAACG,MAAL,CAAYC,WAAZ,GAA0BC,OAA1B,CAAkCJ,SAAS,CAACG,WAAV,EAAlC,MAA+D,CAAC,CAD7C;AAAA,aAAhB,CAAP;AAGH;;;;;;;yBAZQL,e;AAAe,O;;;;cAAfA,e;AAAe;;;;;wEAAfA,e,EAAe;gBAJ3B,kDAI2B;iBAJtB;AACFO,gBAAI,EAAE;AADJ,W;AAIsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgCwB;;AAAoC;;AAAgB;;;;;;AACpD;;AAAqC;;AAAkC;;;;;;AACvE;;AAAqC;;AAA4C;;;;;;AACjF;;AAAmC;;AAAoC;;;;;;AAJ3E;;AACI;;AACA;;AACA;;AACA;;AACJ;;;;;;AAJS;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;UDzBhBC,kB;AAKX,oCACUC,QADV,EAEUC,WAFV,EAGUC,MAHV,EAIUC,KAJV,EAIiC;AAAA;;AAHvB,eAAAH,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAPV,eAAAC,SAAA,GAAY,KAAZ;AAOoC;;;;qCAE5B;AAAA;;AACN,iBAAKD,KAAL,CAAWE,MAAX,CAAkBC,SAAlB,CAA4B,UAAAC,KAAK,EAAI;AACnC,mBAAI,CAACC,KAAL,GAAaD,KAAK,CAACC,KAAnB,CADmC,CAEnC;AACD,aAHD;AAIA,iBAAKC,UAAL;AACD;;;uCACY;AACX,iBAAKC,aAAL,GAAqB,KAAKT,WAAL,CAAiBU,KAAjB,CAAuB;AAC1CC,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,CAArB,CAA/C,EAAwE,0DAAWC,OAAX,CAAmB,UAAnB,CAAxE,CAAL;AADoC,aAAvB,CAArB;AAGD;;;qCAGU;AAAA;;AACT,iBAAKZ,SAAL,GAAiB,IAAjB,CADS,CAET;;AACA,gBAAI,KAAKM,aAAL,CAAmBO,OAAvB,EAAgC;AAC9B;AACD;;AACD,gBAAMzB,IAAI,GAAG;AACXgB,mBAAK,EAAE,KAAKA,KADD;AAEXU,qBAAO,EAAE,KAAKR,aAAL,CAAmBS,KAAnB,CAAyBP;AAFvB,aAAb;AAKA,iBAAKZ,QAAL,CAAcoB,cAAd,CAA6B5B,IAA7B,EAAmCc,SAAnC,CAA6C,UAAAe,IAAI,EAAI;AACnDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAMG,MAAM,GAAGH,IAAI,CAACG,MAApB;AACA,kBAAMC,GAAG,GAAGJ,IAAI,CAACI,GAAjB;;AACA,kBAAID,MAAJ,EAAY;AAEVE,qBAAK,CAAC,gBAAgBD,GAAhB,GAAsB,eAAtB,GAAwCD,MAAzC,CAAL;;AACA,sBAAI,CAACtB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,SAAD,EAAY,MAAI,CAACnB,KAAjB,CAArB;AACD,eAJD,MAIO;AACLkB,qBAAK,CAACD,GAAD,CAAL;AACD;AACF,aAXD;AAaD;;;8BA1BO;AAAE,mBAAO,KAAKf,aAAL,CAAmBkB,QAA1B;AAAqC;;;;;;;yBAvBpC7B,kB,EAAkB,sK,EAAA,2H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,e;AAAA,86B;AAAA;AAAA;ACV/B;;AACA;;AAKA;;AACI;;AACI;;AACI;;AAEI;;AACJ;;AACJ;;AAEA;;AACI;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAmB;;AAEvB;;AAAwD;AAAA,qBAAY,IAAA8B,QAAA,EAAZ;AAAsB,aAAtB;;AAChE;;AACY;;AACI;;AACA;;AAGA;;AAMJ;;AACA;;AAEA;;AACX;;AACsC;;AAAM;;AAC7C;;AACY;;AAA8E;;AAAI;;AAOtF;;AACJ;;AACJ;;AAEJ;;;;AA/BwC;;AAAA;;AAMhB;;AAAA;;AACC;;AAAA;;;;;;;;;wEDrBZ9B,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT+B,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAAA;AACA;AAIA;;;UAIaC,iB;AACX,mCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAGb,eAAAC,MAAA,GAAS,gCAAT;AAFR;;;;qCAGO;AACN,mBAAO,KAAKD,IAAL,CAAUE,GAAV,CAAc,KAAKD,MAAnB,CAAP;AACD;;;;;;;yBAPYF,iB,EAAiB,uH;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;wEAEDA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVI,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;ACT9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AAAqE;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;;;;;;;AACrE;;AAC0E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEtE;;AACA;;AAAwB;;AAAwB;;AACpD;;;;;;AALgD,2NAAyE,SAAzE,EAAyE,iGAAzE,EAAyE,kBAAzE,EAAyE,qDAAzE;;AAGzC;;AAAA;;AACqB;;AAAA;;;;;;AAPhC;;AAEI;;AACA;;AAMJ;;;;;;;;AATyB;;AACrB;;AAC2B;;AAAA;;AAEY;;AAAA;;QDFnD;;;UAMaC,gB;AAaX,kCACUC,YADV,EAEUrC,MAFV,EAGUC,KAHV,EAG+B;AAAA;;AAFrB,eAAAoC,YAAA,GAAAA,YAAA;AACA,eAAArC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAfV,eAAAqC,QAAA,GAAW,EAAX;AACA,eAAAC,WAAA,GAAc,EAAd;AACO,eAAAC,eAAA,GAA4B,EAA5B;AAcH,S,CAbJ;;;;;yCACeC,O,EAAiB;AAC9B,gBAAIA,OAAO,KAAK,KAAKH,QAArB,EAA+B;AAC7B,mBAAKA,QAAL,GAAgB,GAAhB;AACD,aAFD,MAEO;AACL,mBAAKA,QAAL,GAAgBG,OAAhB;AACD;AACF,W,CAQD;;;;qCACW;AACT,iBAAKD,eAAL,GAAuB,mDAAOhD,MAAP,CAAc,UAAAkD,cAAc;AAAA,qBAAIA,cAAJ;AAAA,aAA5B,CAAvB;AACD;;;;;;;yBAtBUN,gB,EAAgB,oI,EAAA,uH,EAAA,+H;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,gB;AAAA,e;AAAA,2f;AAAA;AAAA;ACX7B;;AACI;;AAEI;;AAUJ;;AACJ;;;;AAXoF;;AAAA;;;;;;;;;wEDQvEA,gB,EAAgB;gBAJ5B,uDAI4B;iBAJlB;AACTR,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE;AAFJ,W;AAIkB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;SACA;;;UAMac,mB,GAMX,+BAAc;AAAA;;AAJd,aAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAEO,aAAAC,UAAA,GAAa,KAAb;AAES,O;;;yBANLF,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,uC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,y3C;AAAA;AAAA;ACJhC;;AACE;;AACE;;AACE;AAAA,qBAAS,IAAAC,aAAA,OAAT;AAA6B,aAA7B;;AAIA;;AACF;;AACF;;AAIA;;AACE;;AACE;AAAA;AAAA;;AAIA;;AACF;;AACA;;AAIE;;AAKA;;AAAmB;AAAA;AAAA;;AACjB;;AACF;;AACF;;AACF;;AACF;;AAIA;;AAIE;;AACE;;AAQE;;AAMF;;AACA;;AACE;;AACE;;AAAoC;;AAAU;;AAEhD;;AACE;;AAAsC;;AAAU;;AAElD;;AACE;;AAAqC;;AAAK;;AAE5C;;AACA;;AACE;;AAAwC;;AAAe;;AAEzD;;AACA;;AACE;;AAA4C;;AAAM;;AAEpD;;AACA;;AACE;;AACG;;AAAY;;AAEjB;;AACF;;AACF;;AAIF;;;;AAjEM;;AAAA;;;;;;;;;wEDnBOD,mB,EAAmB;gBAJ/B,uDAI+B;iBAJrB;AACTf,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE;AAFJ,W;AAIqB,U;;;AAE9Be,uBAAa;kBADZ;AACY;;;;;;;;;;;;;;;;;;;AETf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaE,qB;AAOX,uCAAoBC,UAApB,EAAmD/C,MAAnD,EAAmE;AAAA;;AAA/C,eAAA+C,UAAA,GAAAA,UAAA;AAA+B,eAAA/C,MAAA,GAAAA,MAAA;AANnD,eAAAgD,OAAA,GAAU,IAAI,gEAAJ,GAAkBC,GAAlB,CAAsB,cAAtB,EAAsC,kBAAtC,CAAV;AACiB,eAAAC,GAAA,GAAM,gCAAN;AAMhB,S,CAED;;;;;0CACgB5D,I,EAAW;AACzB8B,mBAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,mBAAO,KAAK0B,UAAL,CACJI,IADI,WACI,KAAKD,GADT,qBAC8B5D,IAD9B,EAEJ8D,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD,W,CACD;;;;uCACazD,I,EAAM;AACjB,iBAAK0D,UAAL,GAAkB1D,IAAlB;AACD,W,CACD;;;;yCACe;AACb,mBAAO,KAAK0D,UAAZ;AACD;;;4CACc;AACb,iBAAKA,UAAL,GAAkB,IAAlB;AACD,W,CACD;;;;yCACe;AACb,mBAAO,KAAKP,UAAL,CAAgBb,GAAhB,WAA4B,KAAKgB,GAAjC,gBAAP;AACD,W,CACD;;;;qCACW;AACT,mBAAO,KAAKH,UAAL,CAAgBb,GAAhB,WAA4B,KAAKgB,GAAjC,YAAP;AACD;;;qCAEU;AACT,mBAAO,KAAKH,UAAL,CAAgBb,GAAhB,WAA4B,KAAKgB,GAAjC,YAAP;AACD,W,CAED;;;;mCACM;AAEJ,mBAAO,KAAKH,UAAL,CAAgBb,GAAhB,WAA4B,KAAKgB,GAAjC,oBAAP;AACD,W,CACD;;;;qCACWK,E,EAAI;AACbnC,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCkC,EAAlC;AACA,mBAAO,KAAKR,UAAL,0DACmCQ,EADnC,EAAP;AAGD,W,CACD;;;;sCACYjE,I,EAAW;AACrB8B,mBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC/B,IAAhC;;AACA,gBAAGA,IAAI,YAAYkE,IAAnB,EAAyB;AACvB,kBAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,sBAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BrE,IAA1B;AACA,qBAAO,KAAKyD,UAAL,CACNI,IADM,WACE,KAAKD,GADP,kBACyBO,QADzB,CAAP;AAED,aALD,MAKO;AACL,qBAAO,KAAKV,UAAL,CACNI,IADM,WACE,KAAKD,GADP,kBACyB5D,IADzB,EAEN8D,IAFM,CAED,kEAAW,KAAKC,WAAhB,CAFC,CAAP;AAGD;AACF,W,CACD;;;;mCAESO,K,EAAO;AACdC,wBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACD;;;0CACeA,K,EAAa;AAC3B,gBAAI;AACF;AACA,qBAAO,2DAAWA,KAAX,CAAP;AACD,aAHD,CAGE,OAAOG,KAAP,EAAc;AACd3C,qBAAO,CAACC,GAAR,CAAY0C,KAAZ;AACA,qBAAO,IAAP;AACD;AACF;;;qCACU;AACT,mBAAOF,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAP,CADS,CAET;AACA;AACD,W,CAED;;;;0CACgBT,E,EAAI;AAClBnC,mBAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCkC,EAAvC;AACA,mBAAO,KAAKR,UAAL,8DACuCQ,EADvC,EAAP;AAGD,W,CAED;;;;sCACY;AACV,mBAAO,KAAKR,UAAL,CAAgBb,GAAhB,oCAAP;AACD,W,CAED;;;;yCACe;AACb,mBAAO,KAAKa,UAAL,CAAgBb,GAAhB,uCAAP;AACD,W,CAED;;;;kCACQ5C,I,EAAW;AACjB,iBAAKA,IAAL,GAAYA,IAAZ;AACD,W,CACD;;;;oCACU;AACR,mBAAO,KAAKA,IAAZ;AACD;;;uCACY;AACX,iBAAKA,IAAL,GAAY,IAAZ;AACD,W,CAED;;;;qCACWiE,E,EAAIpC,I,EAAM;AACnB,mBAAO,KAAK4B,UAAL,CAAgBkB,GAAhB,gDACmCV,EADnC,GAELpC,IAFK,CAAP;AAID,W,CACD;;;;0CACgBoC,E,EAAIpC,I,EAAM;AACxBC,mBAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCkC,EAAvC;AACA,mBAAO,KAAKR,UAAL,CAAgBkB,GAAhB,oDACuCV,EADvC,GAELpC,IAFK,CAAP;AAID,W,CACD;;;;mCACS7B,I,EAAS;AAChB,mBAAO,KAAKyD,UAAL,CACJI,IADI,WACI,KAAKD,GADT,sBAC+B5D,IAD/B,CAAP;AAED;AACD;AACA;;;;yCACeA,I,EAAS;AACtB,mBAAO,KAAKyD,UAAL,CACJI,IADI,WACI,KAAKD,GADT,yBACkC5D,IADlC,EAEJ8D,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD,W,CACD;;;;wCACc/D,I,EAAS;AACrB,mBAAO,KAAKyD,UAAL,CACJI,IADI,WACI,KAAKD,GADT,2BACoC5D,IADpC,EAEJ8D,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD,W,CACD;;;;sCACY/D,I,EAAS;AACnB,mBAAO,KAAKyD,UAAL,CACJI,IADI,WACI,KAAKD,GADT,yBACkC5D,IADlC,EAEJ8D,IAFI,CAEC,kEAAW,KAAKC,WAAhB,CAFD,CAAP;AAGD,W,CAED;;;;gCACa/D,I,EAAS;AACpB,mBAAO,KAAKyD,UAAL,CAAgBI,IAAhB,WAAwB,KAAKD,GAA7B,mBAAgD5D,IAAhD,CAAP;AACD,W,CAED;;;;sCACY4E,I,EAAS;AACnB,mBAAO,KAAKnB,UAAL,CAAgBI,IAAhB,WAAwB,KAAKD,GAA7B,yBAAsDgB,IAAtD,CAAP;AACD,W,CAED;;;;2CACiB;AACf,mBAAOL,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAP;AACD;;;AAMD;mCACS;AACP,gBAAIH,YAAY,CAACM,UAAb,CAAwB,cAAxB,KAA2C,IAA/C,EAAqD;AACnD,mBAAKnE,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AACF,W,CACD;AAEA;;;;yCACe8B,E,EAAE;AACf,mBAAO,KAAKR,UAAL,CACJb,GADI,WACG,KAAKgB,GADR,2BAC4BK,EAD5B,GACkC;AAAEP,qBAAO,EAAE,KAAKA;AAAhB,aADlC,EAEJI,IAFI,CAGH,2DAAI,UAACgB,GAAD,EAAmB;AACrB,qBAAOA,GAAG,IAAI,EAAd;AACD,aAFD,CAHG,EAMH,kEAAW,KAAKf,WAAhB,CANG,CAAP;AAQD,W,CACD;AAEA;;;;sCACYgB,K,EAA0B;AACpC,gBAAI9C,GAAG,GAAG,EAAV;;AACA,gBAAI8C,KAAK,CAACA,KAAN,YAAuBC,UAA3B,EAAuC;AACrC;AACA/C,iBAAG,GAAG8C,KAAK,CAACA,KAAN,CAAYE,OAAlB;AACD,aAHD,MAGO;AACL;AACAhD,iBAAG,yBAAkB8C,KAAK,CAAC/C,MAAxB,wBAA4C+C,KAAK,CAACE,OAAlD,CAAH;AACD;;AACD,mBAAO,wDAAWhD,GAAX,CAAP;AACD,W,CACD;;;;uCAEagC,E,EAAI;AACf,iBAAKiB,SAAL,GAAiBjB,EAAjB;AACD;;;yCAEc;AACb,mBAAO,KAAKiB,SAAZ;AACD;;;8BA7Ca;AACZ,gBAAMC,SAAS,GAAGZ,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAlB;AACA,mBAAOS,SAAS,KAAK,IAAd,GAAqB,IAArB,GAA4B,KAAnC;AACD;;;;;;;yBA/KU3B,qB,EAAqB,uH,EAAA,8G;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFpB;;;;;wEAEDA,qB,EAAqB;gBAHjC,wDAGiC;iBAHtB;AACVX,sBAAU,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuEE;;;;;;AACA;;;;;;AAA0B;;;;UCnFxDuC,Y,GACJ,sBAAmBC,GAAnB,EAAuCC,IAAvC,EAAmD;AAAA;;AAAhC,aAAAD,GAAA,GAAAA,GAAA;AAAoB,aAAAC,IAAA,GAAAA,IAAA;AAAc,O;;UAQ1CC,gB;AAQX,kCAAmB7E,MAAnB,EAA2CC,KAA3C,EAAyE6E,WAAzE,EAA6G;AAAA;;AAA1F,eAAA9E,MAAA,GAAAA,MAAA;AAAwB,eAAAC,KAAA,GAAAA,KAAA;AAA8B,eAAA6E,WAAA,GAAAA,WAAA;AACzE,eAAAC,QAAA,GAAW,KAAK/E,MAAL,CAAYkD,GAAvB;AADgH;;;;qCAGxG;AACN,iBAAK8B,YAAL;AACD;;;yCAEiB;;;;;;;;AAEF,6BAAM,KAAKF,WAAL,CAAiBG,QAAjB,EAAN;;;AAARrB,2B;;AACe,6BAAM,KAAKkB,WAAL,CAAiBI,eAAjB,CAAiCtB,KAAjC,CAAN;;;AAAfuB,kC;AACN,2BAAKC,SAAL,GAAiBD,YAAY,CAAChE,IAA9B,C,CACA;;;;;;;;;AACD;;;uCAEYkE,K,EAAO;AAAA;;AAClB,gBAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsBF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAA1B,EAAiD;AAC/C,kBAAMX,IAAI,GAASS,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAnB;AACA,kBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AAEAD,oBAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,UAACL,KAAD,EAAgB;AAC9C,sBAAI,CAACM,YAAL,GAAoB,IAAIjB,YAAJ,CAAiBW,KAAK,CAACC,MAAN,CAAaM,MAA9B,EAAsChB,IAAtC,CAApB;AACD,eAFD;AAGAY,oBAAM,CAACK,aAAP,CAAqBjB,IAArB;AACD;AACF,W,CAED;;;;wCACc;AACZxD,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKsE,YAA/B;AACAvE,mBAAO,CAACC,GAAR,CAAY,KAAK+D,SAAL,CAAeU,GAA3B;AACA,iBAAKhB,WAAL,CAAiBiB,UAAjB,CAA4B,KAAKX,SAAL,CAAeU,GAA3C,EAAgD,KAAKH,YAAL,CAAkBf,IAAlE,EAAwExE,SAAxE,CAAkF,UAACgE,GAAD,EAAS;AACzFhD,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC+C,GAAjC;AACD,aAFD;AAID;;;;;;;yBA3CUS,gB,EAAgB,uH,EAAA,+H,EAAA,6K;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,iB;AAAA,e;AAAA,y6B;AAAA;AAAA;;;AD2D7B;;AACI;;AACA;;AACI;;AACI;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AACA;;AACI;;AAAI;;AAAuB;;AAC3B;;AAAmC;;AAAqB;;AAExD;;AAAe;;AAA+E;;AAClG;;AACJ;;AACJ;;AAEJ;;AACJ;;AAEJ;;AAEA;;AACI;;AACI;;AAEI;;AACI;;AAAQ;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAAqB,aAArB;;AACpB;;AAA2C;;AAAM;;AACjD;;AAAqB;;AAAG;;AAAM;;AAAI;;AACpC;;AACc;;AAA2C;AAAA,qBAAU,IAAAmB,YAAA,QAAV;AAA8B,aAA9B;;AAA3C;;AAA2E;;AAAI;;AACnF;;AACA;;AACI;;AAAQ;AAAA,qBAAS,IAAAC,WAAA,EAAT;AAAsB,aAAtB;;AACpB;;AAAsB;;AAAM;;AAC5B;;AAAqB;;AAAG;;AAAI;;AAAI;;AAClC;;AACU;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA0E;;AAAG;;AAAQ;;AAAK;;AAA4C;;AACtI;;AAA0E;;AAAG;;AAAU;;AAAK;;AAA2C;;AAC3I;;AACJ;;AACJ;;AAEJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAvDyC;;AAAA;;AACA;;AAAA;;AAEG;;AAAA;;AAC+B;;AAAA;;AAsCuD;;AAAA;;AACE;;AAAA;;;;;;;;;wECpHvHpB,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTjD,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACb7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaoE,iB;;;;;;;qCAGT;AACA5G,c,EACA6G,W,EAAmB;AAGnB,gBAAI,CAAC7G,IAAD,IAAS,CAAC6G,WAAd,EAA2B;AACzB,qBAAO7G,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACE,MAAL,CAAY,UAAAF,IAAI;AAAA,qBACrBA,IAAI,CAAC8G,OAAL,CAAa1G,WAAb,GAA2BC,OAA3B,CAAmCwG,WAAW,CAACzG,WAAZ,EAAnC,MAAkE,CAAC,CAD9C;AAAA,aAAhB,CAAP;AAGD;;;;;;;yBAdUwG,iB;AAAiB,O;;;;cAAjBA,iB;AAAiB;;;;;wEAAjBA,iB,EAAiB;gBAH7B,kDAG6B;iBAHxB;AACJtG,gBAAI,EAAE;AADF,W;AAGwB,U;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMyG,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;AAEzBC,cAAM,EAAE;AACNC,qBAAW,EAAE;AADP,SAFiB;AAKzBtD,WAAG,EAAE;AALoB,OAApB;AAQP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACnBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKauD,iB;;;;;;;qCAGT;AACAnH,c,EACAoH,e,EAAuB;AAGvB,gBAAI,CAACpH,IAAD,IAAS,CAACoH,eAAd,EAA+B;AAC7B,qBAAOpH,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACE,MAAL,CAAY,UAAAF,IAAI;AAAA,qBACrBA,IAAI,CAACqH,QAAL,CAAcjH,WAAd,GAA4BC,OAA5B,CAAoC+G,eAAe,CAAChH,WAAhB,EAApC,MAAuE,CAAC,CADnD;AAAA,aAAhB,CAAP;AAGD;;;;;;;yBAdU+G,iB;AAAiB,O;;;;cAAjBA,iB;AAAiB;;;;;wEAAjBA,iB,EAAiB;gBAH7B,kDAG6B;iBAHxB;AACJ7G,gBAAI,EAAE;AADF,W;AAGwB,U;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKagH,iB;;;;;;;qCAGT;AACAtH,c,EACAuH,a,EAAqB;AAGrB,gBAAI,CAACvH,IAAD,IAAS,CAACuH,aAAd,EAA6B;AAC3B,qBAAOvH,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACE,MAAL,CAAY,UAAAF,IAAI;AAAA,qBACrBA,IAAI,CAACwH,QAAL,CAAcpH,WAAd,GAA4BC,OAA5B,CAAoCkH,aAAa,CAACnH,WAAd,EAApC,MAAqE,CAAC,CADjD;AAAA,aAAhB,CAAP;AAGD;;;;;;;yBAdUkH,iB;AAAiB,O;;;;cAAjBA,iB;AAAiB;;;;;wEAAjBA,iB,EAAiB;gBAH7B,kDAG6B;iBAHxB;AACJhH,gBAAI,EAAE;AADF,W;AAGwB,U;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC4EgC;;AAA4B;;;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAC5B;;AAA6B;;;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAMmB;;AAAkE;;AAAqB;;;;;;AAArB;;AAAA;;;;;;;;AAX1H;;AAEI;;AAAI;;AAAe;;AACnB;;AACI;;AACA;;AACJ;;AACA;;AAAI;;AAAmB;;AAGvB;;AACI;;AAAmB;;AAAM;;AAAY;;AAAO;;AAAI;;AACpD;;AACA;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAgB;;AACpB;;AAAI;;;;AAAsC;;AAE1C;;AAAI;;AAA2B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAAI;;AAEpG;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+E;;AAE/G;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA+C;;AAAmB;;AAClE;;AAClC;;AAAyB;;AAAO;;AAClC;;AACgC;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAClC;;AACF;;AACoC;;AAAkE;AAAA;;AAAA;;AAAA;AAAA;;AACpG;;AACF;;AACgC;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA3CQ;;AAAA;;AAEM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AAIA;;AAAA;;AAAgF;;AAAA;;AAEhF;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UD5EnBmH,c;AAKX,iCACE;AACQjC,mBAFV,EAGU9E,MAHV,EAIUgH,MAJV,EAI+B;AAAA;;AAFrB,eAAAlC,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AACA,eAAAgH,MAAA,GAAAA,MAAA;AACN;;;;qCAEI;AACN,iBAAKC,WAAL;AACD;;;kCACO3H,I,EAAW;AACjB,iBAAKwF,WAAL,CAAiBoC,OAAjB,CAAyB5H,IAAzB;AACA,iBAAKU,MAAL,CAAYmH,aAAZ,CAA0B,WAA1B;AACD,W,CAED;;;;wCACc;AAAA;;AACZ,iBAAKrC,WAAL,CAAiBsC,QAAjB,GAA4BhH,SAA5B,CACE,UAACe,IAAD,EAAU;AACR,oBAAI,CAACA,IAAL,GAAYA,IAAZ;AACAC,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,MAAI,CAACF,IAAtC;AACD,aAJH,EAKE,UAACkG,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAPH;AASD;;;oCAES9D,E,EAAS;AACjBnC,mBAAO,CAACC,GAAR,CAAYkC,EAAZ;AACA,iBAAK+D,QAAL,GAAgB/D,EAAhB;AACD,W,CAEC;;;;uCACU;AAAA;;AACRnC,mBAAO,CAACC,GAAR,CAAY,KAAKiG,QAAjB;AAEA,iBAAKxC,WAAL,CAAiByC,UAAjB,CAA4B,KAAKD,QAAjC,EAA2ClH,SAA3C,CAAqD,UAAAe,IAAI,EAAI;AAC3DC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAIA,IAAI,CAACT,IAAL,KAAc,GAAlB,EAAuB;AACrB,sBAAI,CAACsG,MAAL,CAAYQ,OAAZ,CAAoBrG,IAAI,CAACoD,OAAzB,EAAkC,SAAlC,EAA6C;AACzCkD,yBAAO,EAAE;AADgC,iBAA7C;;AAGE,sBAAI,CAACR,WAAL,GAJmB,CAKvB;AACA;;AACC;AAEF,aAXD;AAYD;;;;;;;yBAtDQF,c,EAAc,6K,EAAA,uH,EAAA,yH;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,e;AAAA,+tC;AAAA;AAAA;ACX3B;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAI;;AAAG;;AAA6B;;AAAI;;AACxC;;AAEA;;AACI;;AACI;;AAAoE;;AAAO;;AAC/E;;AACA;;AACI;;AAEI;;AAA0C;AAAA;AAAA;;AAA1C;;AAEJ;;AACJ;;AACJ;;AACA;;AAAI;;AAAI;;AAER;;AACI;;AACI;;AACI;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAiB;;AACjC;;AAAgB;;AAAa;;AAC7B;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAU;;AAE9B;;AACJ;;AAEA;;AA0BI;;;;AA8CJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;;;AApGsE;;AAAA;;AAgD1C;;AAAA;;;;;;;;;;wED7DfA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACTnF,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6H+E;;AAAkE;;AAAqB;;;;;;AAArB;;AAAA;;;;;;;;AAf7H;;AAEI;;AAAI;;AAAc;;AAElB;;AAAI;;AAAG;;AAAO;;AAAI;;AAAuB;;AAAK;;AAAG;;AAAS;;AAAI;;AAAuB;;AAErF;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAA2B;;AAC/B;;AAAI;;AAAwB;;AAC5B;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAc;;AAIlB;;AACI;;AAAsB;;AAAM;;AAAY;;AAAO;;AAAI;;AACvD;;AAKA;;AAAI;;AAAuB;;AAM3B;;AAAI;;;;AAAsC;;AAC1C;;AAAI;;AAA2B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAAI;;AAEpG;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+E;;AAE/G;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA+C;;AAAmB;;AAClE;;AAC9B;;AAAyB;;AAAO;;AAClC;;AAC4B;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAC9B;;AACF;;AACgC;;AAAkE;AAAA;;AAAA;;AAAA;AAAA;;AAChG;;AACF;;AAC4B;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAtDQ;;AAAA;;AAEc;;AAAA;;AAA4C;;AAAA;;AAE1D;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKA;;AAAA;;AAAmF;;AAAA;;AAMnF;;AAAA;;AAMA;;AAAA;;;;UD/Hf4F,c;AAQX,gCACU1H,MADV,EAEU8E,WAFV,EAGUkC,MAHV,EAG+B;AAAA;;AAFrB,eAAAhH,MAAA,GAAAA,MAAA;AACA,eAAA8E,WAAA,GAAAA,WAAA;AACA,eAAAkC,MAAA,GAAAA,MAAA;AAPV,eAAAW,aAAA;AAQO;;;;qCASC;AACN,iBAAKC,YAAL;AACD;;;kCAEOtI,I,EAAS;AACf,iBAAKwF,WAAL,CAAiBoC,OAAjB,CAAyB5H,IAAzB;AACA,iBAAKwF,WAAL,CAAiB+C,YAAjB,CAA8B,MAA9B;AACA,iBAAK7H,MAAL,CAAYmH,aAAZ,CAA0B,kBAA1B;AACC;;;uCAEYvH,I,EAAI;AACf,iBAAKkF,WAAL,CAAiB+C,YAAjB,CAA8BjI,IAA9B;AACA,iBAAKI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;yCAEY;AAAA;;AACb,iBAAKqD,WAAL,CAAiBgD,QAAjB,GAA4B1H,SAA5B,CACE,UAACe,IAAD,EAAU;AACR,oBAAI,CAAC7B,IAAL,GAAY6B,IAAI,CAAC4G,KAAjB;AACA3G,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,MAAI,CAAC/B,IAAtC;AACD,aAJH,EAKE,UAAC+H,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAPH;AASD,W,CAEC;;;;uCACQ;AAAA;;AACRjG,mBAAO,CAACC,GAAR,CAAY,KAAKiG,QAAjB;AAEA,iBAAKxC,WAAL,CAAiBkD,eAAjB,CAAiC,KAAKV,QAAtC,EAAgDlH,SAAhD,CAA0D,UAAAe,IAAI,EAAI;AAChEC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAIA,IAAI,CAACT,IAAL,KAAc,GAAlB,EAAuB;AACrB,sBAAI,CAACsG,MAAL,CAAYQ,OAAZ,CAAoBrG,IAAI,CAACoD,OAAzB,EAAkC,SAAlC,EAA6C;AACzCkD,yBAAO,EAAE;AADgC,iBAA7C;;AAGE,sBAAI,CAACG,YAAL,GAJmB,CAKvB;AACA;;AACC;AAEF,aAXD;AAYD;;;oCAESrE,E,EAAI;AACZnC,mBAAO,CAACC,GAAR,CAAYkC,EAAZ;AAEA,iBAAK+D,QAAL,GAAgB/D,EAAhB;AACD;;;;;;;yBAtEUmE,c,EAAc,uH,EAAA,6K,EAAA,yH;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,e;AAAA,w3C;AAAA;AAAA;ACV3B;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACJ;;AAEA;;AACI;;AACI;;AAAI;;AAAG;;AAAwC;;AAAI;;AACnD;;AACA;;AACI;;AAA6C;AAAA,qBAAS,IAAAG,YAAA,CAAa,MAAb,CAAT;AAA6B,aAA7B;;AAA+B;;AAAO;;AACvF;;AACA;;AAGI;;AACI;;AACI;;AACJ;;AAEA;;AACI;;AAAqD;AAAA;AAAA;;AAArD;;AACJ;;AAIA;;AAAsE;;AAAK;;AAC3E;;AAA6C;;AAAK;;AAAS;;AAC/D;;AACJ;;AACA;;AAAI;;AAAI;;AAER;;AACI;;AACI;;AACI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAM;;AAMtB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAU;;AAC9B;;AACJ;;AACA;;AAmDI;;;;AAyDJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAhJ6E;;AAAA;;AAmFrD;;AAAA;;;;;;;;;;wEDpGXH,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT9F,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsG+E;;AAAkE;;AAAqB;;;;;;AAArB;;AAAA;;;;;;;;AAV7H;;AAEI;;AAAI;;AAAsB;;AAO1B;;AACI;;AAAsB;;AAAM;;AAAY;;AAAO;;AAAI;;AACvD;;AAEA;;AAAI;;AAAe;;AACnB;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAA2B;;AAC/B;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAG;;AAAO;;AAAI;;AAAuB;;AAAK;;AAAG;;AAAS;;AAAI;;AAAuB;;AACrF;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAA2B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAAI;;AAEpG;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+E;;AAE/G;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA+C;;AAAmB;;AAClE;;AAC1B;;AAAyB;;AAAO;;AAClC;;AACwB;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAC1B;;AACF;;AAC4B;;AAAkE;AAAA;;AAAA;;AAAA;AAAA;;AAC5F;;AACF;;AACwB;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA9CQ;;AAAA;;AAQA;;AAAA;;AAAmF;;AAAA;;AAGnF;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AAA4C;;AAAA;;AAC1D;;AAAA;;;;UDtGfmG,kB;AAGX,oCACUjI,MADV,EAEU8E,WAFV,EAGUkC,MAHV,EAG+B;AAAA;;AAFrB,eAAAhH,MAAA,GAAAA,MAAA;AACA,eAAA8E,WAAA,GAAAA,WAAA;AACA,eAAAkC,MAAA,GAAAA,MAAA;AACN;;;;qCAQI;AACN,iBAAKkB,gBAAL;AACD;;;6CAEkB;AAAA;;AACjB,iBAAKpD,WAAL,CAAiBqD,YAAjB,GAAgC/H,SAAhC,CACE,UAACe,IAAD,EAAU;AACR,oBAAI,CAAC7B,IAAL,GAAY6B,IAAI,CAACiH,WAAjB;AACAhH,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,MAAI,CAAC/B,IAAtC;AACD,aAJH,EAKE,UAAC+H,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAPH;AASD;;;uCACYzH,I,EAAM;AACjB,iBAAKkF,WAAL,CAAiB+C,YAAjB,CAA8BjI,IAA9B;AACA,iBAAKI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;oCACU8B,E,EAAI;AACZnC,mBAAO,CAACC,GAAR,CAAYkC,EAAZ;AAEA,iBAAK+D,QAAL,GAAgB/D,EAAhB;AACD,W,CAED;;;;4CACkB;AAAA;;AAChBnC,mBAAO,CAACC,GAAR,CAAY,KAAKiG,QAAjB;AAEA,iBAAKxC,WAAL,CAAiBkD,eAAjB,CAAiC,KAAKV,QAAtC,EAAgDlH,SAAhD,CAA0D,UAACe,IAAD,EAAU;AAClEC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAIA,IAAI,CAACT,IAAL,KAAc,GAAlB,EAAuB;AACrB,sBAAI,CAACsG,MAAL,CAAYQ,OAAZ,CAAoBrG,IAAI,CAACoD,OAAzB,EAAkC,SAAlC,EAA6C;AAC3CkD,yBAAO,EAAE;AADkC,iBAA7C;;AAGA,sBAAI,CAACS,gBAAL,GAJqB,CAKrB;AACA;;AACD;AACF,aAVD;AAWD;;;kCACO5I,I,EAAW;AACjB,iBAAKwF,WAAL,CAAiBoC,OAAjB,CAAyB5H,IAAzB;AACA,iBAAKwF,WAAL,CAAiB+C,YAAjB,CAA8B,WAA9B;AACA,iBAAK7H,MAAL,CAAYmH,aAAZ,CAA0B,kBAA1B;AACD;;;;;;;yBA5FUc,kB,EAAkB,uH,EAAA,6K,EAAA,yH;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,e;AAAA,k3C;AAAA;AAAA;ACR/B;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACJ;;AAGA;;AACI;;AAAuB;;AACnB;;AAAI;;AAAG;;AAA4C;;AAAI;;AACvD;;AACA;;AACI;;AAA6C;AAAA,qBAAS,IAAAJ,YAAA,CAAa,WAAb,CAAT;AAAkC,aAAlC;;AAAoC;;AAAO;;AAU5F;;AAEA;;AACI;;AACI;;AACI;;AACJ;;AAEA;;AACI;;AAAqD;AAAA;AAAA;;AAArD;;AACJ;;AAEA;;AAAsE;;AAAK;;AAC3E;;AAA6C;;AAAK;;AAAS;;AAC/D;;AACJ;;AACA;;AAAI;;AAAI;;AAGR;;AACI;;AACI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAU;;AAC9B;;AAEA;;AA+BI;;;;AAiDJ;;AAEJ;;AACJ;;AACJ;;AACJ;;;;AA7G6E;;AAAA;;AAuDrD;;AAAA;;;;;;;;;;wEDnFXI,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTrG,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6B4B;;AAAwC;;AAAoB;;;;;;AAC5D;;AAAyC;;AACzC;;;;;;AAHJ;;AACI;;AACA;;AAEJ;;;;;;AAHS;;AAAA;;AACA;;AAAA;;;;;;;;;;UDpBpBuG,gB;AAKX,kCACUvI,QADV,EAEUC,WAFV,EAGUC,MAHV,EAIUC,KAJV,EAIiC;AAAA;;AAHvB,eAAAH,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAPV,eAAAC,SAAA,GAAY,KAAZ;AAOoC;;;;qCAE5B;AAAA;;AACN,iBAAKD,KAAL,CAAWE,MAAX,CAAkBC,SAAlB,CAA4B,UAAAC,KAAK,EAAI;AACnC,qBAAI,CAACC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACD,aAFD;AAGA,iBAAKC,UAAL;AACD,W,CACD;;;;uCACa;AACX,iBAAK+H,WAAL,GAAmB,KAAKvI,WAAL,CAAiBU,KAAjB,CAAuB;AACxC8H,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW5H,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAD8B,aAAvB,CAAnB;AAGD,W,CACD;;;;AAGA;qCACW;AAAA;;AACT,iBAAKV,SAAL,GAAiB,IAAjB,CADS,CAET;;AACA,gBAAI,KAAKoI,WAAL,CAAiBvH,OAArB,EAA8B;AAC5B;AACD;;AACD,gBAAMzB,IAAI,GAAG;AACXgB,mBAAK,EAAE,KAAKA,KADD;AAEXkI,yBAAW,EAAE,KAAKF,WAAL,CAAiBrH,KAAjB,CAAuBsH;AAFzB,aAAb;AAKA,iBAAKzI,QAAL,CAAc0I,WAAd,CAA0BlJ,IAA1B,EAAgCc,SAAhC,CAA0C,UAAAe,IAAI,EAAI;AAChDC,qBAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAMG,MAAM,GAAGH,IAAI,CAACqG,OAApB;AACA,kBAAMjG,GAAG,GAAGJ,IAAI,CAACG,MAAjB;;AACA,kBAAIA,MAAJ,EAAY;AACVE,qBAAK,CAACD,GAAD,CAAL;;AACA,uBAAI,CAACvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,eAHD,MAGO;AACLD,qBAAK,CAACD,GAAD,CAAL;AACD;AACF,aAXD;AAYD;;;8BA1BO;AAAE,mBAAO,KAAK+G,WAAL,CAAiB5G,QAAxB;AAAmC;;;;;;;yBAxBlC2G,gB,EAAgB,sK,EAAA,2H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,iB;AAAA,e;AAAA,sqC;AAAA;AAAA;ACV7B;;AACA;;AAKA;;AACI;;AACI;;AACI;;AAEI;;AACJ;;AACJ;;AAEA;;AACI;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAmB;;AACvB;;AAAsD;AAAA,qBAAY,IAAA1G,QAAA,EAAZ;AAAsB,aAAtB;;AAClD;;AACI;;AACI;;AACA;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAA2D;;AAAM;;AACrE;;AACA;;AAA4D;;AAAK;;AAGrE;;AACJ;;AAEJ;;AACJ;;;;AA5BwC;;AAAA;;AAI6M;;AAAA;;AACxN;;AAAA;;;;;;;;;wEDlBhB0G,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTzG,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEiJb;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAChC;;AACA;;AAA0D;;AAAO;;AACrE;;;;UCpJH2G,kB;AAGX,oCACS3D,WADT,EAES9E,MAFT,EAGUgH,MAHV,EAGiC;AAAA;;AAFxB,eAAAlC,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AACC,eAAAgH,MAAA,GAAAA,MAAA;AAA0B;;;;qCAE5B;AACN,iBAAKhC,YAAL;AACD,W,CACC;;;;yCACgB;;;;;;;;AAEF,6BAAM,KAAKF,WAAL,CAAiBG,QAAjB,EAAN;;;AAARrB,2B;;AACe,6BAAM,KAAKkB,WAAL,CAAiBI,eAAjB,CAAiCtB,KAAjC,CAAN;;;AAAfuB,kC;AACN,2BAAKC,SAAL,GAAiBD,YAAY,CAAChE,IAA9B,C,CACA;;;;;;;;;AACD,W,CAED;;;;oCACU;AAER,gBAAMyC,KAAK,GAAG,KAAKkB,WAAL,CAAiBG,QAAjB,EAAd,CAFQ,CAGR;;AACA,mBAAOrB,KAAP;AACD,W,CACD;;;;mCACS;AACPC,wBAAY,CAACM,UAAb,CAAwB,OAAxB;AACA,iBAAK6C,MAAL,CAAYQ,OAAZ,CAAoB,YAApB,EAAkC,SAAlC,EAA6C;AAC3CC,qBAAO,EAAE;AADkC,aAA7C;AAGArG,mBAAO,CAACC,GAAR,CAAY,YAAZ;AACA,iBAAKrB,MAAL,CAAYmH,aAAZ,CAA0B,GAA1B;AACD;;;;;;;yBAnCUsB,kB,EAAkB,sK,EAAA,uH,EAAA,yH;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,e;AAAA,0hE;AAAA;AAAA;ADV/B;;AAKA;;AAGI;;AACA;;AAAO;;AAAgB;;AACvB;;AACA;;AAGJ;;AAqCA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAkB;;AAAe;;AACrC;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAwB;;AAClC;;AACU;;AAAwB;;AAAqB;;AAC7C;;AACR;;AACA;;AAAM;;AAAM;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AACI;;AACZ;;AACF;;AACU;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAM;;AAAS;;AACnB;;AACA;;AACI;;AACI;;AACA;;AAAM;;AAAY;;AACtB;;AAEJ;;AAEA;;AACI;;AACI;;AACA;;AAAO;;AAAK;;AAChB;;AAEJ;;AACA;;AACI;;AACI;;AACA;;AAAM;;AAAS;;AACnB;;AAEJ;;AACA;;AACI;;AACI;;AACA;;AAAM;;AAAI;;AACd;;AAEJ;;AAEA;;AACI;;AACI;;AACA;;AAAM;;AAAI;;AACd;;AAEJ;;AAEA;;AACI;;AACI;;AACA;;AAAM;;AAAQ;;AAClB;;AAEJ;;AACA;;AACI;;AACI;;AACA;;AAAM;;AAAI;;AACV;;AAA0C;;AAAG;;AACjD;;AAEJ;;AAQJ;;AACJ;;AACA;;AACI;;AAIA;;AACI;;AACA;;AAA0D;;AAAC;;AAC/D;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAzG4C;;AAAA;;AAEA;;AAAA;;AAwFV;;AAAA;;;;;;;;;wECjJrBA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT7G,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAAA;;;UAWa4G,Y;AAQX,8BACS3I,WADT,EACmC;AAC1B+E,mBAFT,EAE6C;AACpC9E,cAHT,EAGyB;AAAA;;AAFhB,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAA+E,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AAVT,eAAA2I,OAAA,GAAU,KAAV;AACA,eAAAC,KAAA,GAAQ,qCAAR,CASyB,CAPzB;;AACA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAA3I,SAAA,GAAY,KAAZ;AAMC,S,CAED;;;;;qCACQ;AAEN,iBAAKK,UAAL,GAFM,CAGN;AAED,W,CACD;;;;oCACU;AAER,gBAAMqD,KAAK,GAAG,KAAKkB,WAAL,CAAiBG,QAAjB,EAAd,CAFQ,CAGR;;AACA,mBAAOrB,KAAP,CAJQ,CAKR;AACA;AACA;AACA;AACA;AACA;AACD,W,CACD;;;;mCACS;AACPC,wBAAY,CAACM,UAAb,CAAwB,OAAxB;AACA,iBAAKnE,MAAL,CAAYmH,aAAZ,CAA0B,GAA1B;AACD,W,CAED;;;;uCACa;AACX,iBAAK2B,SAAL,GAAiB,KAAK/I,WAAL,CAAiBU,KAAjB,CAAuB;AACtCH,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWK,QAAZ,EAAsB,0DAAWL,KAAjC,EAAwC,0DAAWQ,OAAX,CAAmB,2CAAnB,CAAxC,CAAL,CAD+B;AAEtCyH,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW5H,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAF4B,aAAvB,CAAjB;AAKD,W,CACD;;;;AAIA;sCACY;AACV,iBAAKV,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK4I,SAAL,CAAe/H,OAAnB,EAA4B;AAC1B;AACD,aAJS,CAKV;;;AACA,iBAAK+D,WAAL,CAAiBiE,KAAjB,CAAuB,KAAKD,SAAL,CAAe7H,KAAtC,EAA6Cb,SAA7C,CAAuD,UAAAe,IAAI,EAAI;AAE7DC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAMG,MAAM,GAAGH,IAAI,CAACG,MAApB;AACA,kBAAMC,GAAG,GAAWJ,IAAI,CAACI,GAAzB;AACAH,qBAAO,CAACC,GAAR,CAAY,aAAaC,MAAzB;AACAF,qBAAO,CAACC,GAAR,CAAY,cAAcE,GAA1B;;AACA,kBAAID,MAAJ,EAAY,CAEX,CAFD,MAEO;AACLE,qBAAK,CAAC,4BAAD,CAAL;AACD;AACF,aAZD;AAaD,W,CACD;AACA;;;;8BAzBY;AACV,mBAAO,KAAKsH,SAAL,CAAe5G,GAAf,CAAmB,OAAnB,CAAP;AACD;;;8BAwBO;AAAE,mBAAO,KAAK4G,SAAL,CAAepH,QAAtB;AAAiC;;;;;;;yBA3EhCgH,Y,EAAY,2H,EAAA,sK,EAAA,uH;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACwHzB;;;;;;;;;wEDxHaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACT9G,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEHZkH,Y;AACX,8BAAoBhJ,MAApB,EAA4C8E,WAA5C,EAAgF;AAAA;;AAA5D,eAAA9E,MAAA,GAAAA,MAAA;AAAwB,eAAA8E,WAAA,GAAAA,WAAA;AAAsC;;;;wCAE9D;;;;;;;;AACJ,6BAAM,KAAKA,WAAL,CAAiBG,QAAjB,EAAN;;;AAARrB,2B;;0BACDA,K;;;;;AACH,2BAAK5D,MAAL,CAAYmH,aAAZ,CAA0B,GAA1B;;;;;wDAEO,I;;;;;;;;;AAEV;;;;;;;yBAVU6B,Y,EAAY,8G,EAAA,oJ;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACV7G,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYa8G,gB;AAMX,kCAAoBlJ,WAApB,EACU+E,WADV,EAEU9E,MAFV,EAGUgH,MAHV,EAGiC;AAAA;;AAHb,eAAAjH,WAAA,GAAAA,WAAA;AACV,eAAA+E,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AACA,eAAAgH,MAAA,GAAAA,MAAA;AARV,eAAA9G,SAAA,GAAY,KAAZ;AAQoC;;;;wCACtB;AACZ,iBAAKgJ,aAAL,GAAqB,KAAKnJ,WAAL,CAAiBU,KAAjB,CAAuB;AAC1C0I,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWxI,QAAhB,CAD6B;AAE1CyI,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAWzI,QAAhB,CAF4B;AAG1C0I,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW1I,QAAhB,CAH8B;AAI1C2I,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW3I,QAAhB,CAJ+B;AAK1C4I,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAW5I,QAAhB,CAL4B;AAM1C6I,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAW7I,QAAhB,CAN6B;AAO1C8I,wBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW9I,QAAhB,CAP8B;AAQ1C+I,2BAAa,EAAE,CAAC,EAAD,EAAK,0DAAW/I,QAAhB,CAR2B;AAS1CgJ,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAWhJ,QAAhB;AAT4B,aAAvB,CAArB;AAWD,W,CACD;;;;qCAEQ;AACN,iBAAKiJ,WAAL;AACD;;;uCACY;AACX,iBAAK1J,SAAL,GAAiB,IAAjB,CADW,CACe;;AAC1B,gBAAI,KAAKgJ,aAAL,CAAmBnI,OAAvB,EAAgC;AAC9B,mBAAKiG,MAAL,CAAY3C,KAAZ,CAAkB,cAAlB,EAAkC,OAAlC,EAA2C;AACzCoD,uBAAO,EAAE;AADgC,eAA3C;AAGArG,qBAAO,CAACC,GAAR,CAAY,WAAZ;AACA;AACD;;AACD,iBAAK6H,aAAL,CAAmBW,KAAnB;AACA,iBAAK7C,MAAL,CAAYQ,OAAZ,CAAoB,YAApB,EAAkC,SAAlC,EAA6C;AAC3CC,qBAAO,EAAE;AADkC,aAA7C;AAGD;;;8BAjBO;AAAE,mBAAO,KAAKyB,aAAL,CAAmBxH,QAA1B;AAAqC;;;;;;;yBAxBpCuH,gB,EAAgB,2H,EAAA,6K,EAAA,uH,EAAA,yH;AAAA,O;;;cAAhBA,gB;AAAgB,oC;AAAA,kB;AAAA,e;AAAA,wgD;AAAA;AAAA;ACZ7B;;AACI;;AACI;;AACI;;AACA;;AAAI;;AAAG;;AAAiB;;AAAI;;AAChC;;AACA;;AACI;;AACI;;AAA6B;;AAAM;;AACnC;;AACI;;AACI;;AACI;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAEA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AAA8C;;AAAQ;;AAC1D;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AAA8C;;AAAI;;AAAS;;AAC3D;;AAA6C;;AAAM;;AACvD;;AACJ;;AACJ;;AAIA;;AAA6B;;AAAS;;AACtC;;AACI;;AACI;;AAAI;;AAAgB;;AACpB;;AACI;;AAAyB;;AACrB;;AACA;;AAEA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAAe;;AACnB;;AACI;;AAAyB;;AACrB;;AACA;;AAEA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACA;;AACA;;AACA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACA;;AACI;;AACI;;AACA;;AACA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AAA8C;;AAAY;;AAE9D;;AACA;;AACI;;AAA8C;;AAAI;;AAAS;;AAC3D;;AAA6C;;AAAM;;AACvD;;AACJ;;AACJ;;AAIA;;AAA6B;;AAAc;;AAC3C;;AACI;;AACI;;AACI;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAEA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACA;;AAAI;;AACR;;AACA;;AACI;;AACI;;AAA8C;;AAAiB;;AAEnE;;AACA;;AACI;;AAA8C;;AAAI;;AAAS;;AAC3D;;AAA6C;;AAAM;;AAEvD;;AACJ;;AACJ;;AAIA;;AAA6B;;AAAY;;AACzC;;AACI;;AACI;;AACI;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAEA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AAEA;;AAAiC;;AAAI;;AACjC;;AACI;;AAA8C;;AAAe;;AAEjE;;AACA;;AACI;;AAA8C;;AAAI;;AAAS;;AAC3D;;AAA6C;;AAAM;;AAEvD;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AArNwC;;AAAA;;;;;;;;;wEDK3BA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTrH,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAAA;AAIA;AACA;AACA;AACA;AAKA;AAaA;AACA;AA0BA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;AACA,kFAAmB,kEAAnB;;UA+DagI,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBART,CACT;AACA;AACA;AACA;AAJS,S;AAKV,kBAxBQ,CACP,qEADO,EAEP;AACA,+EAHO,EAIP,oEAJO,EAKP,qEALO,EAMP,6FANO,EAOP,yDAAaC,OAAb,EAPO,EAQP,mEARO,EASP,0EATO,EAUP,wEAVO,EAWP,2DAXO,EAYP,qEAZO,EAaP;AACA,8EAdO,EAeP,mEAfO,EAgBP,qEAhBO,CAiBP;AAjBO,SAwBR;;;;4HAGUD,S,EAAS;AAAA,yBA3DlB,2DA2DkB,EA1DlB,+DA0DkB,EAzDlB,sEAyDkB,EAxDlB,yEAwDkB,EAvDlB,qFAuDkB,EAtDlB,uGAsDkB,EArDlB,4EAqDkB,EApDlB,kFAoDkB,EAnDlB,kFAmDkB,EAlDlB,sFAkDkB,EAjDlB,4FAiDkB,EAhDlB,gFAgDkB,EA/ClB,gFA+CkB,EA9ClB;AACA;AACA,sGA4CkB,EA3ClB,gGA2CkB,EA1ClB,gGA0CkB,EAzClB,gGAyCkB,EAxClB,gGAwCkB,EAvClB,gGAuCkB,EAtClB,yFAsCkB,EArClB,sFAqCkB,EApClB,iGAoCkB,EAnClB,iGAmCkB,EAlClB,uHAkCkB,EAjClB,yEAiCkB,EAhClB,mFAgCkB,EA/BlB,4EA+BkB,EA9BlB,4FA8BkB,EA7BlB,6EA6BkB;AA7BL,oBAGb,qEAHa,EAIb;AACA,iFALa,EAMb,oEANa,EAOb,qEAPa,EAQb,6FARa,EAQU,wDARV,EASW;AACxB,6EAVa,EAWb,0EAXa,EAYb,wEAZa,EAab,2DAba,EAcb,qEAda,EAeb;AACA,gFAhBa,EAiBb,mEAjBa,EAkBb,qEAlBa,CAmBb;AAnBa;AA6BK,S;;;;;;wEAATA,S,EAAS;gBA7DrB,sDA6DqB;iBA7DZ;AACRE,wBAAY,EAAE,CACZ,2DADY,EAEZ,+DAFY,EAGZ,sEAHY,EAIZ,yEAJY,EAKZ,qFALY,EAMZ,uGANY,EAOZ,4EAPY,EAQZ,kFARY,EASZ,kFATY,EAUZ,sFAVY,EAWZ,4FAXY,EAYZ,gFAZY,EAaZ,gFAbY,EAcZ;AACA;AACA,wGAhBY,EAiBZ,gGAjBY,EAkBZ,gGAlBY,EAmBZ,gGAnBY,EAoBZ,gGApBY,EAqBZ,gGArBY,EAsBZ,yFAtBY,EAuBZ,sFAvBY,EAwBZ,iGAxBY,EAyBZ,iGAzBY,EA0BZ,uHA1BY,EA2BZ,yEA3BY,EA4BZ,mFA5BY,EA6BZ,4EA7BY,EA8BZ,4FA9BY,EA+BZ,6EA/BY,CADN;AAkCRC,mBAAO,EAAE,CACP,qEADO,EAEP;AACA,mFAHO,EAIP,oEAJO,EAKP,qEALO,EAMP,6FANO,EAOP,yDAAaF,OAAb,EAPO,EAQP,mEARO,EASP,0EATO,EAUP,wEAVO,EAWP,2DAXO,EAYP,qEAZO,EAaP;AACA,kFAdO,EAeP,mEAfO,EAgBP,qEAhBO,CAiBP;AAjBO,aAlCD;AAqDRG,qBAAS,EAAE,CACT;AACA;AACA;AACA;AAJS,aArDH;AA2DRC,qBAAS,EAAE,CAAC,2DAAD;AA3DH,W;AA6DY,U;;;;;;;;;;;;;;;;;;ACpItB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBoC;;AAAkC;;AAAc;;;;;;AADpD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAYL;;AAAsC;;AAAkB;;;;;;AAD5D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAaL;;AAAoC;;AAAgB;;;;;;AADxD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAkBL;;AAAuC;;AAAmB;;;;;;AAD9D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAkBL;;AAAyC;;AAAyB;;;;;;AADtE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAkBL;;AAAuC;;AAA2B;;;;;;AADtE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAaL;;AAAoC;;AAAgB;;;;;;AADxD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAaL;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAaL;;AAAsC;;AAAkB;;;;;;AAD5D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAaL;;AAAwC;;AAAwB;;;;;;AADpE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAaL;;AAAuC;;AAAmB;;;;;;AAD9D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAcL;;AAA2C;;AAAuB;;;;;;AADtE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAcL;;AAA4C;;AAAwB;;;;;;AADxE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAmBL;;AAA4C;;AAAwB;;;;;;AADxE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAkBL;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;UDtN5BC,iB;AAQX,mCAAoBrK,WAApB,EACoB+E,WADpB,EAEoB9E,MAFpB,EAGoBgH,MAHpB,EAG2C;AAAA;;AAHvB,eAAAjH,WAAA,GAAAA,WAAA;AACA,eAAA+E,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AACA,eAAAgH,MAAA,GAAAA,MAAA;AAVpB,eAAA9G,SAAA,GAAY,KAAZ;AAU8C;;;;wCAChC;AACZ,iBAAKmK,WAAL,GAAmB,KAAKtK,WAAL,CAAiBU,KAAjB,CAAuB;AACxCkG,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWhG,QAAhB,CAD8B;AAExC2J,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAW3J,QAAhB,CAFgC;AAGxC4C,gBAAE,EAAE,CAAC,EAAD,EAAK,0DAAW5C,QAAhB,CAHoC;AAIxC4J,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAW5J,QAAhB,CAJ0B;AAKxC6J,0BAAY,EAAE,CAAC,EAAD,EAAK,0DAAW7J,QAAhB,CAL0B;AAMxC8J,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW9J,QAAhB,CAN8B;AAOxC+J,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW/J,QAAhB,CAP8B;AAQxCgK,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWhK,QAAhB,CARkC;AASxCiK,kBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWjK,QAAhB,CATkC;AAUxCkK,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWlK,QAAhB,CAV+B;AAWxCmK,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWnK,QAAhB,CAX6B;AAYxCoK,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWpK,QAAhB,CAZ+B;AAaxCqK,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWrK,QAAhB,CAbgC;AAcxCsK,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWtK,QAAhB,CAd+B;AAexCuK,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWvK,QAAhB;AAf2B,aAAvB,CAAnB;AAiBD,W,CACD;;;;qCAEQ;AACN,iBAAKiJ,WAAL;AACA,iBAAKuB,SAAL;AACA,iBAAKC,YAAL;AACD;;;sCACa;AAAA;;AACV,iBAAKtG,WAAL,CAAiBqG,SAAjB,GAA6B/K,SAA7B,CACE,UAACe,IAAD,EAAU;AACR,qBAAI,CAACkK,MAAL,GAAclK,IAAd;AACAC,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,OAAI,CAACgK,MAA7B;AACD,aAJH,EAKE,UAAChE,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAPH;AASD;;;yCACkB;AAAA;;AACb,iBAAKvC,WAAL,CAAiBsG,YAAjB,GAAgChL,SAAhC,CACE,UAACe,IAAD,EAAU;AACR,qBAAI,CAACmK,SAAL,GAAiBnK,IAAjB;AACAC,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,OAAI,CAACiK,SAAhC;AACD,aAJH,EAKE,UAACjE,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAPH;AASD;;;uCACM;AACX,iBAAKnH,SAAL,GAAiB,IAAjB,CADW,CACe;;AAC1B,gBAAI,KAAKmK,WAAL,CAAiBtJ,OAArB,EAA8B;AAC5B,mBAAKiG,MAAL,CAAY3C,KAAZ,CAAkB,cAAlB,EAAkC,OAAlC,EAA2C;AACzCoD,uBAAO,EAAE;AADgC,eAA3C,EAD4B,CAI5B;;AACA;AACD;;AACD,iBAAK4C,WAAL,CAAiBR,KAAjB;AACA,iBAAK7C,MAAL,CAAYQ,OAAZ,CAAoB,YAApB,EAAkC,SAAlC,EAA6C;AAC3CC,qBAAO,EAAE;AADkC,aAA7C;AAGD;;;8BAzCO;AAAE,mBAAO,KAAK4C,WAAL,CAAiB3I,QAAxB;AAAmC;;;;;;;yBAhClC0I,iB,EAAiB,2H,EAAA,6K,EAAA,uH,EAAA,yH;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,kB;AAAA,gB;AAAA,kjF;AAAA;AAAA;ACZ9B;;AACI;;AACI;;AACI;;AACA;;AAAI;;AAAG;;AAAiB;;AAAI;;AAChC;;AACA;;AACI;;AACI;;AAA6B;;AAAQ;;AACrC;;AACI;;AACI;;AACI;;AACI;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AACA;;AAEA;;AAGA;;AACI;;AAAsB;;AAAK;;AAC3B;;AAAuB;;AAAM;;AAC7B;;AAAqB;;AAAI;;AAC7B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AACA;;AAEA;;AAGA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAqB;;AAAI;;AACzB;;AAAqB;;AAAI;;AAC7B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AACI;;AACA;;AAEA;;AAGA;;AACI;;AAA0B;;AAAS;;AACnC;;AAAsB;;AAAK;;AAC3B;;AAAiC;;AAAgB;;AACrD;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAI;;AACJ;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAI;;AACJ;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAI;;AACJ;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAI;;AACJ;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAI;;AACJ;;AACA;;AAGA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AACI;;AACA;;AAGA;;AAGA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AACI;;AACA;;AAGA;;AAGA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAI;;AACJ;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AAAQ;AAAA,qBAAS,IAAAmB,UAAA,EAAT;AAAqB,aAArB;;AAA+C;;AAAG;;AAE9D;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA3OwC;;AAAA;;AAQe;;AAAA;;AAClB;;AAAA;;AAWkB;;AAAA;;AAClB;;AAAA;;AAYD;;AAAA;;AACC;;AAAA;;AAiBD;;AAAA;;AACC;;AAAA;;AAiBD;;AAAA;;AACC;;AAAA;;AAiBkB;;AAAA;;AAClB;;AAAA;;AAYkB;;AAAA;;AAClB;;AAAA;;AAYkB;;AAAA;;AAClB;;AAAA;;AAYkB;;AAAA;;AAClB;;AAAA;;AAYkB;;AAAA;;AAClB;;AAAA;;AAYkB;;AAAA;;AAClB;;AAAA;;AAaD;;AAAA;;AACC;;AAAA;;AAaD;;AAAA;;AACC;;AAAA;;AAkBD;;AAAA;;AACC;;AAAA;;AAiBkB;;AAAA;;AAClB;;AAAA;;;;;;;;;wEDrNxBnB,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTxI,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa0J,Y;AAuEX,8BAAoBC,UAApB,EAAmD;AAAA;;AAA/B,eAAAA,UAAA,GAAAA,UAAA;AAtEpB,eAAAC,OAAA,GAAU,CAAV;AAEA,eAAAC,KAAA,GAAQ,oCAAR;AACA,eAAAC,GAAA,GAAM,SAAN;AACA,eAAAC,GAAA,GAAM,SAAN;AACD,eAAAC,OAAA,GAAU;AACPlB,gBAAI,EAAE,mBADC;AAEPmB,oBAAQ,EAAE,CACR;AACEnB,kBAAI,EAAE,SADR;AAEEoB,wBAAU,EAAE;AACVzH,uBAAO,EAAE,KADC;AAEV0H,wBAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAFA,eAFd;AAMEC,sBAAQ,EAAE;AACRtB,oBAAI,EAAE,OADE;AAERuB,2BAAW,EAAE;AAAEP,qBAAG,EAAE,eAAP;AAAwBC,qBAAG,EAAE;AAA7B;AAFL;AANZ,aADQ,EAYR;AACEjB,kBAAI,EAAE,SADR;AAEEoB,wBAAU,EAAE;AACVzH,uBAAO,EAAE,KADC;AAEV0H,wBAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAFA,eAFd;AAMEC,sBAAQ,EAAE;AACRtB,oBAAI,EAAE,OADE;AAERuB,2BAAW,EAAE;AAAEP,qBAAG,EAAE,aAAP;AAAsBC,qBAAG,EAAE;AAA3B;AAFL;AANZ,aAZQ,EAuBR;AACEjB,kBAAI,EAAE,SADR;AAEEoB,wBAAU,EAAE;AACVzH,uBAAO,EAAE,KADC;AAEV0H,wBAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAFA,eAFd;AAMEC,sBAAQ,EAAE;AACRtB,oBAAI,EAAE,OADE;AAERuB,2BAAW,EAAE;AAAEP,qBAAG,EAAE,iBAAP;AAA0BC,qBAAG,EAAE;AAA/B;AAFL;AANZ,aAvBQ;AAFH,WAAV;AAuCC,eAAAO,QAAA,GAAW,CACT;AACER,eAAG,EAAE,QADP;AAEEC,eAAG,EAAE,SAFP;AAGEQ,eAAG,EAAE,WAHP;AAIEC,gBAAI,EAAE,CAAC,EAAD,EAAK,EAAL;AAJR,WADS,EAOT;AACEV,eAAG,EAAE,OADP;AAEEC,eAAG,EAAE,OAFP;AAGEQ,eAAG,EAAE,YAHP;AAIEC,gBAAI,EAAE,CAAC,EAAD,EAAK,EAAL;AAJR,WAPS,EAaT;AACEV,eAAG,EAAE,OADP;AAEEC,eAAG,EAAE,OAFP;AAGEQ,eAAG,EAAE,UAHP;AAIEC,gBAAI,EAAE,CAAC,EAAD,EAAK,EAAL;AAJR,WAbS,EAmBT;AACEV,eAAG,EAAE,OADP;AAEEC,eAAG,EAAE,OAFP;AAGEQ,eAAG,EAAE,SAHP;AAIEC,gBAAI,EAAE,CAAC,EAAD,EAAK,EAAL;AAJR,WAnBS,CAAX;AA0BsD;;;;qCAE3C;AACT,iBAAKC,gBAAL,GADS,CAGT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAED;;;6CACkB;AAAA;;AACjB,iBAAKC,GAAL,GAAW,IAAI,6CAAJ,CAAiB;AAC1BhG,yBAAW,EACT,kGAFwB;AAG1BiG,uBAAS,EAAE,KAHe;AAI1Bd,mBAAK,EAAE,oCAJmB;AAK1Be,oBAAM,EAAE,CAAC,SAAD,EAAa,SAAb,CALkB;AAM1BC,kBAAI,EAAE;AANoB,aAAjB,CAAX;AAQA,iBAAKP,QAAL,CAAcQ,OAAd,CAAsB,UAACC,MAAD,EAAY;AAChC;AACA,kBAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACAF,gBAAE,CAACG,SAAH,GAAe,QAAf;AACAH,gBAAE,CAACnB,KAAH,CAASuB,eAAT,GAA2B,oCAA3B;AACAJ,gBAAE,CAACK,SAAH,GAAeN,MAAM,CAACR,GAAtB;AACAS,gBAAE,CAACnB,KAAH,CAASyB,SAAT,GAAqB,MAArB;AACAN,gBAAE,CAACnB,KAAH,CAAS0B,SAAT,GAAqB,QAArB;AACAP,gBAAE,CAACnB,KAAH,CAAS2B,KAAT,GAAiB,OAAjB;AACAR,gBAAE,CAACnB,KAAH,CAAS4B,KAAT,GAAiBV,MAAM,CAACP,IAAP,CAAY,CAAZ,IAAiB,IAAlC;AACAQ,gBAAE,CAACnB,KAAH,CAAS6B,MAAT,GAAkBX,MAAM,CAACP,IAAP,CAAY,CAAZ,IAAiB,IAAnC;AACAQ,gBAAE,CAACnB,KAAH,CAAS8B,QAAT,GAAoB,MAApB;AACAX,gBAAE,CAACnB,KAAH,CAAS+B,UAAT,GAAsB,KAAtB;AACAZ,gBAAE,CAACnB,KAAH,CAASgC,UAAT,GAAsB,SAAtB;AACA,kBAAI,gDAAJ,CAAoBb,EAApB,EACGc,SADH,CACa,CACTf,MAAM,CAACjB,GADE,EAETiB,MAAM,CAAChB,GAFE,CADb,EAKGgC,QALH,CAKY,IAAI,+CAAJ,GAAqBC,OAArB,CAA6BjB,MAAM,CAACR,GAApC,CALZ,EAMG0B,KANH,CAMS,OAAI,CAACvB,GANd;AAOD,aArBD,EATiB,CA+BjB;;AACA,iBAAKwB,aAAL;AACA,iBAAKxB,GAAL,CAASyB,UAAT,CAAoB,IAAI,2DAAJ,EAApB;AACA,iBAAKzB,GAAL,CAASyB,UAAT,CAAoB,IAAI,2DAAJ,EAApB;AACA,iBAAKzB,GAAL,CAASyB,UAAT,CACE,IAAI,0DAAJ,CAA8B;AAC5BC,6BAAe,EAAE;AACfC,kCAAkB,EAAE;AADL,eADW;AAI5BC,+BAAiB,EAAE;AAJS,aAA9B,CADF;AAQD;;;0CAEe;AAAA;;AACd,gBAAMC,MAAM,GAAGtB,QAAQ,CAACuB,cAAT,CAAwB,QAAxB,CAAf;AACA,gBAAMC,WAAW,GAAGxB,QAAQ,CAACuB,cAAT,CAAwB,cAAxB,CAApB;AACA,iBAAK9B,GAAL,CAASgC,EAAT,CAAY,MAAZ,EAAoB,YAAM;AACxB;AACA,qBAAI,CAAChC,GAAL,CAASiC,SAAT,CAAmB,eAAnB,EAAoC;AAClC7D,oBAAI,EAAE,OAD4B;AAElC1H,mBAAG,EAAE,2BAF6B;AAGlCiJ,2BAAW,EAAE,CACX,CAAC,SAAD,EAAa,SAAb,CADW,EAEX,CAAC,SAAD,EAAY,SAAZ,CAFW,EAGX,CAAC,SAAD,EAAY,SAAZ,CAHW,EAIX,CAAC,SAAD,EAAY,SAAZ,CAJW;AAHqB,eAApC;;AAUA,qBAAI,CAACK,GAAL,CAASkC,QAAT,CAAkB;AAChBnL,kBAAE,EAAE,eADY;AAEhBoL,sBAAM,EAAE,eAFQ;AAGhB/D,oBAAI,EAAE,QAHU;AAIhBgE,qBAAK,EAAE;AACL,oCAAkB,OAAI,CAAClD;AADlB;AAJS,eAAlB;;AASA2C,oBAAM,CAAC3I,gBAAP,CAAwB,OAAxB,EAAiC,UAACmJ,CAAD,EAAO;AACtC;AACA;AACA;AACA;AACA,oBAAMC,KAAK,GAAI/B,QAAQ,CAACuB,cAAT,CAAwB,QAAxB,EACZrN,KADH;;AAEA,uBAAI,CAACuL,GAAL,CAASuC,gBAAT,CACE,eADF,EAEE,gBAFF,EAGEC,QAAQ,CAAC,KAAKF,KAAL,GAAa,EAAd,EAAkB,EAAlB,CAAR,GAAgC,GAHlC,EAPsC,CAYtC;;;AACAP,2BAAW,CAACU,WAAZ,GAA0B,KAAKH,KAAL,GAAa,EAAb,GAAkB,GAA5C;AACD,eAdD;AAeD,aApCD;AAsCA,iBAAKtC,GAAL,CAASgC,EAAT,CAAY,MAAZ,EAAoB,YAAM;AACxB;AACA,qBAAI,CAAChC,GAAL,CAASiC,SAAT,CAAmB,KAAnB,EAA0B;AACxB7D,oBAAI,EAAE,OADkB;AAExB1H,mBAAG,EAAE,gBAFmB;AAGxBiJ,2BAAW,EAAE,CACX,CAAC,SAAD,EAAY,SAAZ,CADW,EAEX,CAAC,SAAD,EAAa,SAAb,CAFW,EAGX,CAAC,SAAD,EAAY,SAAZ,CAHW,EAIX,CAAC,SAAD,EAAY,SAAZ,CAJW;AAHW,eAA1B;;AAUA,qBAAI,CAACK,GAAL,CAASkC,QAAT,CAAkB;AAChBnL,kBAAE,EAAE,KADY;AAEhBoL,sBAAM,EAAE,KAFQ;AAGhB/D,oBAAI,EAAE,QAHU;AAIhBgE,qBAAK,EAAE;AACL,oCAAkB,OAAI,CAAClD;AADlB;AAJS,eAAlB;;AASA2C,oBAAM,CAAC3I,gBAAP,CAAwB,OAAxB,EAAiC,UAACmJ,CAAD,EAAO;AACtC,oBAAMC,KAAK,GAAI/B,QAAQ,CAACuB,cAAT,CAAwB,QAAxB,EACZrN,KADH;;AAEA,uBAAI,CAACuL,GAAL,CAASuC,gBAAT,CACE,KADF,EAEE,gBAFF,EAGEC,QAAQ,CAAC,KAAKF,KAAL,GAAa,EAAd,EAAkB,EAAlB,CAAR,GAAgC,GAHlC,EAHsC,CAQtC;;;AACAP,2BAAW,CAACU,WAAZ,GAA0B,KAAKH,KAAL,GAAa,EAAb,GAAkB,GAA5C;AACD,eAVD;AAWD,aAhCD;AAiCA,iBAAKtC,GAAL,CAASgC,EAAT,CAAY,MAAZ,EAAoB,YAAM;AACxB;AACA,qBAAI,CAAChC,GAAL,CAASiC,SAAT,CAAmB,SAAnB,EAA8B;AAC5B7D,oBAAI,EAAE,OADsB;AAE5B1H,mBAAG,EAAE,oBAFuB;AAG5BiJ,2BAAW,EAAE,CACX,CAAC,SAAD,EAAY,SAAZ,CADW,EAEX,CAAC,SAAD,EAAY,SAAZ,CAFW,EAGX,CAAC,SAAD,EAAY,SAAZ,CAHW,EAIX,CAAC,SAAD,EAAY,SAAZ,CAJW,CAIY;AAJZ;AAHe,eAA9B;;AAUA,qBAAI,CAACK,GAAL,CAASkC,QAAT,CAAkB;AAChBnL,kBAAE,EAAE,SADY;AAEhBoL,sBAAM,EAAE,SAFQ;AAGhB/D,oBAAI,EAAE,QAHU;AAIhBgE,qBAAK,EAAE;AACL,oCAAkB,OAAI,CAAClD;AADlB;AAJS,eAAlB;;AASA2C,oBAAM,CAAC3I,gBAAP,CAAwB,OAAxB,EAAiC,UAACmJ,CAAD,EAAO;AACtC,oBAAMC,KAAK,GAAI/B,QAAQ,CAACuB,cAAT,CAAwB,QAAxB,EACZrN,KADH;;AAEA,uBAAI,CAACuL,GAAL,CAASuC,gBAAT,CACE,SADF,EAEE,gBAFF,EAGEC,QAAQ,CAAC,KAAKF,KAAL,GAAa,EAAd,EAAkB,EAAlB,CAAR,GAAgC,GAHlC,EAHsC,CAQtC;;;AACAP,2BAAW,CAACU,WAAZ,GAA0B,KAAKH,KAAL,GAAa,EAAb,GAAkB,GAA5C;AACD,eAVD;AAWD,aAhCD,EA1Ec,CA4Gd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAKtC,GAAL,CAASgC,EAAT,CAAY,MAAZ,EAAoB,YAAM;AACxB;AACA,qBAAI,CAAChC,GAAL,CAASiC,SAAT,CAAmB,MAAnB,EAA2B;AACzB7D,oBAAI,EAAE,OADmB;AAEzB1H,mBAAG,EAAE,kCAFoB;AAGzBiJ,2BAAW,EAAE,CACX,CAAE,SAAF,EAAa,SAAb,CADW,EAEX,CAAE,SAAF,EAAa,SAAb,CAFW,EAGX,CAAE,SAAF,EAAa,SAAb,CAHW,EAIX,CAAE,SAAF,EAAa,SAAb,CAJW;AAHY,eAA3B;;AAUA,qBAAI,CAACK,GAAL,CAASkC,QAAT,CAAkB;AAChBnL,kBAAE,EAAE,MADY;AAEhBoL,sBAAM,EAAE,MAFQ;AAGhB/D,oBAAI,EAAE,QAHU;AAIhBgE,qBAAK,EAAE;AACL,oCAAkB,OAAI,CAAClD;AADlB;AAJS,eAAlB;;AASA2C,oBAAM,CAAC3I,gBAAP,CAAwB,OAAxB,EAAiC,UAACmJ,CAAD,EAAO;AACtC,oBAAMC,KAAK,GAAI/B,QAAQ,CAACuB,cAAT,CAAwB,QAAxB,EACZrN,KADH;;AAEA,uBAAI,CAACuL,GAAL,CAASuC,gBAAT,CACE,MADF,EAEE,gBAFF,EAGEC,QAAQ,CAAC,KAAKF,KAAL,GAAa,EAAd,EAAkB,EAAlB,CAAR,GAAgC,GAHlC,EAHsC,CAQtC;;;AACAP,2BAAW,CAACU,WAAZ,GAA0B,KAAKH,KAAL,GAAa,EAAb,GAAkB,GAA5C;AACD,eAVD;AAWD,aAhCD;AAiCA,iBAAKtC,GAAL,CAASgC,EAAT,CAAY,MAAZ,EAAoB,YAAM;AACxB;AACA,qBAAI,CAAChC,GAAL,CAASiC,SAAT,CAAmB,MAAnB,EAA2B;AACzB7D,oBAAI,EAAE,OADmB;AAEzB1H,mBAAG,EAAE,kCAFoB;AAGzBiJ,2BAAW,EAAE,CACX,CAAC,SAAD,EAAY,SAAZ,CADW,EAEX,CAAC,SAAD,EAAY,SAAZ,CAFW,EAGX,CAAC,SAAD,EAAY,SAAZ,CAHW,EAIX,CAAC,SAAD,EAAY,SAAZ,CAJW;AAHY,eAA3B;;AAUA,qBAAI,CAACK,GAAL,CAASkC,QAAT,CAAkB;AAChBnL,kBAAE,EAAE,MADY;AAEhBoL,sBAAM,EAAE,MAFQ;AAGhB/D,oBAAI,EAAE,QAHU;AAIhBgE,qBAAK,EAAE;AACL,oCAAkB,OAAI,CAAClD;AADlB;AAJS,eAAlB;;AASA2C,oBAAM,CAAC3I,gBAAP,CAAwB,OAAxB,EAAiC,UAACmJ,CAAD,EAAO;AACtC,oBAAMC,KAAK,GAAI/B,QAAQ,CAACuB,cAAT,CAAwB,QAAxB,EACZrN,KADH;;AAEA,uBAAI,CAACuL,GAAL,CAASuC,gBAAT,CACE,MADF,EAEE,gBAFF,EAGEC,QAAQ,CAAC,KAAKF,KAAL,GAAa,EAAd,EAAkB,EAAlB,CAAR,GAAgC,GAHlC,EAHsC,CAQtC;;;AACAP,2BAAW,CAACU,WAAZ,GAA0B,KAAKH,KAAL,GAAa,EAAb,GAAkB,GAA5C;AACD,eAVD;AAWD,aAhCD;AAkCA,iBAAKtC,GAAL,CAASgC,EAAT,CAAY,MAAZ,EAAoB,YAAM;AACxB;AACA,qBAAI,CAAChC,GAAL,CAASiC,SAAT,CAAmB,SAAnB,EAA8B;AAC5B7D,oBAAI,EAAE,OADsB;AAE5B1H,mBAAG,EAAE,6BAFuB;AAG5BiJ,2BAAW,EAAE,CACX,CAAC,SAAD,EAAY,SAAZ,CADW,EAEX,CAAC,SAAD,EAAY,SAAZ,CAFW,EAGX,CAAC,SAAD,EAAY,SAAZ,CAHW,EAIX,CAAC,SAAD,EAAY,SAAZ,CAJW;AAHe,eAA9B;;AAUA,qBAAI,CAACK,GAAL,CAASkC,QAAT,CAAkB;AAChBnL,kBAAE,EAAE,SADY;AAEhBoL,sBAAM,EAAE,SAFQ;AAGhB/D,oBAAI,EAAE,QAHU;AAIhBgE,qBAAK,EAAE;AACL,oCAAkB,OAAI,CAAClD;AADlB;AAJS,eAAlB;;AASA2C,oBAAM,CAAC3I,gBAAP,CAAwB,OAAxB,EAAiC,UAACmJ,CAAD,EAAO;AACtC,oBAAMC,KAAK,GAAI/B,QAAQ,CAACuB,cAAT,CAAwB,QAAxB,EACZrN,KADH;;AAEA,uBAAI,CAACuL,GAAL,CAASuC,gBAAT,CACE,SADF,EAEE,gBAFF,EAGEC,QAAQ,CAAC,KAAKF,KAAL,GAAa,EAAd,EAAkB,EAAlB,CAAR,GAAgC,GAHlC,EAHsC,CAQtC;;;AACAP,2BAAW,CAACU,WAAZ,GAA0B,KAAKH,KAAL,GAAa,EAAb,GAAkB,GAA5C;AACD,eAVD;AAWD,aAhCD;AAkCD;;;;;;;yBA3YUtD,Y,EAAY,mJ;AAAA,O;;;cAAZA,Y;AAAY,gC;AAAA,iB;AAAA,e;AAAA,uP;AAAA;AAAA;ACRzB;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAO;;AAAe;;AAAwB;;AAAI;;AAAO;;AACzD;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;wEDZaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACT5J,oBAAQ,EAAE,SADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsFY;;AAEI;;AAAI;;AAAa;;AACjB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAc;;AAClB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAkB;;AACtB;;AACI;;AAA6C;;AAAM;;AADvD;;AAEJ;;;;;;AAdQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UD5FPoN,iB;AAEX,qCAAc;AAAA;;AAQd,eAAAC,KAAA,GAAe,CACb;AAAEC,cAAE,EAAE,GAAN;AAAWC,kBAAM,EAAE,YAAnB;AAAiCC,mBAAO,EAAE,MAA1C;AAAkDC,qBAAS,EAAE,WAA7D;AAA0EC,oBAAQ,EAAE,GAApF;AAAyFC,gBAAI,EAAE,WAA/F;AAA4GC,oBAAQ,EAAE,QAAtH;AAAgIC,kBAAM,EAAE,QAAxI;AAAkJC,qBAAS,EAAE,WAA7J;AAA0KC,mBAAO,EAAE,sBAAnL;AAA2MC,uBAAW,EAAE,EAAxN;AAA4NC,wBAAY,EAAE,OAA1O;AAAmPC,wBAAY,EAAE,UAAjQ;AAA6QC,oBAAQ,EAAE;AAAvR,WADa,EAEb;AAAEb,cAAE,EAAE,GAAN;AAAWC,kBAAM,EAAE,OAAnB;AAA4BC,mBAAO,EAAE,MAArC;AAA6CC,qBAAS,EAAE,WAAxD;AAAqEC,oBAAQ,EAAE,IAA/E;AAAqFC,gBAAI,EAAE,SAA3F;AAAsGC,oBAAQ,EAAE,OAAhH;AAAyHC,kBAAM,EAAE,SAAjI;AAA4IC,qBAAS,EAAE,WAAvJ;AAAoKC,mBAAO,EAAE,aAA7K;AAA4LC,uBAAW,EAAE,EAAzM;AAA6MC,wBAAY,EAAE,OAA3N;AAAoOC,wBAAY,EAAE,UAAlP;AAA8PC,oBAAQ,EAAE;AAAxQ,WAFa,EAGb;AAAEb,cAAE,EAAE,GAAN;AAAWC,kBAAM,EAAE,YAAnB;AAAiCC,mBAAO,EAAE,KAA1C;AAAiDC,qBAAS,EAAE,OAA5D;AAAqEC,oBAAQ,EAAE,IAA/E;AAAqFC,gBAAI,EAAE,SAA3F;AAAsGC,oBAAQ,EAAE,QAAhH;AAA0HC,kBAAM,EAAE,SAAlI;AAA6IC,qBAAS,EAAE,WAAxJ;AAAqKC,mBAAO,EAAE,aAA9K;AAA6LC,uBAAW,EAAE,EAA1M;AAA8MC,wBAAY,EAAE,OAA5N;AAAqOC,wBAAY,EAAE,UAAnP;AAA+PC,oBAAQ,EAAE;AAAzQ,WAHa,EAIb;AAAEb,cAAE,EAAE,GAAN;AAAWC,kBAAM,EAAE,OAAnB;AAA4BC,mBAAO,EAAE,MAArC;AAA6CC,qBAAS,EAAE,kBAAxD;AAA4EC,oBAAQ,EAAE,IAAtF;AAA4FC,gBAAI,EAAE,SAAlG;AAA6GC,oBAAQ,EAAE,QAAvH;AAAiIC,kBAAM,EAAE,QAAzI;AAAmJC,qBAAS,EAAE,WAA9J;AAA2KC,mBAAO,EAAE,aAApL;AAAmMC,uBAAW,EAAE,EAAhN;AAAoNC,wBAAY,EAAE,OAAlO;AAA2OC,wBAAY,EAAE,UAAzP;AAAqQC,oBAAQ,EAAE;AAA/Q,WAJa,EAKb;AAAEb,cAAE,EAAE,GAAN;AAAWC,kBAAM,EAAE,QAAnB;AAA6BC,mBAAO,EAAE,KAAtC;AAA6CC,qBAAS,EAAE,WAAxD;AAAqEC,oBAAQ,EAAE,GAA/E;AAAoFC,gBAAI,EAAE,WAA1F;AAAuGC,oBAAQ,EAAE,QAAjH;AAA2HC,kBAAM,EAAE,QAAnI;AAA6IC,qBAAS,EAAE,WAAxJ;AAAqKC,mBAAO,EAAE,aAA9K;AAA6LC,uBAAW,EAAE,EAA1M;AAA8MC,wBAAY,EAAE,OAA5N;AAAqOC,wBAAY,EAAE,UAAnP;AAA+PC,oBAAQ,EAAE;AAAzQ,WALa,CAAf;AARiB;;;;qCAeT,CACP;;;;;;;yBAlBUf,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,gB;AAAA,yhB;AAAA;AAAA;ACP9B;;AACI;;AACA;;AACA;;AAAI;;AAAG;;AAA8C;;AAAI;;AACzD;;AACA;;AAGI;;AACI;;AACI;;AACJ;;AAEA;;AACI;;AAAqD;AAAA;AAAA;;AAArD;;AAEJ;;AAIA;;AAA6C;;AAAK;;AAClD;;AAA6C;;AAAK;;AAAS;;AAC/D;;AACJ;;AACA;;AAAI;;AAAI;;AAER;;AACI;;AACI;;AACI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAU;;AAC9B;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AACA;;AACI;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AACA;;AACI;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AACA;;AACI;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;;;;;;;;;;;;;;;AAiBJ;;AACJ;;AACJ;;;;AA3FqE;;AAAA;;AAiCT;;AAAA;;AAGA;;AAAA;;AAYA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAmB5C;;AAAA;;;;;;;;;;wEDhFHA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTtN,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEGjBoO,e;AAGX,iCACSpL,WADT,EACoD9E,MADpD,EACoE;AAAA;;AAA3D,eAAA8E,WAAA,GAAAA,WAAA;AAA2C,eAAA9E,MAAA,GAAAA,MAAA;AAAmB;;;;qCAE/D;AACN,iBAAKgF,YAAL;AACD,W,CACC;;;;yCACkB;;;;;;;;AAEF,6BAAM,KAAKF,WAAL,CAAiBG,QAAjB,EAAN;;;AAARrB,2B;;AACe,6BAAM,KAAKkB,WAAL,CAAiBI,eAAjB,CAAiCtB,KAAjC,CAAN;;;AAAfuB,kC;AACN,2BAAKC,SAAL,GAAiBD,YAAY,CAAChE,IAA9B;;;;;;;;;AACD,W,CAEH;;;;oCACU;AAER,gBAAMyC,KAAK,GAAG,KAAKkB,WAAL,CAAiBG,QAAjB,EAAd,CAFQ,CAGR;;AACA,mBAAOrB,KAAP;AACD,W,CACD;;;;mCACS;AACPC,wBAAY,CAACM,UAAb,CAAwB,OAAxB;AACA/C,mBAAO,CAACC,GAAR,CAAY,YAAZ;AACA,iBAAKrB,MAAL,CAAYmH,aAAZ,CAA0B,GAA1B;AACD;;;;;;;yBA7BU+I,e,EAAe,6K,EAAA,uH;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,2R;AAAA;AAAA;ACV5B;;AACI;;AACI;;AAEJ;;AAMA;;AA4BJ;;;;;;;;;wED5BaA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTtO,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaqO,e;AAEX,mCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,e;AAAe,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP5B;;AAAG;;AAAa;;;;;;;;wEDOHA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTvO,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;AEN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0FwC;;AAAoC;;AAAgB;;;;;;AADxD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;;;;;AALjB;;AACI;;AACI;;AAAkK;AAAA;;AAAA;;AAAA;AAAA;;AAClK;;AACA;;AAGJ;;AACJ;;;;;;AANqC;;AAAA,2FAAgB,SAAhB,EAAgB,+GAAhB;;AAExB;;AAAA;;;;;;AAUD;;AAAoC;;AAAgB;;;;;;AADxD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;;;;;AALjB;;AACI;;AACI;;AAAW;AAAA;;AAAA;;AAAA,sCAA6B,CAA7B,EAAgCsO,IAAhC,GAA8B,MAA9B;AAA8B,WAA9B,EAAqC,QAArC,EAAqC;AAAA;;AAAA;;AAAA;AAAA,WAArC;;AACX;;AACA;;AAGJ;;AACJ;;;;;;AANmB;;AAAA,yGAAqC,gBAArC,EAAqC,qEAArC,EAAqC,OAArC,EAAqC,aAArC,EAAqC,SAArC,EAAqC,+GAArC;;AAEN;;AAAA;;;;;;;;AAOb;;AACI;;AACI;;AAAW;AAAA;;AAAA;;AAAA;AAAA,aAAmC,QAAnC,EAAmC;AAAA;;AAAA;;AAAA;AAAA,WAAnC;;AACX;;AACJ;;AACJ;;;;;;AAHmB;;AAAA,4GAAmC,UAAnC,EAAmC,IAAnC,EAAmC,gBAAnC,EAAmC,qEAAnC,EAAmC,OAAnC,EAAmC,gBAAnC;;;;;;;;AAInB;;AACI;;AACI;;AAA2I;AAAA;;AAAA;;AAAA;AAAA;;AAC3I;;AACJ;;AACJ;;;;;;AAHqC;;AAAA,qFAAiB,OAAjB,EAAiB,gBAAjB;;;;;;AAY7B;;AAA2D;;AAAqB;;;;;;AAChF;;AAA0D;;AAAgD;;;;;;AAAhD;;AAAA;;;;;;AA4ItE;;AAA2D;;AAA8B;;;;;;;;AAF7F;;AAEI;;AACA;;AACI;;AACA;;AAAK;;AAAiB;;AAAW;;AACrC;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAgH;AAAA;;AAAA;;AAAA;AAAA,aAA8B,eAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,WAA9B;;AAAhH;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAEI;;AAA6G;AAAA;;AAAA;;AAAA;AAAA,aAA2B,eAA3B,EAA2B;AAAA;;AAAA;;AAAA;AAAA,WAA3B;;AAA7G;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5B6C;;AAAA;;AASuF;;AAAA;;AAYH;;AAAA;;;;;;AASjI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAK;;AAAG;;AAAO;;AACf;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAGI;;AAA4D;;AAA6B;;;;;;;;AAD7F;;AACI;;AACA;;AACI;;AAAK;;AAAiB;;AAAU;;AACpC;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAgH;AAAA;;AAAA;;AAAA;AAAA,aAA+B,eAA/B,EAA+B;AAAA;;AAAA;;AAAA;AAAA,WAA/B;;AAAhH;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAGI;;AAAyI;AAAA;;AAAA;;AAAA;AAAA,aAA4B,eAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,WAA5B;;AAAzI;;AAEJ;;AACJ;;AACJ;;AACA;;AAGI;;AACI;;AACI;;AACV;;AAA8F;;AAChG;;AACY;;AACV;;AAAyF;;AAC3F;;AACY;;AACV;;AAAuF;;AACzF;;AACY;;AACd;;AAAsF;;AACxF;;AACY;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA7C6C;;AAAA;;AAQuF;;AAAA;;AAWyB;;AAAA;;AAUxG;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAoBrD;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAG;;AAAW;;AACd;;AAIJ;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AACV;;AAA8F;;AAChG;;AACY;;AACV;;AAAyF;;AAC3F;;AACY;;AACV;;AAAuF;;AACzF;;AACY;;AACd;;AAAsF;;AACxF;;AACY;;AACJ;;AAEJ;;AACJ;;AACJ;;;;;;AAjBqD;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;AAmCrD;;AACI;;AAEI;;AACI;;AACI;;AACI;;AAAO;AAAA;;AAAA;;AAAA,uCAAqB,MAArB;AAA2B,WAA3B;;AAAP;;AACI;;AACR;;AAEA;;AACI;;AACI;;AACR;;AAEA;;AACI;;AACI;;AACR;;AAEJ;;AACJ;;AACJ;;AACJ;;;;;;AAlB+C;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;AAW/C;;AAGI;;AAA4H;AAAA;;AAAA;;AAAA;AAAA;;AAC5H;;AAEJ;;;;;;AAHyC;;AAAA;;;;;;;;AAMzC;;AAOI;;AAA6H;AAAA;;AAAA;;AAAA;AAAA;;AAC7H;;AAEJ;;;;;;AAHyC;;AAAA;;QDld7D;;;UAOaC,uB;AA4BX;AAEA,yCACUtQ,WADV,EAEU+E,WAFV,EAGU9E,MAHV,EAIUgH,MAJV,EAI+B;AAAA;;AAHrB,eAAAjH,WAAA,GAAAA,WAAA;AACA,eAAA+E,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AACA,eAAAgH,MAAA,GAAAA,MAAA;AAhCV,eAAAsJ,iBAAA,GAAoB,SAApB;AAOA,eAAAC,WAAA,GAAc,CACZ;AAAEC,kBAAM,EAAE;AAAV,WADY,EAEZ;AAAEA,kBAAM,EAAE;AAAV,WAFY,EAGZ;AAAEA,kBAAM,EAAE;AAAV,WAHY,CAAd;AAKA,eAAAC,YAAA,GAAe,CACb;AAAED,kBAAM,EAAE;AAAV,WADa,CAAf;AAKA,eAAAE,SAAA,GAAqB,KAArB,CAe+B,CAfH;;AAC5B,eAAAC,UAAA,GAAsB,KAAtB,CAc+B,CAdF;;AAI7B,eAAAC,iBAAA,GAAyB,EAAzB;AAEA,eAAAC,qBAAA,GAA6B,EAA7B,CAQ+B,CAU/B;;AACA,eAAAnF,OAAA,GAAU,CAAV;AAEA,eAAAC,KAAA,GAAQ,oCAAR;AACA,eAAAC,GAAA,GAAM,SAAN;AACA,eAAAC,GAAA,GAAM,SAAN;AACA,eAAA3L,SAAA,GAAY,KAAZ;AAGA,eAAA4Q,IAAA,GAAO,EAAP;AAGA,eAAAC,YAAA,GAAqB,IAArB;AAGA,eAAAC,MAAA,GAAS,IAAT;AAxBK;;;;qCA0BG;AACN,iBAAKC,KAAL,GAAa,KAAKnM,WAAL,CAAiBoM,OAAjB,EAAb;AACA,gBAAI,KAAKD,KAAT,EACA7P,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAK4P,KAA5B;AAEA,iBAAKnM,WAAL,CAAiBqM,UAAjB,GALM,CAMN;;AACA,gBAAMvN,KAAK,GAAG,KAAKkB,WAAL,CAAiBG,QAAjB,EAAd;AACA,iBAAK3F,IAAL,GAAY,KAAKwF,WAAL,CAAiBI,eAAjB,CAAiCtB,KAAjC,EAAwCzC,IAApD;AACA,gBAAMmC,UAAU,GAAG,KAAKwB,WAAL,CAAiBsM,YAAjB,EAAnB;AACA,iBAAKtM,WAAL,CAAiBuM,eAAjB;AACA,iBAAKzH,WAAL;AAEA,iBAAK0H,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEjO,wBAAU,EAAVA;AAAF,aAAjC;AACA,iBAAK6H,SAAL,GAdM,CAeN;;AACA,gBAAI,KAAK8F,KAAT,EAAgB;AACd,mBAAKO,YAAL;AACD;;AACD,iBAAKvK,WAAL;AACD,W,CACD;;;;wCACc;AAAA;;AACZ,iBAAKnC,WAAL,CAAiBsC,QAAjB,GAA4BhH,SAA5B,CACE,UAACe,IAAD,EAAU;AACR,qBAAI,CAACsQ,QAAL,GAAgBtQ,IAAhB;AACAC,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,OAAI,CAACoQ,QAAtC;AACD,aAJH,EAKE,UAACpK,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAPH;AASD,W,CAGD;;;;wCACqBhC,K,EAAU;AAC7B;AAEA,iBAAKqL,SAAL,GAAiB,KAAKgB,gBAAL,GAAwB,KAAKC,aAA9C;AACD,W,CACD;;;;uCACoBtM,K,EAAU;AAC5B;AACA,iBAAKsL,UAAL,GAAkB,KAAKiB,iBAAL,GAAyB,KAAKC,cAAhD;AACD,W,CAED;;;;uCACarB,M,EAAM;AACjB;AACA,iBAAKc,gBAAL,CAAsBC,UAAtB,CAAiC;AAACrG,yBAAW,EAAEsF,MAAM,CAACA;AAArB,aAAjC,EAFiB,CAGjB;AACD,W,CACD;;;;wCACcA,M,EAAM;AAClB;AACA,iBAAKc,gBAAL,CAAsBC,UAAtB,CAAiC;AAACrG,yBAAW,EAAEsF,MAAM,CAAC1J;AAArB,aAAjC,EAFkB,CAGlB;AACD,W,CACD;;;;sCACYlH,I,EAAI;AACd;AACA,iBAAK0R,gBAAL,CAAsBC,UAAtB,CAAiC;AAAErG,yBAAW,EAAEtL;AAAf,aAAjC;AACD;;;uCACcA,I,EAAI;AACf,iBAAKkF,WAAL,CAAiB+C,YAAjB,CAA8BjI,IAA9B;AACA,iBAAKI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;yCACc;AACf;AACA,iBAAK6O,iBAAL,GAAyB,MAAzB;AACA,iBAAKgB,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEjO,wBAAU,EAAE,KAAK2N,KAAL,CAAW3N;AAAzB,aAAjC;AACA,iBAAKgO,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEzL,iBAAG,EAAE,KAAKmL,KAAL,CAAWnL;AAAlB,aAAjC;AACA,iBAAKwL,gBAAL,CAAsBC,UAAtB,CAAiC;AAAE5K,sBAAQ,EAAE,KAAKsK,KAAL,CAAWtK;AAAvB,aAAjC;AACA,iBAAK2K,gBAAL,CAAsBC,UAAtB,CAAiC;AAAErG,yBAAW,EAAE,KAAK+F,KAAL,CAAW/F;AAA1B,aAAjC;AACA,iBAAKoG,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEO,2BAAa,EAAE,KAAKb,KAAL,CAAWa;AAA5B,aAAjC;AACA,iBAAKR,gBAAL,CAAsBC,UAAtB,CAAiC;AAAE5G,kBAAI,EAAE,KAAKsG,KAAL,CAAWtG;AAAnB,aAAjC;AACA,iBAAK2G,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEQ,yBAAW,EAAE,KAAKd,KAAL,CAAWc;AAA1B,aAAjC;AACA,iBAAKT,gBAAL,CAAsBC,UAAtB,CAAiC;AAAES,0BAAY,EAAE,KAAKf,KAAL,CAAWe;AAA3B,aAAjC;AACA,iBAAKV,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEU,8BAAgB,EAAE,KAAKhB,KAAL,CAAWgB;AAA/B,aAAjC;AACA,iBAAKX,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEW,yBAAW,EAAE,KAAKjB,KAAL,CAAWiB;AAA1B,aAAjC;AACA,iBAAKZ,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEY,yBAAW,EAAE,KAAKlB,KAAL,CAAWkB;AAA1B,aAAjC;AACA,iBAAKb,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEa,2BAAa,EAAE,KAAKnB,KAAL,CAAWmB;AAA5B,aAAjC;AACA,iBAAKd,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEnB,kBAAI,EAAE,KAAKa,KAAL,CAAWb;AAAnB,aAAjC;;AAEA,gBAAG,KAAKa,KAAL,CAAWtK,QAAd,EAAwB;AACtB,mBAAI,IAAI0L,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAE,KAAKpB,KAAL,CAAWtK,QAAX,CAAoB2L,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/CjR,uBAAO,CAACC,GAAR,CAAY,KAAK4P,KAAL,CAAWtK,QAAX,CAAoB0L,CAApB,EAAuB1L,QAAnC;AACA,qBAAKkK,qBAAL,CAA2B0B,IAA3B,CAAgC,KAAKtB,KAAL,CAAWtK,QAAX,CAAoB0L,CAApB,EAAuB1L,QAAvD;AACA,qBAAKiK,iBAAL,CAAuB2B,IAAvB,CAA4B,KAAKtB,KAAL,CAAWtK,QAAX,CAAoB0L,CAApB,EAAuB1L,QAAnD;AACD;;AACDvF,qBAAO,CAACC,GAAR,CAAY,KAAKwP,qBAAjB;AACD;;AAED,gBAAG,KAAKI,KAAL,CAAWb,IAAd,EAAoB;AAClB,mBAAKhF,YAAL,CAAkB,KAAK6F,KAAL,CAAWb,IAAX,CAAgB,CAAhB,EAAmBtK,GAArC,EADkB,CAElB;;AACA1E,qBAAO,CAACC,GAAR,CAAY,KAAK4P,KAAL,CAAWb,IAAX,CAAgB,CAAhB,EAAmBtK,GAA/B;AAED;;AACD1E,mBAAO,CAACC,GAAR,CAAY,KAAKiQ,gBAAL,CAAsBrQ,KAAlC;AAEA,iBAAKuR,YAAL,GAAoB,KAAKvB,KAAL,CAAWb,IAAX,CAAgB,CAAhB,EAAmBA,IAAvC;AACAhP,mBAAO,CAACC,GAAR,CAAY,KAAKuP,iBAAjB;AACAxP,mBAAO,CAACC,GAAR,CAAY,KAAKmR,YAAjB;AAED,W,CAED;;;;0CACgBjN,K,EAAiB;AAC/B,iBAAKwL,YAAL,GAAoBxL,KAAK,CAACkN,IAAN,CAAW,CAAX,CAApB;AACD,W,CAED;;;;wCACc;AACZ,iBAAKnB,gBAAL,GAAwB,KAAKvR,WAAL,CAAiBU,KAAjB,CAAuB;AAC7C;AACAiS,0BAAY,EAAC,EAFgC;AAG7CxH,yBAAW,EAAE,CACX;AACEzL,sBAAM,EAAE,EADV;AAEEG,oBAAI,EAAE;AAFR,eADW,CAHgC;AAS7C+S,mBAAK,EAAE,CACL;AACElT,sBAAM,EAAE,EADV;AAEEG,oBAAI,EAAE;AAFR,eADK,CATsC;AAe7C0D,wBAAU,EAAE,CAAC,EAAD,CAfiC;AAgB7C2O,8BAAgB,EAAE,CAAC,EAAD,CAhB2B;AAiB7CH,2BAAa,EAAE,CAAC,EAAD,CAjB8B;AAkB7C1B,kBAAI,EAAE,CACJ;AACE7M,kBAAE,EAAE,EADN;AAEE3D,oBAAI,EAAE,KAAKgT,UAFb;AAGEC,sBAAM,EAAE;AAHV,eADI,CAlBuC;AAyB7ClM,sBAAQ,EAAE,EAzBmC;AA0B7CmM,0BAAY,EAAE,CACZ;AACEvP,kBAAE,EAAE,EADN;AAEE3D,oBAAI,EAAE,EAFR;AAGEmT,8BAAc,EAAE;AAHlB,eADY,CA1B+B;AAiC7CC,uBAAS,EAAE,EAjCkC;AAkC7CC,uBAAS,EAAE,EAlCkC;AAmC7CjB,0BAAY,EAAE,EAnC+B;AAoC7CkB,sBAAQ,EAAE,EApCmC;AAqC7CC,sBAAQ,EAAE,EArCmC;AAsC7CjB,yBAAW,EAAE,EAtCgC;AAuC7CvH,kBAAI,EAAE,EAvCuC;AAwC7CyI,uBAAS,EAAE,CAAC,EAAD,CAxCkC;AAyC7CjB,yBAAW,EAAE,CAAC,EAAD,CAzCgC;AA0C7CC,2BAAa,EAAE,EA1C8B;AA2C7CL,yBAAW,EAAE,CAAC,EAAD;AA3CgC,aAAvB,CAAxB;AA6CD;;;kCAEOc,M,EAAQ;AACd,gBAAMzC,IAAI,GAAG,KAAK/E,MAAL,CAAY7L,MAAZ,CAAmB,UAAC4Q,IAAD,EAAe;AAC7C,qBAAOA,IAAI,CAACtK,GAAL,KAAa+M,MAApB;AACD,aAFY,CAAb;;AAGA,gBAAIzC,IAAI,CAAC,CAAD,CAAR,EAAa;AACX,qBAAOA,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAf;AACD,aAFD,MAEO;AACL,qBAAO,EAAP;AACD;AACF;;;sCAEWiD,K,EAAO;AACjB,gBAAM1M,QAAQ,GAAG,KAAK2E,SAAL,CAAe9L,MAAf,CAAsB,UAACmH,QAAD,EAAmB;AACxD,qBAAOA,QAAQ,CAACb,GAAT,KAAiBuN,KAAxB;AACD,aAFgB,CAAjB;;AAGA,gBAAI1M,QAAQ,CAAC,CAAD,CAAZ,EAAiB;AACf,qBAAOA,QAAQ,CAAC,CAAD,CAAR,CAAYA,QAAnB;AACD,aAFD,MAEO;AACL,qBAAO,EAAP;AACD;AACF;;;qCAEUyJ,I,EAAM;AACfhP,mBAAO,CAACC,GAAR,CAAY,KAAKiK,SAAjB;AAEA,iBAAKA,SAAL,GAAiB,EAAjB;;AAEA,gBAAG,KAAKhM,IAAR,EAAa;AACX8B,qBAAO,CAACC,GAAR,CAAY+O,IAAI,CAACA,IAAjB;AAEAhP,qBAAO,CAACC,GAAR,CAAY,KAAKmR,YAAjB;;AAEA,kBAAI,KAAKA,YAAL,IAAqBpC,IAAI,CAACA,IAA9B,EACA;AACE,qBAAKS,qBAAL,GAA6B,KAAKD,iBAAlC;AACAxP,uBAAO,CAACC,GAAR,CAAY,KAAKuP,iBAAjB;AACAxP,uBAAO,CAACC,GAAR,CAAY,KAAKwP,qBAAjB;AACD,eALD,MAOA,KAAKA,qBAAL,GAA6B,EAA7B;AACD;;AACDzP,mBAAO,CAACC,GAAR,CAAY,KAAKiK,SAAjB;;AACA,gBAAG8E,IAAH,EAAQ;AACR,mBAAKhF,YAAL,CAAkBgF,IAAI,CAACtK,GAAvB;AACA,mBAAKwL,gBAAL,CAAsBC,UAAtB,CAAiC;AAAEnB,oBAAI,EAAJA;AAAF,eAAjC;AACAhP,qBAAO,CAACC,GAAR,CAAY,KAAKiQ,gBAAL,CAAsBrQ,KAAlC;AACC;AACF;;;yCACc0F,Q,EAAU;AACvBvF,mBAAO,CAACC,GAAR,CAAYsF,QAAZ;AACA,iBAAKiK,iBAAL,GAAyBjK,QAAzB;AACAvF,mBAAO,CAACC,GAAR,CAAY,KAAKiQ,gBAAL,CAAsBrQ,KAAlC;AACD,W,CAED;;;;sCACY;AAAA;;AACV,iBAAK6D,WAAL,CAAiBqG,SAAjB,GAA6B/K,SAA7B,CACE,UAACiL,MAAD,EAAY;AACV;AACA,kBAAI,OAAI,CAAC/L,IAAL,CAAUkR,MAAV,KAAqB,iBAAzB,EAA4C;AAC1C,uBAAI,CAACJ,IAAL,CAAUmC,IAAV,CAAelH,MAAM,CAAC,CAAD,CAArB;;AACA,uBAAI,CAACA,MAAL,GAAc,OAAI,CAAC+E,IAAnB;AACD,eAHD,MAGO,IAAI,OAAI,CAAC9Q,IAAL,CAAUkR,MAAV,KAAqB,kBAAzB,EAA6C;AAClD,uBAAI,CAACJ,IAAL,CAAUmC,IAAV,CAAelH,MAAM,CAAC,CAAD,CAArB;;AACA,uBAAI,CAACA,MAAL,GAAc,OAAI,CAAC+E,IAAnB;AACD,eAHM,MAGA,IAAI,OAAI,CAAC9Q,IAAL,CAAUkR,MAAV,KAAqB,gBAAzB,EAA2C;AAChD,uBAAI,CAACJ,IAAL,CAAUmC,IAAV,CAAelH,MAAM,CAAC,CAAD,CAArB;;AACA,uBAAI,CAACA,MAAL,GAAc,OAAI,CAAC+E,IAAnB;AACD,eAHM,MAGA;AACL,uBAAI,CAAC/E,MAAL,GAAcA,MAAd;AACD;AACF,aAfH,EAgBE,UAAChE,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAlBH;AAoBD;;;uCAEYmL,Y,EAAe;AAAA;;AAC1BpR,mBAAO,CAACC,GAAR,CAAYmR,YAAZ;AACA,iBAAK1N,WAAL,CAAiBsG,YAAjB,GAAgChL,SAAhC,CACE,UAACkL,SAAD,EAAe;AACblK,qBAAO,CAACC,GAAR,CAAYiK,SAAZ,EAAuBkH,YAAvB;AAEA,qBAAI,CAAClH,SAAL,GAAiBA,SAAjB,CAHa,CAIb;AACA;;AACA,kBAAIkH,YAAJ,EAAkB;AAChB,uBAAI,CAAClH,SAAL,GAAiBA,SAAS,CAAC9L,MAAV,CAAiB,UAAC8T,GAAD,EAAS;AACzC,yBAAOA,GAAG,CAACT,MAAJ,IAAcL,YAArB;AACD,iBAFgB,CAAjB;AAGD;AACF,aAZH,EAaE,UAACnL,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAfH;AAiBD,W,CACD;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;mCACSpG,K,EAAe;AACtB,iBAAKsS,YAAL,GAAoBtS,KAApB;AACD;;;0CACe4N,C,EAAG;AACjBzN,mBAAO,CAACC,GAAR,CAAYwN,CAAC,CAACvJ,MAAF,CAASrE,KAArB,EADiB,CAEjB;AACA;AACD,W,CAED;;;;uCACa;AAAA;;AACX,iBAAKf,SAAL,GAAiB,IAAjB,CADW,CACY;;AACvBkB,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKiQ,gBAAL,CAAsBrQ,KAA1C,EAAiD,MAAjD;AACA,iBAAKqQ,gBAAL,CAAsBC,UAAtB,CAAiC;AAAE5K,sBAAQ,EAAE,KAAKiK;AAAjB,aAAjC;;AAEA,gBAAI,KAAKK,KAAT,EAAgB;AACd7P,qBAAO,CAACC,GAAR,CAAY,KAAKiQ,gBAAL,CAAsBrQ,KAAlC;AACA,mBAAK6D,WAAL,CACG0O,eADH,CACmB,KAAKvC,KAAL,CAAWnL,GAD9B,EACmC,KAAKwL,gBAAL,CAAsBrQ,KADzD,EAEGb,SAFH,CAEa,UAACe,IAAD,EAAe;AACxBC,uBAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,IAAhD,EADwB,CAExB;;AACA,oBAAMb,KAAK,GAAG,OAAI,CAACgR,gBAAL,CAAsBrQ,KAAtB,CAA4BX,KAA1C;AACA,oBAAMiB,GAAG,GAAGJ,IAAI,CAACoD,OAAjB,CAJwB,CAKxB;AACA;;AACA,oBAAIhD,GAAG,IAAI,gCAAX,EAA6C;AAC3C,yBAAI,CAACyF,MAAL,CAAYQ,OAAZ,CAAoBjG,GAApB,EAAyB,SAAzB,EAAoC;AAClCkG,2BAAO,EAAE;AADyB,mBAApC;;AAGA,sBAAK,OAAI,CAAC6J,gBAAL,CAAsBpP,GAAtB,CAA0B,YAA1B,EAAwCjB,KAAxC,KAAkD,WAAvD,EAAqE;AACrE,2BAAI,CAACjB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACC,mBAFD,MAGK,IAAK,OAAI,CAAC6P,gBAAL,CAAsBpP,GAAtB,CAA0B,YAA1B,EAAwCjB,KAAxC,KAAkD,MAAvD,EAAgE;AACnE,2BAAI,CAACjB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACC,mBAFE,MAGE,IAAK,OAAI,CAAC6P,gBAAL,CAAsBpP,GAAtB,CAA0B,YAA1B,EAAwCjB,KAAxC,KAAkD,MAAvD,EAAgE;AACnE,2BAAI,CAACjB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACC;AACN,iBAbD,MAaO;AACL,yBAAI,CAACuF,MAAL,CAAY3C,KAAZ,CAAkB9C,GAAlB,EAAuB,OAAvB,EAAgC;AAC9BkG,2BAAO,EAAE;AADqB,mBAAhC;AAGD;AACF,eA3BH;AA4BD,aA9BD,MA8BO;AACL,kBAAMnI,IAAI,GAAG,KAAKgS,gBAAL,CAAsBpP,GAAtB,CAA0B,YAA1B,EAAwCjB,KAArD;AACAG,qBAAO,CAACC,GAAR,CAAY,KAAKiQ,gBAAL,CAAsBrQ,KAAlC;AACA,mBAAK6D,WAAL,CACG2O,eADH,CACmB,KAAKnC,gBAAL,CAAsBrQ,KADzC,EAEGb,SAFH,CAEa,UAACe,IAAD,EAAU;AACnBC,uBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B,EADmB,CAEnB;;AACA,oBAAMb,KAAK,GAAG,OAAI,CAACgR,gBAAL,CAAsBrQ,KAAtB,CAA4BX,KAA1C,CAHmB,CAInB;AACA;AACA;;AACA,oBAAIhB,IAAI,KAAK,WAAb,EAA0B;AACxB,yBAAI,CAAC0H,MAAL,CAAYQ,OAAZ,CAAoB,iBAApB,EAAuC,SAAvC,EAAkD;AAChDC,2BAAO,EAAE;AADuC,mBAAlD;;AAGA,yBAAI,CAACzH,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,iBALD,MAMK,IAAInC,IAAI,KAAK,MAAb,EAAoB;AAEvB,yBAAI,CAAC0H,MAAL,CAAYQ,OAAZ,CAAoB,YAApB,EAAkC,SAAlC,EAA6C;AAC3CC,2BAAO,EAAE;AADkC,mBAA7C;;AAGA,yBAAI,CAACzH,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,iBANI,MAOA,IAAInC,IAAI,KAAK,MAAb,EAAoB;AAEvB,yBAAI,CAAC0H,MAAL,CAAYQ,OAAZ,CAAoB,YAApB,EAAkC,SAAlC,EAA6C;AAC3CC,2BAAO,EAAE;AADkC,mBAA7C;;AAGA,yBAAI,CAACzH,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,iBA1BkB,CA2BnB;AACA;AACA;AACA;AAEA;;AACD,eAnCH;AAoCD;AACF;;;8BAjZuB;AACtB,mBAAO,KAAK6P,gBAAL,CAAsBpP,GAAtB,CAA0B,eAA1B,CAAP;AACD,W,CACD;;;;8BACQ;AACN,mBAAO,KAAKoP,gBAAL,CAAsB5P,QAA7B;AACD;;;;;;;yBA1CU2O,uB,EAAuB,2H,EAAA,6K,EAAA,uH,EAAA,yH;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,kB;AAAA,gB;AAAA,20M;AAAA;AAAA;ACdpC;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACJ;;AACA;;AACI;;AAEI;;AAA6B;;AAAa;;AAE1C;;AAGI;;AAEI;;AACI;;AACI;;AACA;;AACmB;;AACvB;;AAEI;;AACA;;AAEI;;AACR;;AAEI;;AACA;;AAEI;;AACR;;AAEA;;AACJ;;AACA;;AAAiB;;AAAyB;;AAC9C;;AACJ;;AAEA;;AAEI;;AACI;;AAA+B;;AAAI;;AAC/B;;AACI;;AACI;;AACd;;AAAgG;;AAClG;;AACgB;;AACd;;AAA4F;;AAC9F;;AACgB;;AACd;;AAA6F;;AAC/F;;AACgB;;AAClB;;AAAgG;;AAClG;;AACgB;;AACJ;;AACA;;AAAiB;;AAAsB;;AAC3C;;AAEJ;;AACA;;AAAI;;AACJ;;AAcI;;AASA;;AASA;;AAEA;;AAMA;;AAUA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACA;;AAEI;;AACI;;AACI;;AACI;;AAEI;;AACI;;AACI;;AAAkD;;AAAK;;AAC3D;;AACA;;AACI;;AAAmC;;AAAK;;AAC5C;;AACA;;AACI;;AAAyC;;AAAW;;AACxD;;AACJ;;AAEA;;AACtC;;AAAyB;;AAAO;;AAClC;;AACoC;;AACA;;AACI;;AACI;;AAEI;;AAEI;;AACA;;AACoB;;AACxB;;AAEI;;AACA;;AAEI;;AACR;;AAEI;;AACA;;AAEI;;AACR;;AACA;;AACA;;AAEI;;AACA;;AAC4B;;AAChC;;AAEI;;AACA;;AAEI;;AACR;;AAEI;;AACA;;AAEI;;AACR;;AAEA;;AAEJ;;AACA;;AACI;;AAEI;;AACA;;AAC+B;;AACnC;;AAEI;;AACA;;AAEI;;AACR;;AAEI;;AACpE;;AAEwE;;AACR;;AACA;;AACJ;;AACA;;AAEI;;AACI;;AACA;;AACqB;;AACzB;;AAEI;;AACA;;AAEI;;AACR;;AAEI;;AACA;;AAEI;;AACR;;AAEI;;AACA;;AACoB;;AACxB;;AACA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AAIJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AAAM;;AAAiB;;AAA4B;;AACvD;;AACJ;;AACJ;;AACJ;;AAEA;;AAgCA;;AAcA;;AAiDA;;AACI;;AACI;;AACI;;AAAM;;AAAG;;AAAW;;AAChB;;AACJ;;AAAM;;AAAiB;;AAAmB;;AAC9C;;AACJ;;AACJ;;AAEA;;AAoCA;;AAGI;;AACI;;AAAe;;AAAG;;AAAW;;AACzB;;AACJ;;AAAM;;AAAiB;;AAA0B;;AACrD;;AACA;;AACI;;AAAe;;AAAG;;AAAa;;AAC3B;;AACJ;;AAAM;;AAAiB;;AAA4B;;AACvD;;AACJ;;AACA;;AACI;;AACI;;AAAe;;AAAG;;AAAW;;AACzB;;AACJ;;AAAM;;AAAiB;;AAA2B;;AACtD;;AAEJ;;AAGA;;AACA;;AAyBA;;AAAI;;AACJ;;AASA;;AAWJ;;AAGA;;AACI;;AACI;;AAAI;;AACJ;;AACI;;AAAQ;AAAA,qBAAS,IAAA9E,UAAA,EAAT;AAAqB,aAArB;;AAAoD;;AAAqB;;AACjF;;AAAI;;AAAI;;AACZ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA/d+B;;AAAA;;AAWoC;;AAAA;;AACX;;AAAA;;AAIW;;AAAA;;AACV;;AAAA;;AAKU;;AAAA;;AACV;;AAAA;;AAiBgB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAwBrB;;AAAA;;AASA;;AAAA;;AAWA;;AAAA;;AAMA;;AAAA;;AAcV;;AAAA;;AACA;;AAAA;;AA8B+D;;AAAA;;AAKA;;AAAA;;AAMA;;AAAA;;AAQD;;AAAA;;AAKC;;AAAA;;AAMA;;AAAA;;AAYA;;AAAA;;AAKA;;AAAA;;AAMA;;AAAA;;AAUA;;AAAA;;AAKA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AA4BhF;;AAAA;;AAgCA;;AAAA;;AAcA;;AAAA;;AA2DA;;AAAA;;AA6DqB;;AAAA;;AA0BA;;AAAA;;AASA;;AAAA;;AAkB0C;;AAAA;;;;;;;;;wEDtd3E8E,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTzO,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZpC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAM4R,MAAM,GAAgB,CACjC;AACEC,YAAI,EAAE,EADR;AAEE/K,aAAK,EAAE,WAFT;AAGEgL,YAAI,EAAE,yBAHR;AAIE,iBAAO,eAJT;AAKEC,iBAAS,EAAE,IALb;AAMEC,eAAO,EAAE;AANX,OADiC,EASjC;AACEH,YAAI,EAAE,UADR;AAEE/K,aAAK,EAAE,cAFT;AAGEgL,YAAI,EAAE,iBAHR;AAIE,iBAAO,EAJT;AAKEC,iBAAS,EAAE,KALb;AAMEC,eAAO,EAAE;AANX,OATiC,EAiBjC;AACEH,YAAI,EAAE,QADR;AAEE/K,aAAK,EAAE,OAFT;AAGEgL,YAAI,EAAE,aAHR;AAIE,iBAAO,EAJT;AAKEC,iBAAS,EAAE,KALb;AAMEC,eAAO,EAAE;AANX,OAjBiC,EAyBjC;AACEH,YAAI,EAAE,YADR;AAEE/K,aAAK,EAAE,WAFT;AAGEgL,YAAI,EAAE,iBAHR;AAIE,iBAAO,EAJT;AAKEC,iBAAS,EAAE,KALb;AAMEC,eAAO,EAAE;AANX,OAzBiC,EAiCjC;AACEH,YAAI,EAAE,QADR;AAEE/K,aAAK,EAAE,OAFT;AAGEgL,YAAI,EAAE,qBAHR;AAIE,iBAAO,EAJT;AAKEC,iBAAS,EAAE,KALb;AAMEC,eAAO,EAAE;AANX,OAjCiC,CAA5B;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC4BgC;;AAAwC;;AAAgB;;;;;;AAD5D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AASL;;AAAqC;;AAAiB;;;;;;AACtD;;AAAkC;;AAAmC;;;;;;AAFzE;;AACI;;AACA;;AACJ;;;;;;AAFS;;AAAA;;AACA;;AAAA;;;;;;AAUL;;AAAwC;;AAAoB;;;;;;AAC5D;;AAAyC;;AAAsC;;;;;;AAFnF;;AACI;;AACA;;AACJ;;;;;;AAFS;;AAAA;;AACA;;AAAA;;;;;;;;;;;;;;AANjB;;AACI;;AACI;;AACA;;AAAuB;AAAA;;AAAA;;AAAA,yDAAuC,MAAvC;AAA6C,WAA7C;;AAAvB;;AACA;;AAIJ;;AACJ;;;;;;AANgL;;AAAA;;AACnK;;AAAA;;;;;;AAYD;;AAAgD;;AAAoB;;;;;;AACpE;;AAAiD;;AAA8C;;;;;;AAFnG;;AACI;;AACA;;AACJ;;;;;;AAFS;;AAAA;;AACA;;AAAA;;;;;;AAGb;;AAAsC;;AAAO;;;;;;AAAP;;AAAA;;;;;;AACtC;;AAAmE;;AAAO;;;;;;AAAP;;AAAA;;;;;;;;AAXvE;;AACI;;AACI;;AACA;;AAAuB;AAAA;;AAAA;;AAAA,yDAAuC,MAAvC;AAA6C,WAA7C;;AAAvB;;AAEA;;AAIJ;;AACA;;AACA;;AACJ;;;;;;AATgM;;AAAA;;AAEnL;;AAAA;;AAKJ;;AAAA;;AACA;;AAAA;;;;;;AAQG;;AAAuC;;AAAmB;;;;;;AAD9D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAaL;;AAAoC;;AAAgB;;;;;;AADxD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;AAPjB;;AACI;;AAEI;;AACA;;AAA0K;AAAA;;AAAA;;AAAA;AAAA;;AAC1K;;AACA;;AAGJ;;AACJ;;;;;;AAN6C;;AAAA,2FAAgB,SAAhB,EAAgB,+GAAhB;;AAEhC;;AAAA;;;;;;AAaD;;AAAoC;;AAAgB;;;;;;AADxD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;;;;;AARjB;;AACI;;AAEI;;AACA;;AAAW;AAAA;;AAAA;;AAAA;AAAA,aAA4B,QAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,WAA5B;;AACX;;AAEA;;AAGJ;;AACJ;;;;;;AAPmB;;AAAA,qGAA4B,gBAA5B,EAA4B,qEAA5B,EAA4B,OAA5B,EAA4B,aAA5B,EAA4B,SAA5B,EAA4B,+GAA5B;;AAGN;;AAAA;;;;;;;;AAMb;;AACI;;AAEI;;AACA;;AAAW;AAAA;;AAAA;;AAAA;AAAA,aAAmC,QAAnC,EAAmC;AAAA;;AAAA;;AAAA;AAAA,WAAnC;;AACX;;AAEJ;;AACJ;;;;;;AAJmB;;AAAA,4GAAmC,UAAnC,EAAmC,IAAnC,EAAmC,gBAAnC,EAAmC,qEAAnC,EAAmC,OAAnC,EAAmC,gBAAnC;;;;;;;;AAKnB;;AACI;;AAEI;;AACA;;AAAmJ;AAAA;;AAAA;;AAAA;AAAA;;AACnJ;;AACJ;;AACJ;;;;;;AAH6C;;AAAA,qFAAiB,OAAjB,EAAiB,gBAAjB;;;;;;;;AAK7C;;AACI;;AAEI;;AACA;;AAAiI;AAAA;;AAAA;;AAAA;AAAA;;AAGjI;;AACJ;;AACJ;;;;;;AAL6C;;AAAA;;;;;;;;AAM7C;;AACI;;AAEI;;AACA;;AAAW;AAAA;;AAAA;;AAAA;AAAA,aAAyB,QAAzB,EAAyB;AAAA;;AAAA;;AAAA;AAAA,WAAzB;;AAGX;;AAEJ;;AACJ;;;;;;AANmB;;AAAA,mGAAyB,gBAAzB,EAAyB,qEAAzB,EAAyB,OAAzB,EAAyB,kBAAzB;;;;;;AASX;;AAAoB;;AAAQ;;;;;;AAC5B;;AAAmB;;AAAI;;;;UDrItCC,e;AAgBX,iCACShU,WADT,EAES+E,WAFT,EAGS9E,MAHT,EAIUgH,MAJV,EAI+B;AAAA;;AAHtB,eAAAjH,WAAA,GAAAA,WAAA;AACA,eAAA+E,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AACC,eAAAgH,MAAA,GAAAA,MAAA;AAnBV,eAAA9G,SAAA,GAAY,KAAZ;AAOA,eAAA8T,UAAA,GAAa,CACX;AAAExD,kBAAM,EAAE;AAAV,WADW,EAEX;AAAEA,kBAAM,EAAE;AAAV,WAFW,CAAb;AAIA,eAAAI,iBAAA,GAAyB,EAAzB;AAEA,eAAAC,qBAAA,GAA6B,EAA7B;AAOI;;;;qCACI;AACN,iBAAKK,OAAL;AACA,iBAAKC,UAAL;AACA,iBAAK5Q,UAAL;;AACA,gBAAI,KAAKjB,IAAT,EAAe;AACb,mBAAKkS,YAAL;AACD;AACF;;;uCACY;AACX,iBAAK1M,WAAL,CAAiBqM,UAAjB;AACD;;;oCACS;AACR,iBAAK7R,IAAL,GAAY,KAAKwF,WAAL,CAAiBoM,OAAjB,EAAZ;AACD;;;yCACc;AACb9P,mBAAO,CAACC,GAAR,CAAY,KAAK/B,IAAjB,EADa,CAEb;AACA;;AACA,iBAAK2U,YAAL,CAAkB1C,UAAlB,CAA6B;AAAEzK,sBAAQ,EAAE,KAAKxH,IAAL,CAAUwH;AAAtB,aAA7B;AACA,iBAAKmN,YAAL,CAAkB1C,UAAlB,CAA6B;AAAEjR,mBAAK,EAAE,KAAKhB,IAAL,CAAUgB;AAAnB,aAA7B;AACA,iBAAK2T,YAAL,CAAkB1C,UAAlB,CAA6B;AAAEhJ,sBAAQ,EAAE,KAAKjJ,IAAL,CAAUiJ;AAAtB,aAA7B;AACA,iBAAK0L,YAAL,CAAkB1C,UAAlB,CAA6B;AAAE5K,sBAAQ,EAAE,KAAKrH,IAAL,CAAUqH;AAAtB,aAA7B;AACA,iBAAKsN,YAAL,CAAkB1C,UAAlB,CAA6B;AAAEnB,kBAAI,EAAE,KAAK9Q,IAAL,CAAU8Q;AAAlB,aAA7B;AACA,iBAAK6D,YAAL,CAAkB1C,UAAlB,CAA6B;AAAEnL,qBAAO,EAAE,KAAK9G,IAAL,CAAU8G;AAArB,aAA7B;AACA,iBAAK6N,YAAL,CAAkB1C,UAAlB,CAA6B;AAAEf,oBAAM,EAAE,KAAKlR,IAAL,CAAUkR;AAApB,aAA7B;AACApP,mBAAO,CAACC,GAAR,CAAY,KAAK4S,YAAjB;;AAEA,gBAAI,KAAK3U,IAAL,CAAUqH,QAAd,EAAwB;AACtB,mBAAK,IAAI0L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK/S,IAAL,CAAUqH,QAAV,CAAmB2L,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClDjR,uBAAO,CAACC,GAAR,CAAY,KAAK/B,IAAL,CAAUqH,QAAV,CAAmB0L,CAAnB,EAAsB1L,QAAlC;AACA,qBAAKkK,qBAAL,CAA2B0B,IAA3B,CAAgC,KAAKjT,IAAL,CAAUqH,QAAV,CAAmB0L,CAAnB,EAAsB1L,QAAtD;AACA,qBAAKiK,iBAAL,CAAuB2B,IAAvB,CAA4B,KAAKjT,IAAL,CAAUqH,QAAV,CAAmB0L,CAAnB,EAAsB1L,QAAlD;AACD;;AACDvF,qBAAO,CAACC,GAAR,CAAY,KAAKwP,qBAAjB;AACD;;AAED,gBAAI,KAAKvR,IAAL,CAAU8Q,IAAd,EAAoB;AAClB,mBAAKhF,YAAL,CAAkB,KAAK9L,IAAL,CAAU8Q,IAAV,CAAetK,GAAjC,EADkB,CAElB;;AACA1E,qBAAO,CAACC,GAAR,CAAY,KAAK/B,IAAL,CAAU8Q,IAAV,CAAeA,IAA3B;AACD;;AACD,iBAAKoC,YAAL,GAAoB,KAAKlT,IAAL,CAAU8Q,IAAV,CAAeA,IAAnC,CA3Ba,CA4Bb;;AACAhP,mBAAO,CAACC,GAAR,CAAY,KAAKuP,iBAAjB;AAED;;;uCACY;AACX,gBAAI,KAAKtR,IAAT,EAAe;AACb,mBAAK2U,YAAL,GAAoB,KAAKlU,WAAL,CAAiBU,KAAjB,CAAuB;AACzCqG,wBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWnG,QAAhB,CAD+B;AAEzCL,qBAAK,EAAE,CACL,EADK,EAEL,CACE,0DAAWK,QADb,EAEE,0DAAWL,KAFb,EAGE,0DAAWQ,OAAX,CAAmB,2CAAnB,CAHF,CAFK,CAFkC;AAUzC6F,wBAAQ,EAAE,EAV+B;AAWzCP,uBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWzF,QAAhB,CAXgC;AAYzC6P,sBAAM,EAAE,EAZiC;AAazCJ,oBAAI,EAAE,CAAC,EAAD;AAbmC,eAAvB,CAApB;AAgBD,aAjBD,MAiBO;AACL,mBAAK6D,YAAL,GAAoB,KAAKlU,WAAL,CAAiBU,KAAjB,CAClB;AACEqG,wBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWnG,QAAhB,CADZ;AAEEL,qBAAK,EAAE,CACL,EADK,EAEL,CACE,0DAAWK,QADb,EAEE,0DAAWL,KAFb,EAGE,0DAAWQ,OAAX,CAAmB,2CAAnB,CAHF,CAFK,CAFT;AAUEyH,wBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW5H,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL,CAVZ;AAWE+F,wBAAQ,EAAE,EAXZ;AAYEyJ,oBAAI,EAAE,CAAC,EAAD,CAZR;AAaEhK,uBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWzF,QAAhB,CAbX;AAcE6P,sBAAM,EAAE,CAAC,EAAD,CAdV;AAeE0D,gCAAgB,EAAE,CAChB,EADgB,EAEhB,CAAC,0DAAWvT,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAFgB;AAfpB,eADkB,CAsBlB;AACA;AACA;AAxBkB,eAApB;AA0BD;;AACD,iBAAKuK,SAAL;AACD;;;mCACQ9F,K,EAAOpE,K,EAAO;AACrB,gBAAMsH,QAAQ,GAAG,KAAK0L,YAAL,CAAkB/R,GAAlB,CAAsB,UAAtB,CAAjB;AACA,gBAAMgS,gBAAgB,GAAG,KAAKD,YAAL,CAAkB/R,GAAlB,CAAsB,kBAAtB,CAAzB;;AACA,gBAAIjB,KAAK,KAAK,MAAV,IAAoBoE,KAAK,KAAK6O,gBAAgB,CAACjT,KAAnD,EAA0D;AACxD,mBAAKkT,GAAL,GAAW,EAAX;AACD,aAFD,MAEO,IAAIlT,KAAK,KAAK,MAAV,IAAoBoE,KAAK,KAAKkD,QAAQ,CAACtH,KAA3C,EAAkD;AACvD,mBAAKkT,GAAL,GAAW,EAAX;AACD,aAFM,MAEA;AACL,mBAAKA,GAAL,GAAW,sBAAX;AACD;AACF,W,CAED;;;;sCACY;AAAA;;AACV,iBAAKrP,WAAL,CAAiBqG,SAAjB,GAA6B/K,SAA7B,CACE,UAACe,IAAD,EAAU;AACRC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,qBAAI,CAACkK,MAAL,GAAclK,IAAd;AACD,aAJH,EAKE,UAACkG,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAPH;AASD,W,CACD;;;;uCACamL,Y,EAAe;AAAA;;AAC1B,iBAAK1N,WAAL,CAAiBsG,YAAjB,GAAgChL,SAAhC,CACE,UAACkL,SAAD,EAAe;AACblK,qBAAO,CAACC,GAAR,CAAYiK,SAAZ;AACA,qBAAI,CAACA,SAAL,GAAiBA,SAAjB;;AACA,kBAAIkH,YAAJ,EAAkB;AAChB,uBAAI,CAAClH,SAAL,GAAiBA,SAAS,CAAC9L,MAAV,CAAiB,UAAC8T,GAAD,EAAS;AACzC,yBAAOA,GAAG,CAACT,MAAJ,IAAcL,YAArB;AACD,iBAFgB,CAAjB;AAGD;AACF,aATH,EAUE,UAACnL,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAZH;AAcD,W,CAED;;;;qCACW+I,I,EAAM;AAEf;AACA;AACA;AACA;AAEA,iBAAK9E,SAAL,GAAiB,EAAjB;;AACA,gBAAG,KAAKhM,IAAR,EAAa;AACb8B,qBAAO,CAACC,GAAR,CAAY+O,IAAI,CAACA,IAAjB;AAEAhP,qBAAO,CAACC,GAAR,CAAY,KAAKmR,YAAjB;;AAEA,kBAAI,KAAKA,YAAL,IAAqBpC,IAAI,CAACA,IAA9B,EACA;AACE,qBAAKS,qBAAL,GAA6B,KAAKD,iBAAlC;AACAxP,uBAAO,CAACC,GAAR,CAAY,KAAKwP,qBAAjB;AACD,eAJD,MAMA,KAAKA,qBAAL,GAA6B,EAA7B;AACD,aApBgB,CAqBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,gBAAIT,IAAJ,EAAU,KAAKhF,YAAL,CAAkBgF,IAAI,CAACtK,GAAvB;AACV,iBAAKmO,YAAL,CAAkB1C,UAAlB,CAA6B;AAAEnB,kBAAI,EAAJA;AAAF,aAA7B;AACD,W,CAED;;;;yCACezJ,Q,EAAU;AACvB;AACA;AACAvF,mBAAO,CAACC,GAAR,CAAYsF,QAAZ;AACA,iBAAKsN,YAAL,CAAkB1C,UAAlB,CAA6B;AAAE5K,sBAAQ,EAAEA;AAAZ,aAA7B;AACD,W,CAED;;;;uCACa6J,M,EAAQ;AACnB;AACA,gBAAIA,MAAJ,EAAY,KAAKyD,YAAL,CAAkB1C,UAAlB,CAA6B;AAAEf,oBAAM,EAAEA,MAAM,CAACA;AAAjB,aAA7B;AACb,W,CAED;;;;yCACe;AAAA;;AACbpP,mBAAO,CAACC,GAAR,CAAY,KAAK4S,YAAjB;AAEA,iBAAK/T,SAAL,GAAiB,IAAjB,CAHa,CAKb;;AACA,gBAAI,KAAK+T,YAAL,CAAkBlT,OAAtB,EAA+B;AAC7BK,qBAAO,CAACC,GAAR,CAAY,WAAZ;AACA,mBAAK2F,MAAL,CAAY3C,KAAZ,CAAkB,oBAAlB,EAAwC,OAAxC,EAAiD;AAC/CoD,uBAAO,EAAE;AADsC,eAAjD;AAGA;AACD;;AAED,gBAAI,KAAKnI,IAAT,EAAe;AACb;AACA,mBAAKwF,WAAL,CACGiB,UADH,CACc,KAAKzG,IAAL,CAAUwG,GADxB,EAC6B,KAAKmO,YAAL,CAAkBhT,KAD/C,EAEGb,SAFH,CAEa,UAACe,IAAD,EAAe;AACxBC,uBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B,EADwB,CAExB;;AACA,oBAAMb,KAAK,GAAG,OAAI,CAAC2T,YAAL,CAAkBhT,KAAlB,CAAwBX,KAAtC;AACA,oBAAMiB,GAAG,GAAGJ,IAAI,CAACoD,OAAjB,CAJwB,CAKxB;AACA;;AACA,oBAAIhD,GAAG,KAAK,wCAAZ,EAAsD;AACpD,yBAAI,CAACyF,MAAL,CAAYQ,OAAZ,CAAoBjG,GAApB,EAAyB,SAAzB,EAAoC;AAClCkG,2BAAO,EAAE;AADyB,mBAApC;;AAGA,yBAAI,CAACzH,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,iBALD,MAKO;AACL,yBAAI,CAACuF,MAAL,CAAY3C,KAAZ,CAAkB9C,GAAlB,EAAuB,OAAvB,EAAgC;AAC9BkG,2BAAO,EAAE;AADqB,mBAAhC;AAGD;AACF,eAnBH;AAoBD,aAtBD,MAsBO;AACLrG,qBAAO,CAACC,GAAR,CAAY,KAAK4S,YAAL,CAAkBhT,KAA9B;AACA,mBAAK6D,WAAL,CAAiBsP,QAAjB,CAA0B,KAAKH,YAAL,CAAkBhT,KAA5C,EAAmDb,SAAnD,CACE,UAACe,IAAD,EAAU;AACRC,uBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACA,oBAAMI,GAAG,GAAGJ,IAAI,CAACoD,OAAjB,CAFQ,CAGR;;AACA,uBAAI,CAACyC,MAAL,CAAYQ,OAAZ,CAAoBjG,GAApB,EAAyB,SAAzB,EAAoC;AAClCkG,yBAAO,EAAE;AADyB,iBAApC;;AAGA,uBAAI,CAACzH,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAPQ,CAQR;;AACD,eAVH,EAWE,UAAC4C,KAAD,EAAW;AACTjD,uBAAO,CAACC,GAAR,CAAYgD,KAAK,CAACA,KAAN,CAAYE,OAAxB;;AACA,uBAAI,CAACyC,MAAL,CAAY3C,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYE,OAA9B,EAAuC,OAAvC,EAAgD;AAC9CkD,yBAAO,EAAE;AADqC,iBAAhD;AAGD,eAhBH;AAkBD;AACF,W,CACD;;;;8BACQ;AACN,mBAAO,KAAKwM,YAAL,CAAkBvS,QAAzB;AACD;;;;;;;yBA7QUqS,e,EAAe,2H,EAAA,sK,EAAA,uH,EAAA,yH;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,m6E;AAAA;AAAA;ACN5B;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAEI;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AACI;;AAAwB;;AAAmB;;AAC3C;;AAAuD;AAAA,qBAAY,IAAAM,YAAA,EAAZ;AAA0B,aAA1B;;AACnD;;AACI;;AACI;;AACA;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACA;;AAIJ;;AACJ;;AAEA;;AAUA;;AAcA;;AACI;;AACI;;AACA;;AACA;;AAGJ;;AACA;;AACJ;;AAEA;;AAWA;;AAaA;;AASA;;AASA;;AAUA;;AAWA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AAGJ;;;;AApI4C;;AAAA;;AAIqG;;AAAA;;AAChH;;AAAA;;AAQ8H;;AAAA;;AAC9H;;AAAA;;AAOW;;AAAA;;AAUA;;AAAA;;AAiByG;;AAAA;;AACpH;;AAAA;;AAOW;;AAAA;;AAWA;;AAAA;;AAaA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAUA;;AAAA;;AAaV;;AAAA;;AACA;;AAAA;;;;;;;;;wEDrIrBN,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTnS,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKawS,iB;;;;;;;oCAGThV,I,EACAiV,a,EAAqB;AAGrB,gBAAI,CAACjV,IAAD,IAAS,CAACiV,aAAd,EAA6B;AAC3B,qBAAOjV,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACE,MAAL,CAAY,UAAAF,IAAI;AAAA,qBACrBA,IAAI,CAACqQ,MAAL,CAAYjQ,WAAZ,GAA0BC,OAA1B,CAAkC4U,aAAa,CAAC7U,WAAd,EAAlC,MAAmE,CAAC,CAD/C;AAAA,aAAhB,CAAP;AAGD;;;;;;;yBAbU4U,iB;AAAiB,O;;;;cAAjBA,iB;AAAiB;;;;;wEAAjBA,iB,EAAiB;gBAH7B,kDAG6B;iBAHxB;AACJ1U,gBAAI,EAAE;AADF,W;AAGwB,U;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgF+E;;AAAkE;;AAAqB;;;;;;AAArB;;AAAA;;;;;;;;AAnB7H;;AAEI;;AAAI;;AAAc;;AAElB;;AAAI;;AAAG;;AAAO;;AAAI;;AAAwB;;AAAK;;AAAG;;AAAS;;AAAI;;AAAwB;;AAEvF;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAA4B;;AAChC;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAe;;AAQnB;;AACI;;AAAsB;;AAAM;;AAAY;;AAAO;;AAAI;;AACvD;;AAEA;;AAAI;;AAAwB;;AAC5B;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAA2B;;AAC/B;;AAAI;;AAAwB;;AAC5B;;AAAI;;AAAwB;;AAC5B;;AAAI;;;;AAAuC;;AAC3C;;AAAI;;AAA2B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAAI;;AAEpG;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+E;;AAE/G;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA+C;;AAAmB;;AAClE;;AAC9B;;AAAyB;;AAAO;;AAClC;;AAC4B;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAC9B;;AACF;;AACgC;;AAAkE;AAAA;;AAAA;;AAAA;AAAA;;AAChG;;AACF;;AAC4B;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAxDQ;;AAAA;;AAEc;;AAAA;;AAA6C;;AAAA;;AAE3D;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AASA;;AAAA;;AAAmF;;AAAA;;AAGnF;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UDhFf4U,a;AAQX,+BACUxU,MADV,EAEU8E,WAFV,EAGUkC,MAHV,EAG+B;AAAA;;AAFrB,eAAAhH,MAAA,GAAAA,MAAA;AACA,eAAA8E,WAAA,GAAAA,WAAA;AACA,eAAAkC,MAAA,GAAAA,MAAA;AAPV,eAAAW,aAAA;AAQO;;;;qCAgBC;AACN,iBAAK8M,UAAL;AACD;;;kCAEOnV,I,EAAS;AACf,iBAAKwF,WAAL,CAAiBoC,OAAjB,CAAyB5H,IAAzB,EADe,CAEf;;AACA,iBAAKU,MAAL,CAAYmH,aAAZ,CAA0B,kBAA1B;AACC;;;uCAEYvH,I,EAAI;AACf,iBAAKkF,WAAL,CAAiB+C,YAAjB,CAA8BjI,IAA9B;AACA,iBAAKI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD;;;uCAEU;AAAA;;AACX,iBAAKqD,WAAL,CAAiB4P,MAAjB,GAA0BtU,SAA1B,CACE,UAACe,IAAD,EAAU;AACR,qBAAI,CAAC7B,IAAL,GAAY6B,IAAI,CAACiH,WAAjB;AACAhH,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAjC;AACD,aAJH,EAKE,UAACkG,GAAD,EAAS;AACPjG,qBAAO,CAACiD,KAAR,CAAcgD,GAAd;AACD,aAPH;AASD,W,CAEC;;;;uCACQ;AAAA;;AACRjG,mBAAO,CAACC,GAAR,CAAY,KAAKiG,QAAjB;AAEA,iBAAKxC,WAAL,CAAiBkD,eAAjB,CAAiC,KAAKV,QAAtC,EAAgDlH,SAAhD,CAA0D,UAAAe,IAAI,EAAI;AAChEC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAIA,IAAI,CAACT,IAAL,KAAc,GAAlB,EAAuB;AACrB,uBAAI,CAACsG,MAAL,CAAYQ,OAAZ,CAAoBrG,IAAI,CAACoD,OAAzB,EAAkC,SAAlC,EAA6C;AACzCkD,yBAAO,EAAE;AADgC,iBAA7C;;AAGE,uBAAI,CAACgN,UAAL,GAJmB,CAKvB;AACA;;AACC;AAEF,aAXD;AAYD;;;oCAESlR,E,EAAI;AACZnC,mBAAO,CAACC,GAAR,CAAYkC,EAAZ;AAEA,iBAAK+D,QAAL,GAAgB/D,EAAhB;AACD;;;;;;;yBA7EUiR,a,EAAa,uH,EAAA,6K,EAAA,yH;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,s3C;AAAA;AAAA;ACV1B;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACJ;;AAEA;;AACI;;AACI;;AAAI;;AAAG;;AAAkD;;AAAI;;AAC7D;;AACA;;AACI;;AAA6C;AAAA,qBAAS,IAAA3M,YAAA,CAAa,MAAb,CAAT;AAA6B,aAA7B;;AAA+B;;AAAO;;AACvF;;AACA;;AAGI;;AACI;;AACI;;AACJ;;AAEA;;AACI;;AAAqD;AAAA;AAAA;;AAArD;;AACJ;;AAIA;;AAAsE;;AAAK;;AAC3E;;AAA6C;;AAAK;;AAAS;;AAC/D;;AACJ;;AACA;;AAAI;;AAAI;;AAER;;AACI;;AACI;;AACI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAU;;AAC9B;;AACJ;;AACA;;AACI;;;;AA2DJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAjG6E;;AAAA;;AAkCrD;;AAAA;;;;;;;;;;wEDnDX2M,a,EAAa;gBALzB,uDAKyB;iBALf;AACT5S,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEAb6S,kB;AACX,oCAAoB3U,MAApB,EAA4C8E,WAA5C,EAAgF;AAAA;;AAA5D,eAAA9E,MAAA,GAAAA,MAAA;AAAwB,eAAA8E,WAAA,GAAAA,WAAA;AAAsC;;;;wCAE9D;;;;;;;;AACJ,6BAAM,KAAKA,WAAL,CAAiBG,QAAjB,EAAN;;;AAARrB,2B;;2BACFA,K;;;;;AACF,2BAAK5D,MAAL,CAAYmH,aAAZ,CAA0B,UAA1B;;;;;wDAEO,I;;;;;;;;;AAEV;;;;;;;yBAVUwN,kB,EAAkB,8G,EAAA,oJ;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;wEAEDA,kB,EAAkB;gBAH9B,wDAG8B;iBAHnB;AACVxS,sBAAU,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;;;;;;;ACV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMayS,iB;;;;;;;oCAGTtV,I,EACAuV,W,EAAmB;AAGnB,gBAAI,CAACvV,IAAD,IAAS,CAACuV,WAAd,EAA2B;AACzB,qBAAOvV,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACE,MAAL,CAAY,UAAAF,IAAI;AAAA,qBACrBA,IAAI,CAACmQ,IAAL,CAAU/P,WAAV,GAAwBC,OAAxB,CAAgCkV,WAAW,CAACnV,WAAZ,EAAhC,MAA+D,CAAC,CAD3C;AAAA,aAAhB,CAAP;AAGD;;;;;;;yBAbUkV,iB;AAAiB,O;;;;cAAjBA,iB;AAAiB;;;;;wEAAjBA,iB,EAAiB;gBAH7B,kDAG6B;iBAHxB;AACJhV,gBAAI,EAAE;AADF,W;AAGwB,U;;;;;;;;;;;;;;;;;;ACN9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAuBA,UAAMkV,MAAM,GAAW,CACrB;AACEnB,YAAI,EAAE,KADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OADqB,EAKrB;AACErB,YAAI,EAAE,EADR;AAEEoB,mBAAW,EAAE,CAAC,wFAAD,CAFf;AAGEC,iBAAS,EAAE;AAHb,OALqB,EAUrB;AACErB,YAAI,EAAE,UADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OAVqB,EAcrB;AAAErB,YAAI,EAAE,sBAAR;AAAgCqB,iBAAS,EAAE;AAA3C,OAdqB,EAerB;AAAErB,YAAI,EAAE,mCAAR;AAA6CqB,iBAAS,EAAE;AAAxD,OAfqB,EAgBrB;AAAErB,YAAI,EAAE,0BAAR;AAAoCqB,iBAAS,EAAE;AAA/C,OAhBqB,EAiBrB;AAAErB,YAAI,EAAE,4BAAR;AAAsCoB,mBAAW,EAAE,CAAC,4EAAD,CAAnD;AAAmEC,iBAAS,EAAE;AAA9E,OAjBqB,EAkBrB;AACErB,YAAI,EAAE,WADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAGEC,iBAAS,EAAE;AAHb,OAlBqB,EAuBrB;AACErB,YAAI,EAAE,QADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OAvBqB,EA2BrB;AACErB,YAAI,EAAE,gBADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OA3BqB,EA+BrB;AACErB,YAAI,EAAE,SADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAGGC,iBAAS,EAAE;AAHd,OA/BqB,EAoCrB;AACErB,YAAI,EAAE,WADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OApCqB,EAwCrB;AACErB,YAAI,EAAE,OADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OAxCqB,EA4CrB;AACErB,YAAI,EAAE,MADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OA5CqB,EAgDrB;AACErB,YAAI,EAAE,OADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OAhDqB,EAoDrB;AACErB,YAAI,EAAE,UADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OApDqB,EAwDrB;AACErB,YAAI,EAAE,SADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OAxDqB,EA4DrB;AACErB,YAAI,EAAE,WADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OA5DqB,EAgErB;AACErB,YAAI,EAAE,WADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OAhEqB,EAoErB;AACErB,YAAI,EAAE,iBADR;AAEEoB,mBAAW,EAAE,CAAC,4EAAD,CAFf;AAE+BC,iBAAS,EAAE;AAF1C,OApEqB,CAAvB;;UA+EaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAalL,OAAb,CAAqB+K,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBG,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRhL,mBAAO,EAAE,CAAC,6DAAaF,OAAb,CAAqB+K,MAArB,CAAD,CADD;AAERI,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACrG7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0BoC;;AAAqC;;AAAiB;;;;;;AACtD;;AAAkC;;AAAmC;;;;;;AAFzE;;AACI;;AACA;;AACJ;;;;;;AAFS;;AAAA;;AACA;;AAAA;;;;;;AAYL;;AAAwC;;AAAoB;;;;;;AAC5D;;AAAyC;;AACzC;;;;;;AAHJ;;AACI;;AACA;;AAEJ;;;;;;AAHS;;AAAA;;AACA;;AAAA;;;;;;;;;;UD9B5BC,c;AAWX,gCACSpV,WADT,EACmC;AAC1B+E,mBAFT,EAE6C;AACpC9E,cAHT,EAIUC,KAJV,EAKU+G,MALV,EAKiC;AAAA;;AAJxB,eAAAjH,WAAA,GAAAA,WAAA;AACA,eAAA+E,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AACC,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAA+G,MAAA,GAAAA,MAAA,CAAuB,CAbjC;;AACA,eAAA6B,OAAA,GAAU,KAAV;AACA,eAAA3I,SAAA,GAAY,KAAZ;AAYC;;;;qCAEO;AACN,iBAAKK,UAAL;AACD;;;uCACY;AAAA;;AACX,iBAAKuI,SAAL,GAAiB,KAAK/I,WAAL,CAAiBU,KAAjB,CAAuB;AACtCH,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWK,QAAZ,EAAsB,0DAAWL,KAAjC,EAAwC,0DAAWQ,OAAX,CAAmB,2CAAnB,CAAxC,CAAL,CAD+B;AAEtCyH,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW5H,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAAL;AAF4B,aAAvB,CAAjB;AAKA,iBAAKX,KAAL,CAAWE,MAAX,CAAkBC,SAAlB,CAA4B,UAAAC,KAAK,EAAI;AACnC,qBAAI,CAACC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACD,aAFD;AAGD;;;sCACW;AAAA;;AACV,iBAAKJ,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK4I,SAAL,CAAe/H,OAAnB,EAA4B;AAC1B;AACD;;AACD,iBAAK+D,WAAL,CAAiBiE,KAAjB,CAAuB,KAAKD,SAAL,CAAe7H,KAAtC,EAA6Cb,SAA7C,CAAuD,UAAAe,IAAI,EAAI;AAE7DC,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAjC;AACA,kBAAMI,GAAG,GAAGJ,IAAI,CAACoD,OAAjB;AACA,kBAAMX,KAAK,GAAGzC,IAAI,CAACyC,KAAnB;AACA,kBAAMtD,KAAK,GAAG,OAAI,CAACwI,SAAL,CAAe7H,KAAf,CAAqBX,KAAnC;;AACA,qBAAI,CAAC0G,MAAL,CAAYQ,OAAZ,CAAoBjG,GAApB,EAAyB,SAAzB,EAAoC;AAClCkG,uBAAO,EAAE;AADyB,eAApC;;AAGA,qBAAI,CAAC3C,WAAL,CAAiBsQ,QAAjB,CAA0BxR,KAA1B;;AACA,qBAAI,CAAC5D,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,SAAD,EAAYnB,KAAZ,CAArB;AAED,aAZD,EAaE,UAAC+D,KAAD,EAAW;AACTjD,qBAAO,CAACiD,KAAR,CAAcA,KAAK,CAACA,KAAN,CAAYE,OAA1B;AACA,qBAAI,CAAC8Q,YAAL,GAAoBhR,KAApB;;AACA,qBAAI,CAAC2C,MAAL,CAAY3C,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYE,OAA9B,EAAuC,OAAvC,EAAgD;AAC9CkD,uBAAO,EAAE;AADqC,eAAhD;AAGD,aAnBH;AAsBD,W,CACD;;;;8BACQ;AAAE,mBAAO,KAAKqB,SAAL,CAAepH,QAAtB;AAAiC;;;;;;;yBA7DhCyT,c,EAAc,2H,EAAA,sK,EAAA,uH,EAAA,+H,EAAA,yH;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,e;AAAA,kiC;AAAA;AAAA;ACJ3B;;AACI;;AACI;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAAoD;AAAA,qBAAY,IAAAG,SAAA,EAAZ;AAAuB,aAAvB;;AAChD;;AACA;;AAAI;;AAA0B;;AAC9B;;AACI;;AACI;;AACJ;;AACA;;AAEI;;AACA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AAEI;;AACA;;AAKJ;;AACJ;;AAEA;;AACA;;AASJ;;AACJ;;AACJ;;AACJ;;AAsDJ;;AACJ;;AACA;;;;AApGgD;;AAAA;;AASiB;;AAAA;;AAC5B;;AAAA;;AAY2I;;AAAA;;AAC3I;;AAAA;;;;;;;;;wED5BxBH,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACTvT,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6B4B;;AAAqC;;AAAiB;;;;;;AACtD;;AAAkC;;AAClC;;;;;;AAHJ;;AACI;;AACA;;AAEJ;;;;;;AAHS;;AAAA;;AACA;;AAAA;;;;;;;;;;UDpBpByT,mB;AAGX,qCACUzV,QADV,EAESC,WAFT,EAGSC,MAHT,EAGyB;AAAA;;AAFf,eAAAF,QAAA,GAAAA,QAAA;AACD,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAJT,eAAAE,SAAA,GAAY,KAAZ;AAI4B;;;;qCAEpB;AACN,iBAAKsV,cAAL,GAAsB,KAAKzV,WAAL,CAAiBU,KAAjB,CAAuB;AAC3CH,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWK,QAAZ,EAAsB,0DAAWL,KAAjC,EAAwC,0DAAWQ,OAAX,CAAmB,2CAAnB,CAAxC,CAAL;AADoC,aAAvB,CAAtB;AAGD;;;qCAEU;AAAA;;AACT,iBAAKZ,SAAL,GAAiB,IAAjB,CADS,CAGT;;AACA,gBAAI,KAAKsV,cAAL,CAAoBzU,OAAxB,EAAiC;AAC/B;AACD;;AACDK,mBAAO,CAACC,GAAR,CAAY,yBAAyB,KAAKmU,cAAL,CAAoBvU,KAApB,CAA0BX,KAA/D;AACA,gBAAM4D,IAAI,GAAG;AACX5D,mBAAK,EAAE,KAAKkV,cAAL,CAAoBvU,KAApB,CAA0BX;AADtB,aAAb;AAGA,iBAAKR,QAAL,CAAc2V,WAAd,CAA0BvR,IAA1B,EAAgC9D,SAAhC,CAA0C,UAAAe,IAAI,EAAI;AAChDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAMG,MAAM,GAAGH,IAAI,CAACqG,OAApB;AACA,kBAAMjG,GAAG,GAAGJ,IAAI,CAACG,MAAjB;AACA,kBAAMhB,KAAK,GAAG,OAAI,CAACkV,cAAL,CAAoBvU,KAApB,CAA0BX,KAAxC;;AACA,kBAAIgB,MAAJ,EAAY;AACVE,qBAAK,CAACD,GAAD,CAAL;;AAEA,uBAAI,CAACvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,4BAAD,EAA+BnB,KAA/B,CAArB;AACD,eAJD,MAMA;AACEkB,qBAAK,CAACD,GAAD,CAAL;AACD;AACF,aAdD;AAiBD;;;8BA7BO;AAAE,mBAAO,KAAKiU,cAAL,CAAoB9T,QAA3B;AAAsC;;;;;;;yBAbrC6T,mB,EAAmB,sK,EAAA,2H,EAAA,uH;AAAA,O;;;cAAnBA,mB;AAAmB,uC;AAAA,iB;AAAA,e;AAAA,wkC;AAAA;AAAA;ACVhC;;AACA;;AAKA;;AACI;;AACI;;AACI;;AAEI;;AACJ;;AACJ;;AAEA;;AACI;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAmB;;AACvB;;AAAyD;AAAA,qBAAY,IAAA5T,QAAA,EAAZ;AAAsB,aAAtB;;AACrD;;AACI;;AACI;;AACA;;AACA;;AAKJ;;AACJ;;AAEA;;AACA;;AACI;;AAAwD;;AAAQ;;AACpE;;AACA;;AAAyD;;AAAI;;AAGjE;;AACJ;;AAEJ;;AACJ;;;;AAxBwC;;AAAA;;AAIgC;;AAAA;;AAC3C;;AAAA;;;;;;;;;wEDlBhB4T,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT3T,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBoC;;AAAsC;;AAAc;;;;;;AADxD;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAaL;;AAAwC;;AAAgB;;;;;;AAD5D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAWL;;AAAuC;;AAAmB;;;;;;AAD9D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAWL;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAWL;;AAAqC;;AAAiB;;;;;;AAD1D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAcL;;AAAsC;;AAAkB;;;;;;AAD5D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAiBL;;AAAsC;;AAAkB;;;;;;AAD5D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;UDlF5B4T,iB;AAMX,mCACU3V,WADV,EAEU+E,WAFV,EAGU9E,MAHV,EAIUgH,MAJV,EAIiC;AAAA;;AAHvB,eAAAjH,WAAA,GAAAA,WAAA;AACA,eAAA+E,WAAA,GAAAA,WAAA;AACA,eAAA9E,MAAA,GAAAA,MAAA;AACA,eAAAgH,MAAA,GAAAA,MAAA;AATV,eAAA9G,SAAA,GAAY,KAAZ;AAUC,S,CAED;;;;;wCACc;AACZ,iBAAKyV,WAAL,GAAmB,KAAK5V,WAAL,CAAiBU,KAAjB,CAAuB;AACxCkG,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWhG,QAAhB,CAD8B;AAExCL,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWK,QAAhB,CAFiC;AAGxClB,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWkB,QAAhB,CAHgC;AAIxCW,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWX,QAAhB,CAJgC;AAKxCmG,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWnG,QAAhB,CAL8B;AAMxCyF,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWzF,QAAhB,CAN+B;AAOxC6P,oBAAM,EAAE,CAAC,EAAD,EAAK,0DAAW7P,QAAhB;AAPgC,aAAvB,CAAnB;AASD,W,CACD;AACA;;;;qCAEQ;AACN,iBAAKiJ,WAAL;AACD,W,CACD;;;;uCACa;AACX,iBAAK9E,WAAL,CAAiB8Q,WAAjB,CAA6B,KAAKD,WAAlC,EAA+CvV,SAA/C,CAAyD,UAACgE,GAAD,EAAS;AAChEhD,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC+C,GAAjC;AACD,aAFD;AAGD,W,CACD;;;;uCACa;AAAA;;AACX,iBAAKlE,SAAL,GAAiB,IAAjB,CADW,CACe;;AAC1B,gBAAI,KAAKyV,WAAL,CAAiB5U,OAArB,EAA8B;AAC5B,mBAAKiG,MAAL,CAAY3C,KAAZ,CAAkB,cAAlB,EAAkC,OAAlC,EAA2C;AACzCoD,uBAAO,EAAE;AADgC,eAA3C,EAD4B,CAI5B;;AACA;AACD,aAND,MAOK;AACHrG,qBAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKsU,WAAL,CAAiB1U,KAAtD;AACA,mBAAK6D,WAAL,CAAiB8Q,WAAjB,CAA6B,KAAKD,WAAL,CAAiB1U,KAA9C,EAAqDb,SAArD,CAA+D,UAACgE,GAAD,EAAS;AACtE,uBAAI,CAACuR,WAAL,CAAiB9L,KAAjB;;AACA,uBAAI,CAAC7C,MAAL,CAAYQ,OAAZ,CAAoB,YAApB,EAAkC,SAAlC,EAA6C;AAC3CC,yBAAO,EAAE;AADkC,iBAA7C;;AAGArG,uBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC+C,GAAjC;AACD,eAND;AAOD;AAEF;;;8BA/BO;AAAE,mBAAO,KAAKuR,WAAL,CAAiBjU,QAAxB;AAAmC;;;;;;;yBA3BlCgU,iB,EAAiB,2H,EAAA,6K,EAAA,uH,EAAA,yH;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,iB;AAAA,gB;AAAA,o7C;AAAA;AAAA;ACb9B;;AACI;;AACI;;AACI;;AACA;;AAAI;;AAAG;;AAAiB;;AAAI;;AAChC;;AACA;;AACI;;AACI;;AAA6B;;AAAQ;;AACrC;;AACI;;AACI;;AACI;;AAEI;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAEI;;AACA;;AAEA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAK;;AACL;;AACA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAK;;AACL;;AACA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAI;;AAAK;;AACT;;AACA;;AAGJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAAI;;AACJ;;AACI;;AACI;;AACA;;AACA;;AAGA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AACI;;AACA;;AACA;;AAGA;;AACI;;AAAoB;;AAAG;;AACvB;;AAAuB;;AAAM;;AAC7B;;AAAsB;;AAAK;;AAC/B;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AACJ;;AACI;;AAAQ;AAAA,qBAAS,IAAAnK,UAAA,EAAT;AAAqB,aAArB;;AAA+C;;AAAG;;AAC9D;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA5GwC;;AAAA;;AAQmG;;AAAA;;AAEtG;;AAAA;;AAWwG;;AAAA;;AAExG;;AAAA;;AAUwG;;AAAA;;AACxG;;AAAA;;AAU0F;;AAAA;;AAC1F;;AAAA;;AAUwF;;AAAA;;AACxF;;AAAA;;AAa+E;;AAAA;;AAC/E;;AAAA;;AAgBgF;;AAAA;;AAChF;;AAAA;;;;;;;;;wEDjFxBmK,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT9T,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgCwB;;AAAoC;;AAAgB;;;;;;AACpD;;AAAqC;;AAAkC;;;;;;AACvE;;AAAqC;;AAA4C;;;;;;AACjF;;AAAmC;;AAAoC;;;;;;AAJ3E;;AACI;;AACA;;AACA;;AACA;;AACJ;;;;;;AAJS;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;UDzBhB+T,yB;AAKX,2CACU/V,QADV,EAEUC,WAFV,EAGUC,MAHV,EAIUC,KAJV,EAIiC;AAAA;;AAHvB,eAAAH,QAAA,GAAAA,QAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAPV,eAAAC,SAAA,GAAY,KAAZ;AAOoC;;;;qCAE5B;AAAA;;AACN,iBAAKD,KAAL,CAAWE,MAAX,CAAkBC,SAAlB,CAA4B,UAAAC,KAAK,EAAI;AACnC,qBAAI,CAACC,KAAL,GAAaD,KAAK,CAACC,KAAnB,CADmC,CAEnC;AACD,aAHD;AAIA,iBAAKC,UAAL;AACD;;;uCACY;AACX,iBAAKuV,cAAL,GAAsB,KAAK/V,WAAL,CAAiBU,KAAjB,CAAuB;AAC3CC,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,CAArB,CAA/C,EAAwE,0DAAWC,OAAX,CAAmB,UAAnB,CAAxE,CAAL;AADqC,aAAvB,CAAtB;AAGD;;;qCAGU;AAAA;;AACT,iBAAKZ,SAAL,GAAiB,IAAjB,CADS,CAET;;AACA,gBAAI,KAAK4V,cAAL,CAAoB/U,OAAxB,EAAiC;AAC/B;AACD;;AACD,gBAAMzB,IAAI,GAAG;AACXgB,mBAAK,EAAE,KAAKA,KADD;AAEXU,qBAAO,EAAE,KAAK8U,cAAL,CAAoB7U,KAApB,CAA0BP;AAFxB,aAAb,CANS,CAWT;AACA;AACA;;AACA,iBAAKZ,QAAL,CAAciW,aAAd,CAA4BzW,IAA5B,EAAkCc,SAAlC,CAA4C,UAAAe,IAAI,EAAI;AAClDC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAMG,MAAM,GAAGH,IAAI,CAACqG,OAApB;AACA,kBAAMjG,GAAG,GAAGJ,IAAI,CAACG,MAAjB;;AACA,kBAAIA,MAAJ,EAAY;AAEVE,qBAAK,CAACD,GAAD,CAAL;;AACA,uBAAI,CAACvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,mBAAD,EAAsB,OAAI,CAACnB,KAA3B,CAArB;AACD,eAJD,MAIO;AACLkB,qBAAK,CAACD,GAAD,CAAL;AACD;AACF,aAXD;AAYD;;;8BA5BO;AAAE,mBAAO,KAAKuU,cAAL,CAAoBpU,QAA3B;AAAsC;;;;;;;yBAvBrCmU,yB,EAAyB,sK,EAAA,2H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAzBA,yB;AAAyB,6C;AAAA,iB;AAAA,e;AAAA,g7B;AAAA;AAAA;ACVtC;;AACA;;AAKA;;AACI;;AACI;;AACI;;AAEI;;AACJ;;AACJ;;AAEA;;AACI;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AAAI;;AAAmB;;AAEvB;;AAAyD;AAAA,qBAAY,IAAAlU,QAAA,EAAZ;AAAsB,aAAtB;;AACjE;;AACY;;AACI;;AACA;;AAGA;;AAMJ;;AACA;;AAEA;;AACX;;AACsC;;AAAM;;AAC7C;;AACY;;AAAgF;;AAAI;;AAOxF;;AACJ;;AACJ;;AAEJ;;;;AA/BwC;;AAAA;;AAMhB;;AAAA;;AACC;;AAAA;;;;;;;;;wEDrBZkU,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTjU,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYwE,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB0P,eAAzB,CAAyC,yDAAzC,WACS,UAAA3O,GAAG;AAAA,eAAIjG,OAAO,CAACiD,KAAR,CAAcgD,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAAS4O,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIxH,CAAC,GAAG,IAAI9K,KAAJ,CAAU,yBAAyBmS,GAAzB,GAA+B,GAAzC,CAAR;AACArH,WAAC,CAACnO,IAAF,GAAS,kBAAT;AACA,gBAAMmO,CAAN;AACA,SAJM,CAAP;AAKA;;AACDoH,8BAAwB,CAACK,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAL,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAM,YAAM,CAACrB,OAAP,GAAiBe,wBAAjB;AACAA,8BAAwB,CAAC1S,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n\n@Pipe({\n    name: 'tableFilter'\n\n})\nexport class TableFilterPipe implements PipeTransform {\n    transform(\n        user: any,\n        search_id: string\n    ): User[] {\n\n        if (!user || !search_id) {\n            return user;\n        }\n        return user.filter(user =>\n            user.userId.toLowerCase().indexOf(search_id.toLowerCase()) !== -1);\n\n    }\n\n}\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-signupotp',\n  templateUrl: './signupotp.component.html',\n  styleUrls: ['./signupotp.component.css']\n})\nexport class SignupotpComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  signupotpForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.signupotpForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.signupotpForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.signupotpForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.signupotpForm.value.code\n    };\n\n    this.authServ.verifyOTPEmail(user).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      if (status) {\n\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status)\n        this.router.navigate(['profile', this.email]);\n      } else {\n        alert(msg);\n      }\n    });\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"signupotpForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/register-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","// import { Observable, throwError } from 'rxjs';\n// import { catchError, retry } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,HttpEvent, HttpErrorResponse, HttpEventType  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { Map } from './map';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapserviceService {\n  constructor(private http: HttpClient) { \n}\n\nprivate  apiurl = \"https://asasa.com/api/property\";\nreadData(): Observable<any> {\n  return this.http.get(this.apiurl);\n}\n\n}","import { Component, AfterViewInit, OnInit } from '@angular/core';\nimport { ROUTES } from './menu-items';\nimport { RouteInfo } from './sidebar.metadata';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n//declare var $: any;\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html'\n})\nexport class SidebarComponent implements OnInit {\n  showMenu = '';\n  showSubMenu = '';\n  public sidebarnavItems:RouteInfo[]=[];\n  // this is for the open close\n  addExpandClass(element: string) {\n    if (element === this.showMenu) {\n      this.showMenu = '0';\n    } else {\n      this.showMenu = element;\n    }\n  }\n\n  constructor(\n    private modalService: NgbModal,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  // End open close\n  ngOnInit() {\n    this.sidebarnavItems = ROUTES.filter(sidebarnavItem => sidebarnavItem);\n  }\n}\n","<nav class=\"sidebar-nav\">\n    <ul id=\"sidebarnav\">\n        <!-- First level menu -->\n        <li class=\"sidebar-item\" [class.active]=\"showMenu === sidebarnavItem.title\" *ngFor=\"let sidebarnavItem of sidebarnavItems\"\n            [routerLinkActive]=\"sidebarnavItem.submenu.length != 0 ? '' : 'active'\">\n            <div class=\"nav-small-cap\" *ngIf=\"sidebarnavItem.extralink === true\">{{sidebarnavItem.title}}</div>\n            <a class=\"sidebar-link waves-effect waves-dark\" [routerLink]=\"sidebarnavItem.class === '' ? [sidebarnavItem.path] : null\"\n                [ngClass]=\"[sidebarnavItem.class]\" *ngIf=\"!sidebarnavItem.extralink;\" (click)=\"addExpandClass(sidebarnavItem.title)\"\n                [routerLinkActive]=\"sidebarnavItem.submenu.length != 0 ? '' : 'active'\">\n                <i [ngClass]=\"[sidebarnavItem.icon]\"></i>\n                <span class=\"hide-menu\">{{sidebarnavItem.title}}</span>\n            </a>\n        </li>\n    </ul>\n</nav>\n","import { Component, EventEmitter, Output } from '@angular/core';\n//declare var $: any;\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html'\n})\nexport class NavigationComponent {\n  @Output()\n  toggleSidebar = new EventEmitter<void>();\n\n  public showSearch = false;\n\n  constructor() {}\n}\n","<!-- ============================================================== -->\n<!-- toggle and nav items -->\n<!-- ============================================================== -->\n<ul class=\"navbar-nav float-left mr-auto\">\n  <li class=\"nav-item d-none d-md-block d-lg-none\">\n    <a\n      (click)=\"toggleSidebar.emit()\"\n      class=\"nav-link sidebartoggler waves-effect waves-light\"\n      href=\"javascript:void(0)\"\n    >\n      <i class=\"mdi mdi-menu font-24\"></i>\n    </a>\n  </li>\n  <!-- ============================================================== -->\n  <!-- Search -->\n  <!-- ============================================================== -->\n  <li class=\"nav-item search-box\">\n    <a\n      (click)=\"showSearch = !showSearch\"\n      class=\"nav-link waves-effect waves-dark\"\n      href=\"javascript:void(0)\"\n    >\n      <i class=\"ti-search\"></i>\n    </a>\n    <form\n      class=\"app-search position-absolute\"\n      [ngClass]=\"{ 'show-search': showSearch }\"\n    >\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search &amp; enter\"\n      />\n      <a class=\"srh-btn\" (click)=\"showSearch = !showSearch\">\n        <i class=\"ti-close\"></i>\n      </a>\n    </form>\n  </li>\n</ul>\n<!-- ============================================================== -->\n<!-- Right side toggle and nav items -->\n<!-- ============================================================== -->\n<ul class=\"navbar-nav float-right\">\n  <!-- ============================================================== -->\n  <!-- User profile and search -->\n  <!-- ============================================================== -->\n  <li class=\"nav-item dropdown\" ngbDropdown placement=\"bottom-right\">\n    <a\n      ngbDropdownToggle\n      class=\"nav-link dropdown-toggle text-muted waves-effect waves-dark pro-pic\"\n      href=\"javascript:void(0)\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n    >\n      <img\n        src=\"assets/1.jpg\"\n        alt=\"user\"\n        class=\"rounded-circle\"\n        width=\"31\"\n      />\n    </a>\n    <div class=\"dropdown-menu user-dd\" ngbDropdownMenu>\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"ti-user m-r-5 m-l-5\"></i> My Profile</a\n      >\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"ti-wallet m-r-5 m-l-5\"></i> My Balance</a\n      >\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"ti-email m-r-5 m-l-5\"></i> Inbox</a\n      >\n      <div class=\"dropdown-divider\"></div>\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"ti-settings m-r-5 m-l-5\"></i> Account Setting</a\n      >\n      <div class=\"dropdown-divider\"></div>\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"fa fa-power-off m-r-5 m-l-5\"></i> Logout</a\n      >\n      <div class=\"dropdown-divider\"></div>\n      <div class=\"p-l-30 p-10\">\n        <a href=\"javascript:void(0)\" class=\"btn btn-sm btn-success btn-rounded\"\n          >View Profile</a\n        >\n      </div>\n    </div>\n  </li>\n  <!-- ============================================================== -->\n  <!-- User profile and search -->\n  <!-- ============================================================== -->\n</ul>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { User } from '../login/User';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport jwt_decode from 'jwt-decode';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  private readonly url = 'https://my-asasa.herokuapp.com';\n  user: any;\n  form_title: any;\n  genericId: any;\n\n  constructor(private httpClient: HttpClient, public router: Router) {\n  }\n\n  //////////// Send data to inventory using inventory form /////////////\n  createInventory(user: any) {\n    console.log('Create user func');\n    return this.httpClient\n      .post(`${this.url}/inventory/add`, user)\n      .pipe(catchError(this.handleError));\n  }\n  // Set inventory form title\n  setFormTitle(name) {\n    this.form_title = name;\n  }\n  // Get inventory form title\n  getFormTitle() {\n    return this.form_title;\n  }\n  removeFormTitle(){\n    this.form_title = null;\n  }\n  /////////////// Get data from inventory to the inventory table ////////////\n  getInventory() {\n    return this.httpClient.get<any>(`${this.url}/inventory`);\n  }\n  ///////// Getting user table data //////////////\n  getUsers() {\n    return this.httpClient.get<any>(`${this.url}/users`);\n  }\n\n  getLeads() {\n    return this.httpClient.get<any>(`${this.url}/leads`);\n  }\n\n  // Function to get all data from Leads, Inventory i.e; both\n  getAll(){\n    \n    return this.httpClient.get<any>(`${this.url}/inventory/all`);\n  }\n  // Function to call delete api for the user data table\n  deleteUser(id) {\n    console.log('Calling deleteUser', id);\n    return this.httpClient.delete<any>(\n      `https://my-asasa.herokuapp.com/users/${id}`\n    );\n  }\n  ////////////// Send new row table data /////////////\n  createUsers(user: any) {\n    console.log('Create user func', user);\n    if(user instanceof File) {\n      const formData = new FormData();\n      formData.append('images', user);\n      return this.httpClient\n      .post(`${this.url}/users/save`, formData);\n    } else {\n      return this.httpClient\n      .post(`${this.url}/users/save`, user)\n      .pipe(catchError(this.handleError));\n    }\n  }\n  // create service to get and set the token to local storage\n\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getDecodedToken(token: string): any {\n    try {\n      // console.log(token);\n      return jwt_decode(token);\n    } catch (Error) {\n      console.log(Error);\n      return null;\n    }\n  }\n  getToken() {\n    return localStorage.getItem('token');\n    // console.log('token:\\t', token);\n    // return token;\n  }\n\n  // Function to delete the single inventory\n  deleteInventory(id) {\n    console.log('Calling deleteInventory', id);\n    return this.httpClient.delete<any>(\n      `https://my-asasa.herokuapp.com/inventory/${id}`\n    );\n  }\n\n  // Getting cities names from api\n  getCities() {\n    return this.httpClient.get<any>(`https://asasa.com/api/get_cities`);\n  }\n\n  // Getting Locations names\n  getLocations() {\n    return this.httpClient.get<any>(`https://asasa.com/api/get_locations`);\n  }\n\n  // Function to set user from user/inventory table to update\n  setUser(user: any) {\n    this.user = user;\n  }\n  // Function to get user from user/inventory table to update\n  getUser() {\n    return this.user;\n  }\n  removeUser() {\n    this.user = null;\n  }\n\n  // Api call to Update the already existed user/agent in the user component\n  updateUser(id, data) {\n    return this.httpClient.put(\n      `https://my-asasa.herokuapp.com/users/${id}`,\n      data\n    );\n  }\n  // Update a single Inventory\n  updateInventory(id, data) {\n    console.log('Calling updateInventory', id);\n    return this.httpClient.put(\n      `https://my-asasa.herokuapp.com/inventory/${id}`,\n      data\n    );\n  }\n  ///////// Function to Register the new user /////////////\n  register(user: any): Observable<any> {\n    return this.httpClient\n      .post(`${this.url}/users/register`, user);\n  }\n  /* API Call to verify otp code */\n  ////// Verifying the email address while signing the user up ///////////////////\n  verifyOTPEmail(user: any): Observable<any> {\n    return this.httpClient\n      .post(`${this.url}/users/verifyemail`, user)\n      .pipe(catchError(this.handleError));\n  }\n  ///////// Verifying the user using otp code to his gmail to change his/her password /////////////\n  verifyOTPCode(user: any): Observable<any> {\n    return this.httpClient\n      .post(`${this.url}/users/verifyotpcode`, user)\n      .pipe(catchError(this.handleError));\n  }\n  ///////////// Adding new password after forgetting the old password ////////\n  newpassword(user: any): Observable<any> {\n    return this.httpClient\n      .post(`${this.url}/users/newpassword`, user)\n      .pipe(catchError(this.handleError));\n  }\n\n  /////////// Function to Login the already existed user /////////////\n  public login(user: any): Observable<any> {\n    return this.httpClient.post(`${this.url}/users/login`, user);\n  }\n\n  ///////////// Verify User Email ////////////////\n  verifyEmail(body: any): Observable<any> {\n    return this.httpClient.post(`${this.url}/users/verifyemail`, body);\n  }\n\n  /////////////// Get Users Token //////////////////////////\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  get isLoggedIn(): boolean {\n    const authToken = localStorage.getItem('access_token');\n    return authToken !== null ? true : false;\n  }\n  ////////// Logout Function ////////////////\n  logout() {\n    if (localStorage.removeItem('access_token') == null) {\n      this.router.navigate(['users/login']);\n    }\n  }\n  ///////////////////////////////////////////\n\n  ///////// Get Profile Function ////////////\n  getUserProfile(id): Observable<any> {\n    return this.httpClient\n      .get(`${this.url}/user/profile/${id}`, { headers: this.headers })\n      .pipe(\n        map((res: Response) => {\n          return res || {};\n        }),\n        catchError(this.handleError)\n      );\n  }\n  ///////////////////////////////////////////\n\n  ///////// Error Handling /////////////////\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n  // ////////////////////////////////////////\n\n  setGenericId(id) {\n    this.genericId = id;\n  }\n\n  getGenericId() {\n    return this.genericId;\n  }\n  // ////////////////////////////////////////\n}\n","<!-- <div id=\"main-wrapper\" [ngClass]=\"{ 'show-sidebar': showMobileMenu }\" dir=\"ltr\" data-theme=\"light\"\n  data-layout=\"vertical\" [attr.data-sidebartype]=\"sidebartype\" data-sidebar-position=\"absolute\"\n  data-header-position=\"fixed\" data-boxed-layout=\"full\">\n  <header class=\"topbar\" data-navbarbg=\"skin6\">\n    <nav class=\"d-flex top-navbar navbar-expand-md navbar-light\">\n      <div class=\"navbar-header\" [ngClass]=\"expandLogo ? 'expand-logo' : ''\" data-logobg=\"skin6\">\n        <a (click)=\"showMobileMenu = !showMobileMenu\"\n          class=\"nav-link sidebartoggler waves-effect waves-light d-block d-md-none\" href=\"javascript:void(0)\">\n          <i class=\"mdi mdi-menu font-24 text-dark\" [ngClass]=\"showMobileMenu ? 'ti-close' : 'ti-menu'\"></i>\n        </a>\n        <a class=\"navbar-brand\" href=\"/\">\n          <b class=\"logo-icon d-block d-md-none d-lg-block\">\n            <img src=\"assets/asasa/asasa_logo.png\" alt=\"homepage\" class=\"dark-logo\"\n              style=\"width: 150px; height: 40px;\" />\n          </b>\n          <span class=\"logo-text d-none d-md-block d-lg-none\">\n            <img src=\"assets/asasa/asasa.gif\" class=\"dark-logo\" alt=\"homepage\"\n              style=\"width: 40px; height: 40px;\" />\n          </span>\n        </a>\n        <a class=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"javascript:void(0)\"\n          data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <i class=\"ti-more\"></i>\n        </a>\n      </div>\n      <div class=\"navbar-collapse collapse\" id=\"navbarSupportedContent\" data-navbarbg=\"skin6\">\n        <app-navigation (toggleSidebar)=\"toggleSidebarType()\" class=\"w-100\"></app-navigation>\n      </div>\n    </nav>\n  </header>\n  <aside class=\"left-sidebar\" data-sidebarbg=\"skin1\" (mouseover)=\"Logo()\" (mouseout)=\"Logo()\">\n    <div class=\"scroll-sidebar\" [perfectScrollbar]=\"config\">\n      <app-sidebar></app-sidebar>\n    </div>\n  </aside>\n  <div class=\"page-wrapper\">\n    <div class=\"container-fluid\">\n      <div class=\"row mt-5\">\n        <div class=\"col-md-8 col-lg-10 col-xl-6\">\n          <div class=\"content\">\n            <div class=\"card\">\n                <div class=\"firstinfo\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" />\n                    <div class=\"profileinfo\">\n                        <h1>John Doe</h1>\n                        <h3>Swift developer</h3>\n                        <p class=\"bio\">Lived all my life on the top of mount Fuji, learning the way to be a Ninja Dev.</p>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mt-5\">\n        <div class=\"col-md-8 col-lg-10 col-xl-6 offset-md-4 offset-lg-2 col offset-xl-6\">\n          <div class=\"content\">\n            <div class=\"card\">\n                <div class=\"firstinfo\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" />\n                    <div class=\"profileinfo\">\n                        <h1>John Doe</h1>\n                        <h3>Swift developer</h3>\n                        <p class=\"bio\">Lived all my life on the top of mount Fuji, learning the way to be a Ninja Dev.</p>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<div>\n    <app-header></app-header>\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <app-dashboard></app-dashboard>\n        </div>\n\n        <div class=\"col-md-10\">\n            <div class=\"main main-raised\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"content\">\n                            <div class=\"card\">\n                                <div class=\"firstinfo\">\n                                    <img *ngIf=\"!selectedFile\" src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" />\n                                    <img *ngIf=\"selectedFile\" [src]=\"selectedFile.src\" />\n                                    <div class=\"profileinfo\">\n                                        <h1>{{tokendata?.fullname}}</h1>\n                                        <span class=\" badge badge-warning\">{{tokendata?.access}}</span>\n\n                                        <p class=\"bio\">Lived all my life on the top of mount Fuji, learning the way to be a Ninja Dev.</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-8 col-lg-6\">\n                        <div class=\"profile\">\n\n                            <div class=\"upload-btn-wrapper  text-center input-container\" style=\"float: left;\">\n                                <button (click)=\"file.click()\" class=\"btn text-center mr-2\" style=\"width: 100px;\">\n                    <i class=\"fa fa-camera\" aria-hidden=\"true\">&nbsp;</i>\n                    <span class=\"upload\"><b>Upload</b></span>\n                  </button>\n                                <input #file type='file' class=\"fileField\" (change)=\"onSelectFile($event)\"><br><br>\n                            </div>\n                            <div class=\"upload-btn-wrapper  text-center\" style=\" float: left; margin-top: 15px;\">\n                                <button (click)=\"updateImage()\" class=\"btn text-center mr-2\" style=\"width: 100px;\">\n                    <i class=\"fa fa-save\">&nbsp;</i>\n                    <span class=\"upload\"><b>Save</b></span>\n                  </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-10\">\n                        <div class=\"content\">\n                            <div class=\"card1\">\n                                <div class=\"firstinfo\">\n                                    <div class=\"profileinfo mt-4\">\n                                        <h2 class=\"bio d-flex justify-content-center align-item-center text-dark\"><b>Email #:</b> &nbsp;&nbsp;&nbsp;&nbsp;{{tokendata?.email}}</h2>\n                                        <h2 class=\"bio d-flex justify-content-center align-item-center text-dark\"><b>Contact #:</b> &nbsp;&nbsp;&nbsp;+92{{tokendata?.contact}}</h2>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\n\nclass ImageSnippet {\n  constructor(public src: string, public file: File) {}\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n\n  email: string;\n  tokendata: any;\n  url: string | ArrayBuffer;\n  selectedFile: ImageSnippet;\n\n  constructor(public router: Router, private route: ActivatedRoute, public authService: AuthenticationService) { }\n  username = this.router.url;\n\n  ngOnInit(){\n    this.tokenization();\n  }\n\n  async tokenization()\n  {\n    const token = await this.authService.getToken();\n    const decodedToken = await this.authService.getDecodedToken(token);\n    this.tokendata = decodedToken.data;\n    // console.log(this.tokendata);\n  }\n\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n      const file: File = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (event: any) => {\n        this.selectedFile = new ImageSnippet(event.target.result, file);\n      });\n      reader.readAsDataURL(file);\n    }\n  }\n\n  // Function to Update Profile Image\n  updateImage() {\n    console.log('Save Image', this.selectedFile);\n    console.log(this.tokendata._id);\n    this.authService.updateUser(this.tokendata._id, this.selectedFile.file).subscribe((res) => {\n      console.log('Subscribed data: ', res);\n    });\n\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter04'\n})\nexport class TableFilter04Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],,\n    user: any,\n    search_type: string\n  ): User[] {\n\n    if (!user || !search_type) {\n      return user;\n    }\n    return user.filter(user =>\n      user.contact.toLowerCase().indexOf(search_type.toLowerCase()) !== -1);\n\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoiYmFiYXJic2NzMzI2MSIsImEiOiJja2N2dHR2MGUwN21iMnhydXlvcXA2MTlmIn0.gympgF_-zALE5J5MyZH3fQ'\n  },\n  url: 'https://shaisecommercestore.herokuapp.com/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter02'\n})\nexport class TableFilter02Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],\n    user: any,\n    search_location: string\n  ): User[] {\n\n    if (!user || !search_location) {\n      return user;\n    }\n    return user.filter(user =>\n      user.location.toLowerCase().indexOf(search_location.toLowerCase()) !== -1);\n\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter06'\n})\nexport class TableFilter06Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],,\n    user: any,\n    search_client: string\n  ): User[] {\n\n    if (!user || !search_client) {\n      return user;\n    }\n    return user.filter(user =>\n      user.fullname.toLowerCase().indexOf(search_client.toLowerCase()) !== -1);\n\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from './../../login/user';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n  general_search: string;\n  data: any;\n  deleteId: any;\n\n  constructor(\n    // private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {}\n  user: any;\n  ngOnInit(): void {\n    this.getUserList();\n  }\n  setUser(user: any) {\n    this.authService.setUser(user);\n    this.router.navigateByUrl('/register');\n  }\n  \n  // Function to call User data table\n  getUserList() {\n    this.authService.getUsers().subscribe(\n      (data) => {\n        this.data = data;\n        console.log('User Get Response', this.data);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  confirmID(id: any) {\n    console.log(id);\n    this.deleteId = id;\n  }\n\n    // Function to delete the single inventory\n    deleteLead(){\n      console.log(this.deleteId);\n  \n      this.authService.deleteUser(this.deleteId).subscribe(data => {\n        console.log(data);\n        if (data.code === 200) {\n          this.toastr.success(data.message, 'Success', {\n              timeOut: 5000\n            });\n            this.getUserList();\n        //   for ( let i = 0; i < this.user.length; i++){\n        //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\n        }\n  \n      });\n    }\n\n  // deleteUser(id) {\n  //   console.log('Calling deleteInventory', id);\n\n  //   this.authService.deleteUser(id).subscribe((data) => {\n  //     console.log(data);\n  //     if (data.code === 200) {\n  //       this.toastr.success(data.message, 'Success', {\n  //         timeOut: 5000,\n  //       });\n  //       for (let i = 0; i < this.data.length; i++) {\n  //         if (this.data[i]._id === id) {\n  //           this.data.splice(i, 1);\n  //           i--;\n  //         }\n  //       }\n  //     } else {\n  //       this.toastr.error(data.message, 'Error', {\n  //         timeOut: 5000,\n  //       });\n  //     }\n  //   });\n  // }\n  // isLogin() {\n\n  //   const token = this.authService.getToken();\n  //   return token;\n  // }\n  // tslint:disable-next-line: typedef\n  // logout() {\n  //   localStorage.removeItem('token');\n  //   console.log('\\nlogout\\n');\n  //   this.router.navigateByUrl('/');\n  // }\n}\n","<div class=\"\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <app-header></app-header>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-2\">\n            <!-- <app-header></app-header> -->\n            <app-dashboard></app-dashboard>\n        </div>\n        <div class=\"col-10\">\n            <div class=\"user-class\">\n                <br>\n                <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Users</b></h1>\n                <br>\n\n                <div class=\"row\">\n                    <div class=\"col-2\">\n                        <button class=\"btn btn-primary rounded-pill\" routerLink=\"/register\">Add New</button>\n                    </div>\n                    <div class=\"col-4\">\n                        <div class=\"card-body \">\n\n                            <input class=\"form-control\" type=\"search\" [(ngModel)]=\"general_search\" placeholder=\"Search topics or keywords\">\n\n                        </div>\n                    </div>\n                </div>\n                <br><br><br>\n                <!-- Inventory management table is below -->\n                <table class=\"table table-hover\" class=\"table table-hover table-light\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">User ID</th>\n                            <th scope=\"col\">Full Name</th>\n                            <th scope=\"col\">Contact #</th>\n                            <th scope=\"col\">Location Assigned</th>\n                            <th scope=\"col\">Email Address</th>\n                            <th scope=\"col\">Access</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Operations</th>\n\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <!-- <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.userId\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.fullname\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.contact\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.location\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td> -->\n\n                        <tr *ngFor=\"let user of data | filter: general_search\">\n                            <!-- | tableFilter06: data.fullname | tableFilter04: data.contact | tableFilter02: data.location | tableFilter: data.userId | filter: general_search\"> -->\n                            <td>{{ user?._id }}</td>\n                            <td>\n                                <span *ngIf=\"user.fullname\">{{ user.fullname | titlecase }}</span>\n                                <span *ngIf=\"!user.fullname\">{{ user.name | titlecase }}</span>\n                            </td>\n                            <td>0{{ user.contact }}</td>\n                            <!-- <td>{{ user.location}}</td> -->\n\n                            <td>\n                                {{user.city?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},  </span>\n                            </td>\n                            <td>{{ user.email }}</td>\n                            <td>{{user?.access}}</td>\n                            <td>{{user?.created | date: \"dd/MM/yyyy\"}}</td>\n\n                            <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i><a (click)=\"setUser(user)\" role=\"button\">Edit</a>\n\n                                <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\n\n                            </td>\n                            <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\" role=\"document\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            Are you sure you want to delete it?\n                                        </div>\n                                        <div class=\"modal-footer\">\n                                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n          Close\n        </button>\n                                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLead()\">\n          Delete\n        </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </tr>\n                    </tbody>\n                </table>\n                <!-- end of table -->\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-leads',\n  templateUrl: './leads.component.html',\n  styleUrls: ['./leads.component.css']\n})\nexport class LeadsComponent implements OnInit {\n  user: any;\n  savedId: any;\n\n  withAutofocus = `<button type=\"button\" ngbAutofocus class=\"btn btn-danger\"\n      (click)=\"modal.close('Ok click')\">Ok</button>`;\n  deleteId: any;\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    private toastr: ToastrService\n    ) { }\n  search_id: string;\n  search_client: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n  search_area: string;\n\n  ngOnInit(): void {\n    this.getLeadsList();\n  }\n  \n  setUser(user: any){\n    this.authService.setUser(user);\n    this.authService.setFormTitle('Lead');\n    this.router.navigateByUrl('/add-inventories');\n    }\n    \n    setFormTitle(name){\n      this.authService.setFormTitle(name);\n      this.router.navigate(['/add-inventories']);\n    }\n    \n  getLeadsList() {\n    this.authService.getLeads().subscribe(\n      (data) => {\n        this.user = data.leads;\n        console.log('Server response: ', this.user);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n    // Function to delete the single inventory\n  deleteLead(){\n    console.log(this.deleteId);\n\n    this.authService.deleteInventory(this.deleteId).subscribe(data => {\n      console.log(data);\n      if (data.code === 200) {\n        this.toastr.success(data.message, 'Success', {\n            timeOut: 5000\n          });\n          this.getLeadsList();\n      //   for ( let i = 0; i < this.user.length; i++){\n      //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\n      }\n\n    });\n  }\n\n  confirmID(id) {\n    console.log(id);\n\n    this.deleteId = id;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-header></app-header>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-2\">\n        <!-- <app-header></app-header> -->\n        <app-dashboard></app-dashboard>\n    </div>\n    <!-- </div> -->\n    <div class=\"col-md-10 \">\n        <div class=\"leads\">\n            <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Leads Management</b></h1>\n            <br>\n            <div>\n                <button class=\"btn btn-primary rounded-pill\" (click)=\"setFormTitle('Lead')\">Add New</button>\n            </div>\n            <div class=\"pull-right\">\n                <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\n                <div class=\"card-body row\">\n                    <div class=\"col-auto\">\n                        <i class=\"fa fa-search icon\"></i>\n                    </div>\n                    <!--end of col-->\n                    <div class=\"col\">\n                        <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\" placeholder=\"Search topic or keyword\">\n                    </div>\n\n                    <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\n\n                    <button onclick=\"window.print()\" class=\"btn btn-primary rounded-pill\">Print</button>\n                    <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                </div>\n            </div>\n            <br><br><br>\n            <!-- Inventory management table is below -->\n            <table class=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Client</th>\n                        <th scope=\"col\">Type</th>\n                        <th scope=\"col\">Purpose</th>\n                        <th scope=\"col\">Prop. Type</th>\n                        <th scope=\"col\">Prop. #</th>\n                        <th scope=\"col\">Area</th>\n                        <th scope=\"col\">Location</th>\n                        <th scope=\"col\">Demand</th>\n                        <!-- <th scope=\"col\">Phone #</th>\n                        <th scope=\"col\">Comment</th>\n                        <th scope=\"col\">Assigned To</th>\n                        <th scope=\"col\">Admin Status</th>\n                        <th scope=\"col\">Agent Status</th> -->\n                        <th scope=\"col\">Added On</th>\n                        <th scope=\"col\">Operations</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <!-- <tr>\n                <td>    \n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_client\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_type\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td>\n            </tr> -->\n                    <tr *ngFor=\"let user of user | filter: general_search\">\n                        <!-- | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id -->\n                        <td>{{ user._id }}</td>\n\n                        <td><b>Name : </b>{{ user.client_name }} <br> <b>Number : </b>{{ user.client_number}}</td>\n                        <!-- <td>{{ user.client_name }}</td> -->\n                        <td>{{ user.client_type }}</td>\n                        <td>{{ user.property_purpose }}</td>\n                        <td>{{ user.property_type }}</td>\n                        <td>{{ user.Prop_num }}</td>\n                        <td>{{ user.area}}</td>\n                        <!-- <td>{{ user.location.location }}</td> -->\n\n\n                        <td>\n                            {{user.city[0]?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},  </span>\n                        </td>\n\n                        <!-- <td>\n                            <span *ngFor=\"let loc of user.location\">{{ loc.location }}<br></span>\n                        </td> -->\n                        <td>{{ user.demand_price }}</td>\n                        <!-- <td>{{ user.Phone_num }}</td>\n                        <td>{{ user.Comment }}</td>\n                        <td>{{ user.assigned_to.name}}</td>\n                        <td>{{ user.Admin_status }}</td>\n                        <td>{{ user.Agent_status }}</td> -->\n                        <td>{{ user.created | date: \"dd/MM/yyyy\"}}</td>\n                        <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i><a (click)=\"setUser(user)\" role=\"button\">Edit</a>\n\n                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\n\n                        </td>\n                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        Are you sure you want to delete it?\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n          Close\n        </button>\n                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLead()\">\n          Delete\n        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-inventory\",\n  templateUrl: \"./inventory.component.html\",\n  styleUrls: [\"./inventory.component.css\"],\n})\nexport class InventoryComponent implements OnInit {\n  user: any;\n  deleteId: any;\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    private toastr: ToastrService\n  ) {}\n  search_id: string;\n  search_area: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n\n  ngOnInit(): void {\n    this.getInventoryList();\n  }\n\n  getInventoryList() {\n    this.authService.getInventory().subscribe(\n      (data) => {\n        this.user = data.inventories;\n        console.log(\"Server response: \", this.user);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n  setFormTitle(name) {\n    this.authService.setFormTitle(name);\n    this.router.navigate([\"/add-inventories\"]);\n  }\n  // agentChange(e) {\n  //   // console.log(\"e\", this.dataToFilter);\n  //   this.Name = e;\n  //   // console.log(\"Name\", this.Name);\n  //   if (e) {\n  //     this.filteredData = this.dataToFilter.filter((d) => {\n  //       return d.user_id.user_id == e._id;\n  //     });\n  //     this.data = this.filteredData;\n  //   } else if (!e) {\n  //     this.data = this.dataToFilter;\n  //   }\n  // }\n\n  //////////\n  // Function to delete the single inventory\n  // tslint:disable-next-line: typedef\n  // deleteInventory(id){\n  //   console.log('Calling deleteInventory');\n\n  //   this.authService.deleteInventory(id).subscribe(data => {\n  //     console.log(data);\n  //     if (data.code === 200) {\n  //       this.toastr.success(data.message, 'Success', {\n  //           timeOut: 5000\n  //         });\n  //       for ( let i = 0; i < this.user.length; i++){\n  //          if ( this.user[i]._id === id) { this.user.splice(i, 1); i--; }}\n  //     }\n\n  //   });\n  // }\n  confirmID(id) {\n    console.log(id);\n\n    this.deleteId = id;\n  }\n\n  // Function to delete the single inventory\n  deleteInventory() {\n    console.log(this.deleteId);\n\n    this.authService.deleteInventory(this.deleteId).subscribe((data) => {\n      console.log(data);\n      if (data.code === 200) {\n        this.toastr.success(data.message, \"Success\", {\n          timeOut: 5000,\n        });\n        this.getInventoryList();\n        //   for ( let i = 0; i < this.user.length; i++){\n        //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\n      }\n    });\n  }\n  setUser(user: any) {\n    this.authService.setUser(user);\n    this.authService.setFormTitle(\"Inventory\");\n    this.router.navigateByUrl(\"/add-inventories\");\n  }\n\n  // myFunction() {\n  //   let input, filter, table, tr, td, i, txtValue;\n  //   input = document.getElementById(\"myInput\");\n  //   filter = input.value.toUpperCase();\n  //   table = document.getElementById(\"myTable\");\n  //   tr = table.getElementsByTagName(\"tr\");\n  //   for (i = 0; i < tr.length; i++) {\n  //     td = tr[i].getElementsByTagName(\"td\")[0];\n  //     if (td) {\n  //       txtValue = td.textContent || td.innerText;\n  //       if (txtValue.toUpperCase().indexOf(filter) > -1) {\n  //         tr[i].style.display = \"\";\n  //       } else {\n  //         tr[i].style.display = \"none\";\n  //       }\n  //     }\n  //   }\n  // }\n}\n\n\n","<!-- <div class=\"\"> -->\n<div class=\"row\">\n    <div class=\"col-12\">\n        <app-header></app-header>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-2\">\n        <!-- <app-header></app-header> -->\n        <app-dashboard></app-dashboard>\n    </div>\n\n\n    <div class=\"col-9\">\n        <div class=\"inventory\"><br>\n            <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Inventory Management</b></h1>\n            <br>\n            <div>\n                <button class=\"btn btn-primary rounded-pill\" (click)=\"setFormTitle('Inventory')\">Add New</button>\n                <!-- <button class=\"btn btn-primary rounded-pill\">Filters</button> -->\n                <!-- <div class=\"dropdown\">\n                        <button class=\"dropbtn\" class=\"btn btn-primary rounded-pill\">Select Agent</button>\n                        <div class=\"dropdown-content\">\n                            <a href=\"#\">Agent 1</a>\n                            <a href=\"#\">Agent 2</a>\n                            <a href=\"#\">Agent 3</a>\n                        </div>\n                    </div> -->\n            </div>\n\n            <div class=\"pull-right\">\n                <div class=\"card-body row\">\n                    <div class=\"col-auto\">\n                        <i class=\"fa fa-search icon\"></i>\n                    </div>\n                    <!--end of col-->\n                    <div class=\"col\">\n                        <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\" placeholder=\"Search topic or keyword\">\n                    </div>\n\n                    <button onclick=\"window.print()\" class=\"btn btn-primary rounded-pill\">Print</button>\n                    <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                </div>\n            </div>\n            <br><br><br>\n            <!-- Inventory management table is below -->\n\n            <table class=\"table table-hover\">\n                <thead>\n                    <th scope=\"col\">ID</th>\n                    <th scope=\"col\">Location</th>\n                    <th scope=\"col\">Area</th>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Demand</th>\n                    <th scope=\"col\">Purpose</th>\n                    <th scope=\"col\">Beds</th>\n                    <th scope=\"col\">Client Details</th>\n                    <th scope=\"col\">Agent Assigned</th>\n                    <th scope=\"col\">Operations</th>\n                </thead>\n\n                <tbody>\n                    <!-- <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"Search ID\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_type\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td> -->\n                    <tr *ngFor=\"let user of user | filter: general_search\">\n                        <!-- | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id | filter: general_search\"> -->\n                        <td>{{ user.referenceId }}</td>\n                        <!-- <td>\n                                <span *ngFor=\"let loc of user.location\">{{ loc.location }}<br></span>\n                            </td> -->\n\n\n\n                        <td>\n                            {{user.city[0]?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},  </span>\n                        </td>\n\n                        <td>{{ user.area }}</td>\n                        <td>{{ user.client_type }}</td>\n                        <td>{{ user.demand_price }}</td>\n                        <td>{{ user.property_purpose }}</td>\n                        <td>{{ user.beds_number }}</td>\n                        <td><b>Name : </b>{{ user.client_name }} <br> <b>Number : </b>{{ user.client_number}}</td>\n                        <td>{{ user.assigned_to }}</td>\n                        <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i><a (click)=\"setUser(user)\" role=\"button\">Edit</a>\n\n                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\n\n                        </td>\n                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        Are you sure you want to delete it?\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n              Close\n            </button>\n                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteInventory()\">\n              Delete\n            </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-newpass',\n  templateUrl: './newpass.component.html',\n  styleUrls: ['./newpass.component.css']\n})\nexport class NewpassComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  newpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n    });\n    this.initialize();\n  }\n  // tslint:disable-next-line: typedef\n  initialize() {\n    this.newpassForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  // tslint:disable-next-line: typedef\n  get f() { return this.newpassForm.controls; }\n\n  // tslint:disable-next-line: typedef\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.newpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      newpassword: this.newpassForm.value.password\n    };\n\n    this.authServ.newpassword(user).subscribe(data => {\n      console.log('server response: ');\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      if (status) {\n        alert(msg);\n        this.router.navigate(['/']);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Password change\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"newpassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\" id=\"password\" type=\"password\" placeholder=\"Enter new password\" formControlName=\"password\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" id=\"inputPass\" type=\"password\" placeholder=\"Confirm new password\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\">Change</button>\n                </div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/\">Login</button>\n\n                <!-- </div> -->\n            </form>\n        </div>\n\n    </div>\n</div>","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<head>\n\n\n    <meta name=\"description\" content=\"Responsive sidebar template with sliding effect and dropdown menu based on bootstrap 3\">\n    <title>Sidebar template</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n    <link href=\"https://use.fontawesome.com/releases/v5.0.6/css/all.css\" rel=\"stylesheet\">\n\n\n</head>\n<!-- <div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-header></app-header>\n    </div>\n</div> -->\n\n<!-- <nav class=\"navbar justify-content-between\">\n\n    <a class=\"navbar-brand\"> My Asasa</a>\n    <form class=\"form-inline\" style=\"    margin-right: 56px;\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n\n        <ul>\n            <li>\n\n                <a class=\"nav-link\" *ngIf=\"isLogin()\" (click)=\"logout()\">Logout</a>\n            </li>\n            <li>\n                <a routerLink=\"/inventory\">\n                    <i class=\"fas fa-file-alt\"></i>\n                    <span></span>\n                </a>\n            </li>\n            <li>\n                <a routerLink=\"/inventory\">\n                    <i class=\"fas fa-users\"></i>\n                    <span></span>\n                </a>\n            </li>\n        </ul>\n    </form>\n\n</nav> -->\n\n\n\n<div class=\"page-wrapper chiller-theme toggled\">\n    <a id=\"show-sidebar\" class=\"btn btn-sm btn-dark\" href=\"#\">\n        <i class=\"fas fa-bars\"></i>\n    </a>\n    <nav id=\"sidebar\" class=\"sidebar-wrapper\" style=\"padding-top: 100px;\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-brand\">\n                <a routerLink=\"/\">AGENT DASHBOARD</a>\n            </div>\n            <div class=\"sidebar-header\">\n                <div class=\"user-pic\">\n                    <img class=\"img-responsive img-rounded\" src=\"https://bootdey.com/img/Content/avatar/avatar6.png\">\n                </div>\n                <div class=\"user-info\">\n                    <span class=\"user-name\">{{tokendata?.fullname}}\n          </span>\n                    <span class=\"user-role\">{{tokendata?.access}}</span>\n                    <span class=\"user-status\">\n            <i class=\"fa fa-circle\"></i>\n            <span>Online</span>\n                    </span>\n                </div>\n            </div>\n            <div class=\"sidebar-search\">\n                <div>\n                    <div class=\"input-group\">\n                        <input type=\"text\" class=\"form-control search-menu\" placeholder=\"Search...\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\">\n                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"sidebar-menu\">\n                <ul>\n                    <li class=\"header-menu\">\n                        <span>Dashboard</span>\n                    </li>\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/profile\">\n                            <i class=\"fa fa-user\"></i>\n                            <span>User Profile</span>\n                        </a>\n\n                    </li>\n\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/users\">\n                            <i class=\"fa fa-users\"></i>\n                            <span> Agent</span>\n                        </a>\n\n                    </li>\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/inventory\">\n                            <i class=\"fas fa-file-alt\"></i>\n                            <span>Inventory</span>\n                        </a>\n\n                    </li>\n                    <li>\n                        <a routerLink=\"/leads\">\n                            <i class=\"fas fa-phone-volume\"></i>\n                            <span>Lead</span>\n                        </a>\n\n                    </li>\n\n                    <li>\n                        <a routerLink=\"/both\">\n                            <i class=\"fas fa-phone-volume\"></i>\n                            <span>Both</span>\n                        </a>\n\n                    </li>\n\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/register\">\n                            <i class=\"fa fa-tachometer-alt\"></i>\n                            <span>Register</span>\n                        </a>\n\n                    </li>\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/map\">\n                            <i class=\"fas fa-map\"></i>\n                            <span>Maps</span>\n                            <span class=\"badge badge-pill badge-info\">New</span>\n                        </a>\n\n                    </li>\n\n                    <!-- <li class=\"sidebar\">\n                        <a routerLink=\"/both\">\n                            <i class=\"fas fa-phone-volume\"></i>\n                            <span>Both</span>\n                        </a>\n                    </li> -->\n                </ul>\n            </div>\n            <div class=\"sidebar-footer\">\n                <a routerLink=\"/\" *ngIf=\"isLogin()\" (click)=\"logout()\">\n                    <i class=\"fa fa-lock\"></i>\n                    <span class=\"badge badge-pill badge-warning notification\">Log out</span>\n                </a>\n                <a routerLink=\"/profile\">\n                    <i class=\"fa fa-bell\"></i>\n                    <span class=\"badge badge-pill badge-success notification\">3</span>\n                </a>\n                <a href=\"#\">\n                    <i class=\"fa fa-cog\"></i>\n                    <span class=\"badge-sonar\"></span>\n                </a>\n            </div>\n        </div>\n    </nav>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  tokendata: any;\n\n  constructor(\n    public authService: AuthenticationService,\n    public router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.tokenization();\n  }\n    // tslint:disable-next-line: typedef\n  async tokenization()\n  {\n    const token = await this.authService.getToken();\n    const decodedToken = await this.authService.getDecodedToken(token);\n    this.tokendata = decodedToken.data;\n    // console.log(this.tokendata);\n  }\n\n  // tslint:disable-next-line: typedef\n  isLogin() {\n\n    const token = this.authService.getToken();\n    // console.log(token);\n    return token;\n  }\n  // tslint:disable-next-line: typedef\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.success('Logged Out', 'Success', {\n      timeOut: 5000\n    });\n    console.log('\\nlogout\\n');\n    this.router.navigateByUrl('/');\n  }\n\n}\n","// import { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from './services/Authentication/authentication.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isShown = false;\n  title = 'MyAsasa AGENT DASHBOARD Real Estate';\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router) {\n  }\n\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnInit(): void {\n\n    this.initialize();\n    // this.router.navigate(['profile']);\n\n  }\n  // tslint:disable-next-line: typedef\n  isLogin() {\n\n    const token = this.authService.getToken();\n    // console.log(token);\n    return token;\n    // if (token) {\n    //   return true;\n    // }\n    // else {\n    //   return false;\n    // }\n  }\n  // tslint:disable-next-line: typedef\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('/');\n  }\n\n  // tslint:disable-next-line: typedef\n  initialize() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n  }\n  // tslint:disable-next-line: typedef\n  get email() {\n    return this.loginForm.get('email');\n  }\n  // tslint:disable-next-line: typedef\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // console.log('user login data: ',this.loginForm.value);\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log(data);\n      const status = data.status;\n      const msg: string = data.msg;\n      console.log('Status: ' + status);\n      console.log('Message: ' + msg);\n      if (status) {\n\n      } else {\n        alert('Invalid email or password!');\n      }\n    });\n  }\n  // getting input labels values from user end (login.html)\n  // tslint:disable-next-line: typedef\n  get f() { return this.loginForm.controls; }\n}\n","<!-- NG-ZORRO -->\n<!-- <a href=\"https://github.com/NG-ZORRO/ng-zorro-antd\" target=\"_blank\" style=\"display: flex;align-items: center;justify-content: center;height: 100%;width: 100%;\">\n  <img height=\"300\" src=\"https://img.alicdn.com/tfs/TB1X.qJJgHqK1RjSZFgXXa7JXXa-89-131.svg\">\n</a> -->\n<!-- <nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n    <div class=\"container-fluid px-0\">\n        <div class=\"row w-100\">\n            <div class=\"col-5\">\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isShown = !isShown\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n                <ul class=\"navbar-nav \">\n                    <li class=\"nav-item\">\n                        <h3 class=\"head\"> Asasa Real Estate</h3>\n                    </li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <li class=\"nav-item more-items\">\n                        <a class=\"nav-link\" routerLink=\"/users\" (click)=\"isShown = false\">Users</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/leads\" (click)=\"isShown = false\">Leads</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/inventory\" (click)=\"isShown = false\">Inventory</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/inactive\" (click)=\"isShown = false\">Inactive Leads</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/options\" (click)=\"isShown = false\">Options</a>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"col-md-3\">\n            </div>\n            <div class=\"col-4\">\n                <div class=\"collapse justify-content-end navbar-collapse\" [ngClass]=\"{ 'show': isShown }\" id=\"navbarTogglerDemo03\">\n                    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n                        <li class=\"nav-item\">\n\n                            <a class=\"nav-link\" *ngIf=\"isLogin()\" (click)=\"logout()\">Logout</a>\n                            <a class=\"nav-link\" *ngIf=\"!isLogin()\" routerLink=\"/login-component\">Login</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" routerLink=\"/map\">Maps</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" data-toggle=\"modal\" data-target=\"#exampleModal\">Login Modal</a>\n                        </li>\n                        <li class=\"nav-item dropdown\">\n\n                            <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fa fa-users\"></i>\n                            </a>\n                            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\n                                <a class=\"dropdown-item\" routerLink=\"/profile\">Profile</a>\n                                <a class=\"dropdown-item\" routerLink=\"\">Settings</a>\n                                <div class=\"dropdown-divider\"></div>\n                                <a class=\"dropdown-item\" routerLink=\"\">Advanced Settings</a>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</nav> -->\n\n<!-- Modal -->\n<!-- <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n\n                <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                <div class=\"row\">\n                    <div class=\"col-sm-6 col-md-6 left\">\n                        <div>\n                            <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n                        </div>\n                    </div>\n\n                    <div class=\"col-1 v2\">\n                        <div class=\"vl\"></div>\n                        Log - in\n                        <div class=\"vl\"></div>\n                    </div>\n\n                    <div class=\"col-sm-5 col-md-5 right\">\n                        <h2>Welcome to my asasa</h2>\n                        <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n\n                            <div class=\"form-group\" class='input-container'>\n                                <div class=\"input-group\">\n                                    <i class=\"fa fa-user icon\"></i>\n                                    <input class=\"form-control\" class=\"input-field\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                        <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"input-group\">\n                                    <i class=\"fa fa-lock icon\"></i>\n                                    <input id=\"password\" type=\"password\" formControlName=\"password\" placeholder=\"Password\" required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <br>\n                                <button type=\"submit\" class='btn' class=\"btn btn-primary rounded-pill\">Login</button>\n                            </div>\n                            <div class=\"custom-control custom-checkbox mb-3\">\n                                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                                <a routerLink=\"forgetpass-component\"> <b>Forget Password</b></a>\n                                <br> Not Registered?\n                                <a routerLink=\"register-component\"> <b>Sign up!</b></a>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n<router-outlet></router-outlet>","import { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../Authentication/authentication.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoginGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthenticationService) {}\n\n  async canActivate() {\n    const token = await this.authService.getToken();\n    if (!token) {\n      this.router.navigateByUrl('/');\n    } else {\n      return true;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.css']\n})\nexport class OptionsComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  addoptionForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService) { }\n  formDeclare() {\n    this.addoptionForm = this.formBuilder.group({\n      add_newcity: ['', Validators.required],\n      added_cities: ['', Validators.required],\n      add_newloc: ['', Validators.required],\n      added_loc: ['', Validators.required],\n      enter_newloc: ['', Validators.required],\n      add_newtype: ['', Validators.required],\n      added_type: ['', Validators.required],\n      add_newstatus: ['', Validators.required],\n      added_status: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.addoptionForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n  }\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.addoptionForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      console.log('Erroneous')\n      return;\n    }\n    this.addoptionForm.reset();\n    this.toastr.success('Lead Added', 'Success', {\n      timeOut: 9000\n    });\n  }\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"addoptionForm\">\n                <h2 class=\"register-heading\">Cities</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newcity\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Cities\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_cities\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add City</button>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Locations -->\n\n                <h2 class=\"register-heading\">Locations</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <h3>Add New Location</h3>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\"><br>\n                                Select City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newloc\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <h3>Added Locations</h3>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\"><br>\n                                Select City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_loc\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Enter New Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"enter_newloc\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Right side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Select Location\n                                <input type=\"text\" class=\"form-control\" list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Left side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Select Added Locations\n                                <input type=\"text\" class=\"form-control\" list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Location</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Property Types -->\n\n                <h2 class=\"register-heading\">Property Types</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New Type\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newtype\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Types\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_type\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                        <br><br>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Property Type</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Status Types -->\n\n                <h2 class=\"register-heading\">Status Types</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New Status\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newstatus\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Status\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_status\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-12 col-sm-12\"><br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Status Type</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { MatButtonModule } from '@angular/material/button';\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n// import { ButtonsModule } from 'ngx-bootstrap/buttons';\n// import {MaterialModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n// import { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\n// import { NgZorroAntdModule, NZ_I18N } from 'ng-zorro-antd';\n// import { en_US } from 'ng-zorro-antd';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './dashboard/profile/profile.component';\nimport { InventoryComponent } from './dashboard/inventory/inventory.component';\nimport { UsersComponent } from './dashboard/users/users.component';\nimport { LeadsComponent } from './dashboard/leads/leads.component';\nimport { TableFilterPipe } from './Pipes/Non-Utilized_Pipes/table-filter.pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { TableFilter02Pipe } from './Pipes/Non-Utilized_Pipes/table-filter02.pipe';\nimport { TableFilter03Pipe } from './Pipes/Non-Utilized_Pipes/table-filter03.pipe';\nimport { TableFilter04Pipe } from './Pipes/Non-Utilized_Pipes/table-filter04.pipe';\nimport { TableFilter05Pipe } from './Pipes/Non-Utilized_Pipes/table-filter05.pipe';\nimport { TableFilter06Pipe } from './Pipes/Non-Utilized_Pipes/table-filter06.pipe';\nimport { InactiveComponent } from './dashboard/inactive/inactive.component';\nimport { OptionsComponent } from './dashboard/options/options.component';\nimport { AddUsersComponent } from './dashboard/users/add-users/add-users.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AddLeadsComponent } from './dashboard/leads/add-leads/add-leads.component';\nimport { AddInventoriesComponent } from './dashboard/inventory/add-inventories/add-inventories.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HeaderComponent } from './dashboard/header/header.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SidebarComponent } from './sidebar/sidebar.component';\n\n// import { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n// import { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\n// import { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { NavigationComponent } from './header-navigation/navigation.component';\nimport { BothComponent } from './dashboard/both/both.component';\n\n// const DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n//   suppressScrollX: true,\n//   wheelSpeed: 1,\n//   wheelPropagation: true,\n//   minScrollbarLength: 20\n// };   \n\n\n\n// import { HighlightDirective } from './directives/highlight.directive';\n// import { FilterPipe } from './pipes/filter.pipe';\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    LoginComponent,\n    SignupComponent,\n    ForgetpassComponent,\n    ForgetpassverifyComponent,\n    NewpassComponent,\n    SignupotpComponent,\n    DashboardComponent,\n    ProfileComponent,\n    InventoryComponent,\n    UsersComponent,\n    LeadsComponent,\n    // FilterPipe,\n    // HighlightDirective\n    TableFilterPipe,\n    TableFilter02Pipe,\n    TableFilter03Pipe,\n    TableFilter04Pipe,\n    TableFilter05Pipe,\n    TableFilter06Pipe,\n    InactiveComponent,\n    OptionsComponent,\n    AddUsersComponent,\n    AddLeadsComponent,\n    AddInventoriesComponent,\n    NavbarComponent,\n    HeaderComponent,\n    SidebarComponent,\n    NavigationComponent,\n    BothComponent\n  ],\n  imports: [\n    HttpClientModule,\n    // MDBBootstrapModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(), // ToastrModule added\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    FormsModule,\n    NgbModule,\n    // PerfectScrollbarModule,\n    Ng2SearchPipeModule,\n    NgSelectModule,\n    NgbModule\n    // MaterialModule\n  ],\n  providers: [\n    // {\n    //   provide: PERFECT_SCROLLBAR_CONFIG,\n    //   useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n    // }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms';\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-leads',\n  templateUrl: './add-leads.component.html',\n  styleUrls: ['./add-leads.component.css']\n})\nexport class AddLeadsComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  addleadForm: FormGroup;\n  cities: any;\n  locations: any;\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthenticationService,\n              private router: Router,\n              private toastr: ToastrService) { }\n  formDeclare() {\n    this.addleadForm = this.formBuilder.group({\n      location: ['', Validators.required],\n      client: ['', Validators.required],\n      id: ['', Validators.required],\n      agent_status: ['', Validators.required],\n      admin_status: ['', Validators.required],\n      phone_no: ['', Validators.required],\n      added_on: ['', Validators.required],\n      area: ['', Validators.required],\n      type: ['', Validators.required],\n      purpose: ['', Validators.required],\n      prop_type: ['', Validators.required],\n      prop_no: ['', Validators.required],\n      demand: ['', Validators.required],\n      comment: ['', Validators.required],\n      assigned_to: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.addleadForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n    this.getCities();\n    this.getLocations();\n  }\n    getCities() {\n      this.authService.getCities().subscribe(\n        (data) => {\n          this.cities = data;\n          console.log('Cities: ', this.cities);\n        },\n        (err) => {\n          console.error(err);\n        }\n      );\n    }\n        getLocations() {\n          this.authService.getLocations().subscribe(\n            (data) => {\n              this.locations = data;\n              console.log('Locations: ', this.locations);\n            },\n            (err) => {\n              console.error(err);\n            }\n          );\n        }\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.addleadForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      // console.log('Erroneous')\n      return;\n    }\n    this.addleadForm.reset();\n    this.toastr.success('Lead Added', 'Success', {\n      timeOut: 9000\n    });\n  }\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"addleadForm\">\n                <h2 class=\"register-heading\">Add Lead</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                ID\n                                <input type=\"number\" class=\"form-control\" formControlName=\"id\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.id.errors }\" />\n                                <div *ngIf=\"submitted && f.id.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.id.errors.required\">Id is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Client\n                                <input type=\"text\" class=\"form-control\" formControlName=\"client\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.client.errors }\" />\n                                <div *ngIf=\"submitted && f.client.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.client.errors.required\">Client is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Type\n                                <input formControlName=\"type\" class=\"form-control\" type=\"text\" list=\"productName2\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.type.errors }\" />\n                                <div *ngIf=\"submitted && f.type.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.type.errors.required\">Type is required</div>\n                                </div>\n                                <datalist id=\"productName2\">\n                                    <option value=\"Buyer\">Buyer</option>\n                                    <option value=\"Seller\">Seller</option>\n                                    <option value=\"Else\">Else</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Purpose\n                                <input formControlName=\"purpose\" class=\"form-control\" type=\"text\" list=\"productName3\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.purpose.errors }\" />\n                                <div *ngIf=\"submitted && f.purpose.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.purpose.errors.required\">Purpose is required</div>\n                                </div>\n                                <datalist id=\"productName3\">\n                                    <option value=\"Buy\">Buy</option>\n                                    <option value=\"Sale\">Sale</option>\n                                    <option value=\"Rent\">Rent</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Property Type\n                                <input formControlName=\"prop_type\" class=\"form-control\" type=\"text\" list=\"productName4\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.prop_type.errors }\" />\n                                <div *ngIf=\"submitted && f.prop_type.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.prop_type.errors.required\">Property Type is required</div>\n                                </div>\n                                <datalist id=\"productName4\">\n                                    <option value=\"Apartment\">Apartment</option>\n                                    <option value=\"House\">House</option>\n                                    <option value=\"Residential Plot\">Residential Plot</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Property Number\n                                <input type=\"number\" class=\"form-control\" formControlName=\"prop_no\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.prop_no.errors }\" />\n                                <div *ngIf=\"submitted && f.prop_no.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.prop_no.errors.required\">Property Number is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Area\n                                <input type=\"text\" class=\"form-control\" formControlName=\"area\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.area.errors }\" />\n                                <div *ngIf=\"submitted && f.area.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.area.errors.required\">Area is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"location\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Demand\n                                <input type=\"number\" class=\"form-control\" formControlName=\"demand\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.demand.errors }\" />\n                                <div *ngIf=\"submitted && f.demand.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.demand.errors.required\">Demand is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Phone number\n                                <input type=\"number\" class=\"form-control\" formControlName=\"phone_no\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.phone_no.errors }\" />\n                                <div *ngIf=\"submitted && f.phone_no.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.phone_no.errors.required\">Phone number is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Comment\n                                <input type=\"text\" class=\"form-control\" formControlName=\"comment\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.comment.errors }\" />\n                                <div *ngIf=\"submitted && f.comment.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.comment.errors.required\">Comment is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Assigned To\n                                <input type=\"text\" class=\"form-control\" formControlName=\"assigned_to\" required\n                                    autocomplete=\"off\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.assigned_to.errors }\" />\n                                <div *ngIf=\"submitted && f.assigned_to.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.assigned_to.errors.required\">Assigned To is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Admin Status\n                                <input formControlName=\"admin_status\" class=\"form-control\" type=\"text\"\n                                    list=\"productName\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.admin_status.errors }\" />\n                                <div *ngIf=\"submitted && f.admin_status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.admin_status.errors.required\">Admin status is required</div>\n                                </div>\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Agent Status\n                                <input formControlName=\"agent_status\" class=\"form-control\" type=\"text\"\n                                    list=\"productName1\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.agent_status.errors }\" />\n                                <div *ngIf=\"submitted && f.agent_status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.agent_status.errors.required\">Agent Status is required</div>\n                                </div>\n                                <datalist id=\"productName1\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Added On\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_on\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.added_on.errors }\" />\n                                <div *ngIf=\"submitted && f.added_on.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.added_on.errors.required\">Added On is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button (click)=\"submitForm()\" class=\"btn btn-primary\">Add</button>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as mapboxgl from 'mapbox-gl';\nimport { MapserviceService } from \"../services/Map/mapservice.service\";\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  opacity = 1;\n  map: mapboxgl.Map;\n  style = 'mapbox://styles/mapbox/streets-v11';\n  lat = 33.628463;\n  lng = 73.087581;\n geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Foo',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 62.324462890625, lng: 33.024695711685304 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Bar',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 73.2158203125, lng: 33.97189158092897 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Baz',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 51.29223632812498, lng: 34.28151823530889 },\n        },\n      },\n    ],\n  };\n\n  mapArray = [\n    {\n      lat: 72.99641,\n      lng: 33.645992,\n      tag: 'Islamabad',\n      size: [51, 22],\n    },\n    {\n      lat: 73.0169,\n      lng: 33.5651,\n      tag: 'Rawalpindi',\n      size: [51, 22],\n    },\n    {\n      lat: 71.5249,\n      lng: 34.0151,\n      tag: 'Peshawar',\n      size: [51, 22],\n    },\n    {\n      lat: 67.0011,\n      lng: 24.8607,\n      tag: 'Karachi',\n      size: [51, 22],\n    },\n  ];\n  constructor(private mapservice: MapserviceService) { }\n\n  ngOnInit() {\n    this.initializemapbox();\n\n    ///////////////// This is the data coming from url into our frontend map //////////////////////\n    \n    // this.mapservice.readData()\n    // .subscribe\n    // (data=> {\n    //     data.property.forEach(( data ) => {\n    //       // create a DOM element for the marker\n    //       const el = document.createElement('div');\n    //       el.className = 'data';\n    //       el.style.backgroundImage = 'url(/assets/asasamarker.png)';\n    //       el.innerHTML = data.demand;\n    //       el.style.fontStyle = 'bold';\n    //       el.style.textAlign = 'center';\n    //       el.style.color = 'white';\n    //       el.style.width = '51px';\n    //       el.style.height = '22px';\n    //       el.style.fontSize = '10px';\n    //       el.style.fontWeight = '700';\n    //       el.style.fontFamily = 'Jersey M54';\n    //       // el.style.fontSizeAdjust = '5px';\n    //       new mapboxgl.Marker(el)\n    //         .setLngLat([\n    //           data.location_data.marker_data.mlongitude,\n    //           data.location_data.marker_data.mlatitide\n    //         ])\n    //         //.setPopup(new mapboxgl.Popup().setHTML(data.tag))\n    //         .addTo(this.map);\n    //     });\n    \n    // })\n\n  }\n  initializemapbox() {\n    this.map = new mapboxgl.Map({\n      accessToken:\n        'pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg',\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [73.024955 , 33.650753], // starting position [lng, lat]\n      zoom: 10, // starting zoom\n    });\n    this.mapArray.forEach((marker) => {\n      // create a DOM element for the marker\n      const el = document.createElement('div');\n      el.className = 'marker';\n      el.style.backgroundImage = 'url(/assets/icons/asasamarker.png)';\n      el.innerHTML = marker.tag;\n      el.style.fontStyle = 'bold';\n      el.style.textAlign = 'center';\n      el.style.color = 'white';\n      el.style.width = marker.size[0] + 'px';\n      el.style.height = marker.size[1] + 'px';\n      el.style.fontSize = '10px';\n      el.style.fontWeight = '700';\n      el.style.fontFamily = 'quartzo';\n      new mapboxgl.Marker(el)\n        .setLngLat([\n          marker.lat,\n          marker.lng,\n        ])\n        .setPopup(new mapboxgl.Popup().setHTML(marker.tag))\n        .addTo(this.map);\n    });\n    // this.map.addSource\n    this.mapboxOverlay();\n    this.map.addControl(new mapboxgl.FullscreenControl());\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true,\n      })\n    );\n  }\n\n  mapboxOverlay() {\n    const slider = document.getElementById('slider');\n    const sliderValue = document.getElementById('slider-value');\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('myImageSource', {\n        type: 'image',\n        url: 'assets/i-10-islamabad.jpg',\n        coordinates: [\n          [73.024955 , 33.650753], // cda kashmir highway\n          [73.041134, 33.659291 ], // rizvi road kashmir highway:\n          [73.051520, 33.645466], // Service Rd West I-10 Islamabad,\n          [73.035384, 33.636927], // I-10/3 I 10/3 I-10, Islamabad, Islamabad\n        ],\n      });\n      this.map.addLayer({\n        id: 'myImageSource',\n        source: 'myImageSource',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        // Adjust the layers opacity. layer here is arbitrary - this could\n        // be another layer name found in your style or a custom layer\n        // added on the fly using `addSource`.\n        // e.target;\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'myImageSource',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    \n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('f-7', {\n        type: 'image',\n        url: 'assets/f-7.png',\n        coordinates: [\n          [73.042912, 33.722351 ],\n          [73.061492 , 33.731482],\n          [73.070957, 33.719287], \n          [73.052850, 33.709633], \n        ],\n      });\n      this.map.addLayer({\n        id: 'f-7',\n        source: 'f-7',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'f-7',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('phase-2', {\n        type: 'image',\n        url: 'assets/phase 2.png',\n        coordinates: [\n          [73.114200, 33.565860], // Phase 4 Gulrez Housing Scheme\n          [73.126250, 33.565800], // Police Foundation, Rawalpindi \n          [73.125652, 33.552467], // Bahria Town Phase V Phase 5 \n          [73.112955, 33.552230] // Bahria Town Phase III Phase 3  \n        ],\n      });\n      this.map.addLayer({\n        id: 'phase-2',\n        source: 'phase-2',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'phase-2',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n    // this.map.on('load', () => {\n    //   // tslint:disable-next-line: no-unused-expression\n    //   this.map.addSource('phase-3', {\n    //     type: 'image',\n    //     url: 'assets/phase 3.png',\n    //     coordinates: [\n    //       [73.104769, 33.563229], // Phase 2 Gulrez Housing Scheme\n    //       [73.127969, 33.560081], // Phase 2 Bahria Town, Rawalpindi \n    //       [73.121127, 33.544900], // Soan River\n    //       [73.093428, 33.550266] // Golden Jubilee Residential CHS\n    //     ],\n    //   });\n    //   this.map.addLayer({\n    //     id: 'phase-3',\n    //     source: 'phase-3',\n    //     type: 'raster',\n    //     paint: {\n    //       'raster-opacity': this.opacity,\n    //     },\n    //   });\n\n    //   slider.addEventListener('input', (e) => {\n    //     const input = (document.getElementById('slider') as HTMLInputElement)\n    //       .value;\n    //     this.map.setPaintProperty(\n    //       'phase-3',\n    //       'raster-opacity',\n    //       parseInt('' + input + '', 10) / 100\n    //     );\n    //     // Value indicator\n    //     sliderValue.textContent = '' + input + '' + '%';\n    //   });\n    // });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-16', {\n        type: 'image',\n        url: 'assets/maps_images/E-16-crop.png',\n        coordinates: [\n          [ 72.877392, 33.652982],\n          [ 72.898120, 33.652946],\n          [ 72.898034, 33.637977],\n          [ 72.877349, 33.638049]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-16',\n        source: 'e-16',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-16',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-18', {\n        type: 'image',\n        url: 'assets/maps_images/E-18-crop.png',\n        coordinates: [\n          [72.834467, 33.635597],\n          [72.858070, 33.647030],\n          [72.877725, 33.620232],\n          [72.854551, 33.609438]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-18',\n        source: 'e-18',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-18',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('enclave', {\n        type: 'image',\n        url: 'assets/enclave_map-crop.png',\n        coordinates: [\n          [33.701923, 73.200201],\n          [33.703352, 73.264891],\n          [33.674785, 73.264236],\n          [33.674999, 73.196210]\n        ],\n      });\n      this.map.addLayer({\n        id: 'enclave',\n        source: 'enclave',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'enclave',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n  }\n}","<div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <app-header></app-header>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- <app-header></app-header> -->\n            <app-dashboard></app-dashboard>\n        </div>\n    </div>\n    <div id=\"map\" class=\"match-parent\">\n        <div class=\"map-overlay top\">\n            <div class=\"map-overlay-inner\">\n                <label>Layer opacity: <span id=\"slider-value\">100%</span></label>\n                <input id=\"slider\" type=\"range\" min=\"0\" max=\"100\" step=\"0\" value=\"100\" />\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inactive',\n  templateUrl: './inactive.component.html',\n  styleUrls: ['./inactive.component.css']\n})\nexport class InactiveComponent implements OnInit {\n\n  constructor() { }\n  search_id: string;\n  search_client: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n  search_area: string;\n  users: any[] = [\n    { Id: '1', Client: 'Aftab Nabi', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 4 bed apartment', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '2', Client: 'Awais', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '12', Area: '1 Kanal', Location: 'F-6/4', Demand: '450,000', Phone_num: '090078601', Comment: 'Want 4 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '3', Client: 'Usama Gull', Purpose: 'Buy', Prop_type: 'House', Prop_num: '14', Area: '2 Kanal', Location: 'G-15/2', Demand: '150,000', Phone_num: '090078601', Comment: 'Want 3 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '4', Client: 'Usman', Purpose: 'Rent', Prop_type: 'Residential Plot', Prop_num: '72', Area: '2 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 1 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '5', Client: 'Zakria', Purpose: 'Buy', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 5 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n  ];\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"inactive\">\n    <br>\n    <br>\n    <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Inactive/Deleted Leads</b></h1>\n    <br>\n    <div class=\"pull-right\">\n        <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\n        <div class=\"card-body row\">\n            <div class=\"col-auto\">\n                <i class=\"fa fa-search icon\"></i>\n            </div>\n            <!--end of col-->\n            <div class=\"col\">\n                <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\"\n                    placeholder=\"Search topic or keyword\">\n            </div>\n\n            <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\n\n            <button class=\"btn btn-primary rounded-pill\">Print</button>\n            <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n        </div>\n    </div>\n    <br><br><br>\n    <!-- Inventory management table is below -->\n    <table class=\"table table-hover\" class=\"table table-hover table-dark\">\n        <thead>\n            <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Client</th>\n                <th scope=\"col\">Purpose</th>\n                <th scope=\"col\">Prop. Type</th>\n                <th scope=\"col\">Prop. #</th>\n                <th scope=\"col\">Area</th>\n                <th scope=\"col\">Location</th>\n                <th scope=\"col\">Demand</th>\n                <th scope=\"col\">Phone #</th>\n                <th scope=\"col\">Lead Status</th>\n                <th scope=\"col\">Deleted by</th>\n                <th scope=\"col\">Added On</th>\n                <th scope=\"col\">Operations</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_client\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td>\n            </tr>\n            <tr\n                *ngFor=\"let user of users | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id | filter: general_search\">\n                <td>{{ user.Id }}</td>\n                <td>{{ user.Client }}</td>\n                <td>{{ user.Purpose }}</td>\n                <td>{{ user.Prop_type }}</td>\n                <td>{{ user.Prop_num }}</td>\n                <td>{{ user.Area}}</td>\n                <td>{{ user.Location }}</td>\n                <td>{{ user.Demand }}</td>\n                <td>{{ user.Phone_num }}</td>\n                <td>{{ user.Comment }}</td>\n                <td>{{ user.Assigned_to}}</td>\n                <td>{{ user.Added_on}}</td>\n                <td>\n                    <button class=\"btn btn-primary rounded-pill\">Delete</button>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  tokendata: any;\n\n  constructor(\n    public authService: AuthenticationService, public router: Router) { }\n\n  ngOnInit(): void {\n    this.tokenization();\n  }\n    // tslint:disable-next-line: typedef\n    async tokenization()\n    {\n      const token = await this.authService.getToken();\n      const decodedToken = await this.authService.getDecodedToken(token);\n      this.tokendata = decodedToken.data;\n    }\n\n  // tslint:disable-next-line: typedef\n  isLogin() {\n\n    const token = this.authService.getToken();\n    // console.log(token);\n    return token;\n  }\n  // tslint:disable-next-line: typedef\n  logout() {\n    localStorage.removeItem('token');\n    console.log('\\nlogout\\n');\n    this.router.navigateByUrl('/');\n  }\n\n}","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"border-bottom: 1px solid #39bba4; padding: 0 15px;\">\n    <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"assets/icons/Asasa-Logo.png\">\n        <!-- <span class=\"lead\">Asasa Real State</span> -->\n    </a>\n    <!-- <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button> -->\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n        <!-- <ul class=\"navbar-nav ml-auto mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/inventory\">Leads\n                    <i class=\"fas fa-phone-volume\"></i>\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/inventory\">Users\n                    <i class=\"fas fa-users\"></i>\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/inventory\">Inventory\n                    <i class=\"fas fa-file-alt\"></i>\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" *ngIf=\"isLogin()\" (click)=\"logout()\">Logout</a>\n            </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0 d-none d-xl-block\">\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form> -->\n    </div>\n\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbar works!</p>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as mapboxgl from 'mapbox-gl';\n// import { MapserviceService } from \"../services/mapservice.service\";\n\n@Component({\n  selector: 'app-add-inventories',\n  templateUrl: './add-inventories.component.html',\n  styleUrls: ['./add-inventories.component.css'],\n})\nexport class AddInventoriesComponent implements OnInit {\n  cities: any;\n  formSendingStatus = 'Post Ad';\n  locations: any;\n  subsLocations: any;\n  // selectedLocations: any;\n  city: any;\n  user: any;\n  user1: any;  \n  access_type = [\n    { access: 'super_admin' },\n    { access: 'agent' },\n    { access: 'city_admin' },\n  ];\n  access_type1 = [\n    { access: \"all_agents\" }\n  ];\n  greaterThanValue ;\n  lessThanValue;\n  isInvalid: boolean = false; //Contains the valid status of PRICE ranges\n  isInvalid1: boolean = false; //Contains the valid status of AREA ranges\n  greaterThanValue1; //Variable stores max area\n  lessThanValue1; //Variable stores min area\n  userList: any;\n  selectedLocations: any = [];\n  selectedCity: any;\n  selectStringLocations: any = [];\n\n  //////////////////////////////////\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  get Property_typename() {\n    return this.addinventoryForm.get('prop_typename');\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.addinventoryForm.controls;\n  }\n\n  // Requirements for Map on the template, below;\n  opacity = 1;\n  map: mapboxgl.Map;\n  style = 'mapbox://styles/mapbox/streets-v11';\n  lat = 33.628463;\n  lng = 73.087581;\n  submitted = false;\n  location_value: any;\n  city_value: any;\n  urls = [];\n  optionValue;\n  optionValue1;\n  fileToUpload: File = null;\n  addinventoryForm: FormGroup;\n  typeCheckValue: any;\n  isRent = true;\n  \n  ngOnInit(): void {\n    this.user1 = this.authService.getUser();\n    if (this.user1)\n    console.log('User1: ', this.user1);\n    \n    this.authService.removeUser();\n    // this.initializemapbox();\n    const token = this.authService.getToken();\n    this.user = this.authService.getDecodedToken(token).data;\n    const form_title = this.authService.getFormTitle();\n    this.authService.removeFormTitle();\n    this.formDeclare();\n\n    this.addinventoryForm.patchValue({ form_title });\n    this.getCities();\n    // console.log(this.user1);\n    if (this.user1) {\n      this.updatefields();\n    }\n    this.getUserList();\n  }\n  // Function to call User data table\n  getUserList() {\n    this.authService.getUsers().subscribe(\n      (data) => {\n        this.userList = data;\n        console.log('User Get Response', this.userList);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n\n  //Function that is working on price filter/check\n  public onChangePrice(event: any): void {\n    // console.log('\\nonchange price\\n');\n    \n    this.isInvalid = this.greaterThanValue > this.lessThanValue;\n  }\n  //Function that is working on AREA filter/check\n  public onChangeArea(event: any): void {\n    // console.log('\\nonchange area\\n');\n    this.isInvalid1 = this.greaterThanValue1 > this.lessThanValue1;\n  }\n\n  // Function to patch the value from ng select\n  changeAccess(access){\n    // console.log(access.access);\n    this.addinventoryForm.patchValue({assigned_to: access.access});\n    // console.log(this.addinventoryForm.value);\n  }\n  // Function to patch the value from ng select\n  changeAccess2(access){\n    // console.log(access.fullname);\n    this.addinventoryForm.patchValue({assigned_to: access.fullname});\n    // console.log(this.addinventoryForm.value);\n  }\n  // Function to patch the value from form radio button \n  assigned_To(name){\n    // console.log(name);\n    this.addinventoryForm.patchValue({ assigned_to: name });\n  }\n    setFormTitle(name){\n      this.authService.setFormTitle(name);\n      this.router.navigate(['/add-inventories']);\n    }\n    updatefields() {\n    // this.addinventoryForm.patchValue({ form_title: 'Inventory' });\n    this.formSendingStatus = 'Save'\n    this.addinventoryForm.patchValue({ form_title: this.user1.form_title });\n    this.addinventoryForm.patchValue({ _id: this.user1._id });\n    this.addinventoryForm.patchValue({ location: this.user1.location });\n    this.addinventoryForm.patchValue({ assigned_to: this.user1.assigned_to });    \n    this.addinventoryForm.patchValue({ property_type: this.user1.property_type });\n    this.addinventoryForm.patchValue({ area: this.user1.area });\n    this.addinventoryForm.patchValue({ client_type: this.user1.client_type });\n    this.addinventoryForm.patchValue({ demand_price: this.user1.demand_price });\n    this.addinventoryForm.patchValue({ property_purpose: this.user1.property_purpose });\n    this.addinventoryForm.patchValue({ beds_number: this.user1.beds_number });\n    this.addinventoryForm.patchValue({ client_name: this.user1.client_name });\n    this.addinventoryForm.patchValue({ client_number: this.user1.client_number });\n    this.addinventoryForm.patchValue({ city: this.user1.city });\n    \n    if(this.user1.location) {\n      for(let i=0; i< this.user1.location.length; i++) {\n        console.log(this.user1.location[i].location);\n        this.selectStringLocations.push(this.user1.location[i].location);\n        this.selectedLocations.push(this.user1.location[i].location);\n      }\n      console.log(this.selectStringLocations);\n    }\n    \n    if(this.user1.city) {\n      this.getLocations(this.user1.city[0]._id);\n      // this.addinventoryForm.patchValue({ city: this.user1.city.city });\n      console.log(this.user1.city[0]._id);\n      \n    }\n    console.log(this.addinventoryForm.value);\n    \n    this.selectedCity = this.user1.city[0].city;\n    console.log(this.selectedLocations);\n    console.log(this.selectedCity);\n    \n  }\n\n  // File Upload Functions below\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  // Form Declaration, and Validation Function\n  formDeclare() {\n    this.addinventoryForm = this.formBuilder.group({\n      // _id: [''],\n      assigned_to1:[],\n      assigned_to: [\n        {\n          userId: '',\n          name: '',\n        },\n      ],\n      admin: [\n        {\n          userId: '',\n          name: '',\n        },\n      ],\n      form_title: [''],\n      property_purpose: [''],\n      property_type: [''],\n      city: [\n        {\n          id: '',\n          name: this.city_value,\n          cityId: '',\n        },\n      ],\n      location: [],\n      sub_location: [\n        {\n          id: '',\n          name: '',\n          sub_locationId: '',\n        },\n      ],\n      min_price: [],\n      max_price: [],\n      demand_price: [],\n      min_area: [],\n      max_area: [],\n      beds_number: [],\n      area: [],\n      area_unit: [''],\n      client_name: [''],\n      client_number: [],\n      client_type: [''],\n    });\n  }\n\n  getCity(cityId) {\n    const city = this.cities.filter((city: any) => {\n      return city._id === cityId;\n    });\n    if (city[0]) {\n      return city[0].city;\n    } else {\n      return '';\n    }\n  }\n\n  getLocation(locId) {\n    const location = this.locations.filter((location: any) => {\n      return location._id === locId;\n    });\n    if (location[0]) {\n      return location[0].location;\n    } else {\n      return '';\n    }\n  }\n\n  changeCity(city) {\n    console.log(this.locations);\n    \n    this.locations = '';\n      \n    if(this.user){\n      console.log(city.city);\n      \n      console.log(this.selectedCity);\n  \n      if (this.selectedCity == city.city)\n      {\n        this.selectStringLocations = this.selectedLocations;\n        console.log(this.selectedLocations);\n        console.log(this.selectStringLocations);\n      }\n      else\n      this.selectStringLocations = [];\n    }\n    console.log(this.locations);\n    if(city){\n    this.getLocations(city._id);\n    this.addinventoryForm.patchValue({ city });\n    console.log(this.addinventoryForm.value);\n    }\n  }\n  changeLocation(location) {\n    console.log(location);\n    this.selectedLocations = location;\n    console.log(this.addinventoryForm.value);\n  }\n\n  // Getting cities from backend Api's\n  getCities() {\n    this.authService.getCities().subscribe(\n      (cities) => {\n        // console.log('Curr', this.user);\n        if (this.user.access === 'islamabad_admin') {\n          this.city.push(cities[2]);\n          this.cities = this.city;\n        } else if (this.user.access === 'rawalpindi_admin') {\n          this.city.push(cities[1]);\n          this.cities = this.city;\n        } else if (this.user.access === 'peshawar_admin') {\n          this.city.push(cities[0]);\n          this.cities = this.city;\n        } else {\n          this.cities = cities;\n        }\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  getLocations(selectedCity?) {\n    console.log(selectedCity);\n    this.authService.getLocations().subscribe(\n      (locations) => {\n        console.log(locations, selectedCity);\n\n        this.locations = locations;\n        // this.subsLocations = locations.subLocations;\n        // console.log(\" this.locations\", this.locations);\n        if (selectedCity) {\n          this.locations = locations.filter((loc) => {\n            return loc.cityId == selectedCity;\n          });\n        }\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n  // //////////\n\n  //   changeValue(value) {\n  //     this.checked = !value;\n  // }\n\n  // Function to initialize Map; used in template\n  // tslint:disable-next-line: typedef\n  // initializemapbox() {\n  //   this.map = new mapboxgl.Map({\n  //     accessToken:\n  //       'pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg',\n  //     container: 'map',\n  //     style: 'mapbox://styles/mapbox/streets-v11',\n  //     center: [73.024955, 33.650753],\n  //     zoom: 10,\n  //   });\n  //   this.map.addControl(new mapboxgl.FullscreenControl());\n  //   this.map.addControl(new mapboxgl.NavigationControl());\n  //   this.map.addControl(\n  //     new mapboxgl.GeolocateControl({\n  //       positionOptions: {\n  //         enableHighAccuracy: true,\n  //       },\n  //       trackUserLocation: true,\n  //     })\n  //   );\n  // }\n\n  ///////////////////////////////\n  // Check whether user pressed 'buy' or 'rent' button\n  setValue(value: string) {\n    this.optionValue1 = value;\n  }\n  assignFormTitle(e) {\n    console.log(e.target.value);\n    // return this.addinventoryForm.patchValue({form_title: formTitle});\n    // this.addinventoryForm.\n  }\n\n  // Submit form to backend service\n  submitForm() {\n    this.submitted = true; // stop here if form is invalid\n    console.log('\\n\\n', this.addinventoryForm.value, '\\n\\n');\n    this.addinventoryForm.patchValue({ location: this.selectedLocations });\n\n    if (this.user1) {\n      console.log(this.addinventoryForm.value);\n      this.authService\n        .updateInventory(this.user1._id, this.addinventoryForm.value)\n        .subscribe((data: any) => {\n          console.log('Update inventory response data: ', data);\n          // this.registerresponse = data;\n          const email = this.addinventoryForm.value.email;\n          const msg = data.message;\n          // const status = data.status;\n          // this.registerForm.reset();\n          if (msg == 'Inventory updated successfully') {\n            this.toastr.success(msg, 'Success', {\n              timeOut: 5000,\n            });\n            if ( this.addinventoryForm.get('form_title').value === 'Inventory' ) {\n            this.router.navigate(['/inventory']);\n            }\n            else if ( this.addinventoryForm.get('form_title').value === 'Lead' ) {\n              this.router.navigate(['/leads']);\n              }\n              else if ( this.addinventoryForm.get('form_title').value === 'Both' ) {\n                this.router.navigate(['/both']);\n                }\n          } else {\n            this.toastr.error(msg, 'Error', {\n              timeOut: 5000,\n            });\n          }\n        });\n    } else {\n      const user = this.addinventoryForm.get('form_title').value;\n      console.log(this.addinventoryForm.value);\n      this.authService\n        .createInventory(this.addinventoryForm.value)\n        .subscribe((data) => {\n          console.log('signup data: ', data);\n          // this.registerresponse = data;\n          const email = this.addinventoryForm.value.email;\n          // const msg = data.message;\n          // const status = data.status;\n          // this.registerForm.reset();\n          if (user === 'Inventory') {\n            this.toastr.success('Inventory Added', 'Success', {\n              timeOut: 5000,\n            });\n            this.router.navigate(['/inventory']);\n          }\n          else if (user === 'Lead'){\n\n            this.toastr.success('Lead Added', 'Success', {\n              timeOut: 5000,\n            });\n            this.router.navigate(['/leads']);\n          }\n          else if (user === 'Both'){\n\n            this.toastr.success('Both Added', 'Success', {\n              timeOut: 5000,\n            });\n            this.router.navigate(['/both']);\n          }\n          // else {\n          //   this.toastr.error('msg', 'Error', {\n          //     timeOut: 5000,\n          //   });\n\n          // }\n        });\n    }\n  }\n}\n\n//   console.log('\\n\\n', this.addinventoryForm.value, '\\n\\n');\n//   this.authService.createInventory(this.addinventoryForm.value).subscribe((data) => {\n//     const user = this.addinventoryForm.get('form_title').value;\n//     if (user === 'Lead'){\n//     this.addinventoryForm.reset();\n//     this.toastr.success('User Added', 'Success', {\n//       timeOut: 9000\n//     });\n//     console.log('Subscribed data: ', data);\n//     this.router.navigate(['/leads']);\n//   }\n//   else if (user === 'Inventory'){\n//     this.addinventoryForm.reset();\n//     this.toastr.success('User Added', 'Success', {\n//       timeOut: 9000\n//     });\n//     console.log('Subscribed data: ', data);\n//     this.router.navigate(['/inventory']);\n//   }\n// },\n//     (error: HttpErrorResponse) => {\n//       console.log(error);\n//       this.toastr.error('Fields Empty', 'Error', {\n//         timeOut: 5000\n//       });\n//     });\n\n// Form upload function\n\n// onSelectFile(event) {\n//   if (event.target.files && event.target.files[0]) {\n//     const filesAmount = event.target.files.length;\n//     for (let i = 0; i < filesAmount; i++) {\n//       const reader = new FileReader();\n\n//       // tslint:disable-next-line: no-shadowed-variable\n//       reader.onload = (event: any) => {\n//         // console.log(event.target.result);\n//         this.urls.push(event.target.result);\n//       };\n\n//       reader.readAsDataURL(event.target.files[i]);\n//     }\n//   }\n// }\n// removeMultipleSelectedFile(index) {\n//   this.urls.splice(index, 1);\n// }\n","<div class=\"container-fluid\">\n    <div class=\" register\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <app-header></app-header>\n            </div>\n        </div>\n        <div class=\"row inventory\">\n            <div class=\"col-md-3\">\n                <!-- <app-header></app-header> -->\n                <app-dashboard></app-dashboard>\n            </div>\n            <div class=\"col-md-9 col-sm-10 register-right\">\n                <form class=\"\" [formGroup]=\"addinventoryForm\">\n\n                    <h2 class=\"register-heading\">Add Inventory</h2>\n                    <!-- Form Title -->\n                    <div class=\"row  offset-1\">\n                        <!-- <div class=\"form-group\"> -->\n\n                        <div class=\"col-md-5 col-sm-5 radio-mid\">\n\n                            <div class=\"radio\">\n                                <div class=\"btn-group btn-group-toggle\">\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Lead'\"> \n                                    <input type=\"radio\" [attr.disabled]=\"addinventoryForm.get('form_title').value !== 'Lead'\" formControlName=\"form_title\"\n                                        value=\"Lead\" > Lead \n                                </label>\n\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Inventory'\"> \n                                    <input type=\"radio\"  [attr.disabled]=\"addinventoryForm.get('form_title').value !== 'Inventory'\"   formControlName=\"form_title\"\n                                        value=\"Inventory\">  \n                                        Inventory\n                                </label>\n\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Both'\"> \n                                    <input type=\"radio\"  [attr.disabled]=\"addinventoryForm.get('form_title').value !== 'Both'\"  formControlName=\"form_title\"\n                                        value=\"Both\">  \n                                        Both\n                                </label>\n\n                                </div>\n                            </div>\n                            <b class=\"steps\">Step 1: Select Form Title</b>\n                        </div>\n                    </div>\n                    <!--  *ngIf=\"addinventoryForm.get('form_title').value === 'Lead' || addinventoryForm.get('form_title').value === 'Inventory' \" -->\n                    <div>\n                        <!-- Property Purpose -->\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-5 col-sm-5\"><br><br>\n                                <div class=\"radio\">\n                                    <div class=\"btn-group btn-group-toggle\">\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Buy'\">\n                          <input type=\"radio\" formControlName=\"property_purpose\"  value=\"Buy\" autocomplete=\"off\" checked> Buy\n                        </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Sell'\">\n                          <input type=\"radio\"    formControlName=\"property_purpose\"  value=\"Sell\" autocomplete=\"off\"> Sell\n                        </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Rent'\">\n                          <input type=\"radio\"    formControlName=\"property_purpose\"   value=\"Rent\" autocomplete=\"off\"> Rent\n                        </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Rent-Out'\">\n                      <input type=\"radio\"    formControlName=\"property_purpose\"  value=\"Rent-Out\" autocomplete=\"off\"> Rent-Out\n                    </label>\n                                    </div>\n                                </div>\n                                <b class=\"steps\">Step 2: Select Purpose</b>\n                            </div>\n                            <!-- <p>step-2: select the button</p> -->\n                        </div>\n                        <br><br>\n                        <div class=\"row  offset-1\">\n                            <!-- City and Location Select -->\n\n                            <!-- <ng-select class=\"ng-select\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\n                            </ng-select>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <ng-select class=\"ng-select\" [items]=\"locations\" [multiple]=\"true\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                            </ng-select> -->\n\n\n\n                            <!--  -->\n\n                            <!-- City -->\n                            <div class=\"form-group\" *ngIf=\"!user1\">\n                                <div class=\"input-group\">\n                                    <ng-select class=\"ng-select\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"_id\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\n                                    </ng-select>\n                                    <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.city.errors.required\">City is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" *ngIf=\"user1\">\n                                <div class=\"input-group\">\n                                    <ng-select [(ngModel)]=\"this.user1.city[0].city\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\n                                    </ng-select>\n                                    <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.city.errors.required\">City is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <!-- Location -->\n                            <div class=\"form-group\" *ngIf=\"user1\">\n                                <div class=\"input-group\">\n                                    <ng-select [(ngModel)]=\"selectStringLocations\" [multiple]=\"true\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                                    </ng-select>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" *ngIf=\"!user1\">\n                                <div class=\"input-group\">\n                                    <ng-select class=\"ng-select\" [multiple]=\"true\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                                    </ng-select>\n                                </div>\n                            </div>\n\n                            <!--  -->\n\n                            <!-- Sub Property Type  -->\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"dropdown ml-2 mr-2 dropdown\">\n                                        <button data-toggle=\"modal\" data-target=\"#exampleModal2\" style=\"width: 160px;\" class=\"btn btn-outline-secondary \" type=\"button\">\n                                    <span *ngIf=\"!addinventoryForm.get('property_type').value\">Select Property Type </span>\n                                    <span *ngIf=\"addinventoryForm.get('property_type').value\">{{addinventoryForm.get('property_type').value}} </span>\n                                    </button>\n                                        <!-- Modal -->\n                                        <div class=\"modal fade\" id=\"exampleModal2\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                            <div class=\"modal-dialog\" role=\"document\">\n                                                <div class=\"modal-content\">\n                                                    <div class=\"modal-header\">\n\n                                                        <ul class=\"nav nav-tabs\">\n                                                            <li style=\"margin-left: 21px;\">\n                                                                <a href=\"#home\" data-toggle=\"tab\" class=\"active\"> Home </a>\n                                                            </li>\n                                                            <li style=\"margin-left: 21px;\">\n                                                                <a href=\"#plot\" data-toggle=\"tab\"> Plot </a>\n                                                            </li>\n                                                            <li style=\"margin-left: 21px;\">\n                                                                <a href=\"#commercial\" data-toggle=\"tab\"> Commercial </a>\n                                                            </li>\n                                                        </ul>\n\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n                                                    </div>\n                                                    <div class=\"modal-body\">\n                                                        <div class=\"tab-content\">\n                                                            <div class=\"tab-pane active\" id=\"home\">\n\n                                                                <div class=\"btn-group btn-group-toggle\" style=\"\n                                                                padding: 4px 45px;\">\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'House'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"House\" > House \n                                                                </label>\n\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Apartment'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Apartment\">  \n                                                                        Apartment\n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Upper Portion'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Upper Portion\">  \n                                                                        Upper Portion\n                                                                </label>\n                                                                </div>\n                                                                <div class=\"btn-group btn-group-toggle\" style=\"\n                                                                padding: 4px 45px;\">\n                                                                    <label class=\"btn btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Lower Portion'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"Lower Portion\" > Lower Portion \n                                                                </label>\n\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Farm House'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Farm House\">  \n                                                                        Farm House\n                                                                </label>\n\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Penthouse'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Penthouse\">  \n                                                                        Penthouse\n                                                                </label>\n\n                                                                </div>\n\n                                                            </div>\n                                                            <div class=\"tab-pane\" id=\"plot\">\n                                                                <div class=\"btn-group btn-group-toggle\" style=\"\n                                                                padding: 4px 45px;\">\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Residential Plot'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"Residential Plot\" > Residential Plot \n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Commercial Plot'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Commercial Plot\">  \n                                                                        Commercial Plot\n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Farm House Plot'\"> \n<input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Farm House Plot\">  \n                                                                        Farm House Plot\n                                                                </label>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"tab-pane\" id=\"commercial\">\n\n                                                                <div class=\"btn-group btn-group-toggle\">\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Office'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"Office\" > Office \n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Shop'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Shop\">  \n                                                                        Shop\n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Plaza'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Plaza\">  \n                                                                        Plaza\n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Floor'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"Floor\" > Floor \n                                                                </label>\n                                                                </div>\n\n\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"modal-footer\">\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n                                                            Okay\n                                                        </button>\n                                                        <!-- <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">\n                                                            Delete\n                                                        </button> -->\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <!-- Ending Modal -->\n                                    </div><b class=\"steps\">Step 4: Select Property Type</b>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Price Range -->\n                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Rent' \">\n\n                        <div class=\"offset-1\" style=\"color: red\" *ngIf=\"isInvalid\">Please check your PRICE ranges</div>\n                        <div class=\"row offset-1\">\n                            <br>\n                            <br> <b class=\"price\">Price Range</b>\n                        </div>\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <input type=\"number\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_price\" name=\"greaterThanValue\" [(ngModel)]=\"greaterThanValue\" (ngModelChange)=\"onChangePrice($event)\" required autocomplete=\"off\" />\n                                        <!-- <input type=\"number\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_price\" required autocomplete=\"off\" /> -->\n                                        <!-- <div *ngIf=\"submitted && f.demand.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.demand.errors.required\">Demand is required</div>\n                                </div> -->\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <!-- <input type=\"number\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_price\" required autocomplete=\"off\" /> -->\n                                        <input type=\"number\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_price\" name=\"lessThanValue\" [(ngModel)]=\"lessThanValue\" (ngModelChange)=\"onChangePrice($event)\">\n                                        <input type=\"submit\" required autocomplete=\"off\" />\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Demand -->\n                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Sell' || addinventoryForm.get('property_purpose').value === 'Rent-Out' \">\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <br> <b>Demand </b>\n                                        <input type=\"number\" placeholder=\"\" class=\"form-control\" formControlName=\"demand_price\" required autocomplete=\"off\" />\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Area Range -->\n                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Rent' \">\n                        <div class=\"offset-1\" style=\"color: red\" *ngIf=\"isInvalid1\">Please check your AREA ranges</div>\n                        <div class=\"row offset-1\">\n                            <br> <b class=\"price\">Area Range</b>\n                        </div>\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <input type=\"number\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_area\" name=\"greaterThanValue1\" [(ngModel)]=\"greaterThanValue1\" (ngModelChange)=\"onChangeArea($event)\" required autocomplete=\"off\" />\n                                        <!-- <input type=\"number\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_area\" required autocomplete=\"off\" /> -->\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <!-- <br> <b>Area Range</b> -->\n                                        <!-- <input type=\"number\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_area\" required autocomplete=\"off\" /> -->\n                                        <input type=\"number\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_area\" required autocomplete=\"off\" name=\"lessThanValue1\" [(ngModel)]=\"lessThanValue1\" (ngModelChange)=\"onChangeArea($event)\" />\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-8 col-sm-4\">\n\n                                <!-- <div class=\"col-md-5 col-sm-5\"><br><br> -->\n                                <div class=\"radio\">\n                                    <div class=\"btn-group btn-group-toggle\">\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Feet'\">\n                              <input type=\"radio\" formControlName=\"area_unit\"  value=\"Sq. Feet\" autocomplete=\"off\" checked> Sq. Feet\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Yard'\">\n                              <input type=\"radio\"    formControlName=\"area_unit\"  value=\"Sq. Yard\" autocomplete=\"off\"> Sq. Yard\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Marla'\">\n                              <input type=\"radio\"    formControlName=\"area_unit\"   value=\"Marla\" autocomplete=\"off\"> Marla\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Kanal'\">\n                          <input type=\"radio\"    formControlName=\"area_unit\"  value=\"Kanal\" autocomplete=\"off\"> Kanal\n                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Beds -->\n\n                    <div class=\"row offset-1\">\n                        <div class=\"col-md-4 col-sm-4\">\n                            <div class=\"form-group\">\n                                <div> <b>Beds Number</b>\n                                    <input formControlName=\"beds_number\" class=\"form-control\" type=\"number\" />\n                                </div><b class=\"steps\">Step 7: Select Beds</b>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Simple Area -->\n                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Sell' \">\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div>\n                                        <b>Simple Area</b>\n                                        <input type=\"number\" class=\"form-control\" formControlName=\"area\" required autocomplete=\"off\" />\n                                        <!-- <div *ngIf=\"submitted && f.land_area.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.land_area.errors.required\">Land Area is required</div>\n                                </div> -->\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-5 col-sm-2\">\n\n                                <div class=\"radio select-btn\">\n                                    <div class=\"btn-group btn-group-toggle\">\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Feet'\">\n                              <input type=\"radio\" formControlName=\"area_unit\"  value=\"Sq. Feet\" autocomplete=\"off\" checked> Sq. Feet\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Yard'\">\n                              <input type=\"radio\"    formControlName=\"area_unit\"  value=\"Sq. Yard\" autocomplete=\"off\"> Sq. Yard\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Marla'\">\n                              <input type=\"radio\"    formControlName=\"area_unit\"   value=\"Marla\" autocomplete=\"off\"> Marla\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Kanal'\">\n                          <input type=\"radio\"    formControlName=\"area_unit\"  value=\"Kanal\" autocomplete=\"off\"> Kanal\n                        </label>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Client Details -->\n                    <div class=\"row offset-1\">\n\n\n                        <div class=\"col-md-4 col-sm-4 form-group\">\n                            <div class=\"\"> <b>Client Name</b>\n                                <input formControlName=\"client_name\" class=\"form-control\" type=\"text\" />\n                            </div><b class=\"steps\">Step 8: Select Client Name</b>\n                        </div>\n                        <div class=\"col-md-4 col-sm-4 form-group\">\n                            <div class=\"\"> <b>Client Number</b>\n                                <input formControlName=\"client_number\" class=\"form-control\" type=\"number\" />\n                            </div><b class=\"steps\">Step 9: Select Client Number</b>\n                        </div>\n                    </div>\n                    <div class=\"row offset-1\">\n                        <div class=\"col-md-4 col-sm-4 form-group\">\n                            <div class=\"\"> <b>Client Type</b>\n                                <input formControlName=\"client_type\" class=\"form-control\" type=\"text\" />\n                            </div><b class=\"steps\">Step 10: Select Client Type</b>\n                        </div>\n\n                    </div>\n\n                    <!-- Access Type -->\n                    <br>\n                    <div class=\"row offset-1\" *ngIf=\" addinventoryForm.get('form_title').value === 'Inventory' || addinventoryForm.get('form_title').value === 'Both'\">\n                        <div class=\"col-md-5 col-sm-5\">\n\n                            <div class=\"radio\">\n                                <div class=\"btn-group btn-group-toggle\">\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('assigned_to1').value === 'Self'\"> \n                                        <input (click)=\"assigned_To('Self')\" type=\"radio\" formControlName=\"assigned_to1\" value=\"Self\" > \n                                            Self \n                                    </label>\n\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('assigned_to1').value === 'Admin'\"> \n                                        <input  type=\"radio\"  formControlName=\"assigned_to1\" value=\"Admin\">  \n                                            Admins\n                                    </label>\n\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('assigned_to1').value === 'Agents'\"> \n                                        <input  type=\"radio\"  formControlName=\"assigned_to1\" value=\"Agents\">  \n                                            Agents\n                                    </label>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Select Admins  -->\n                    <br><br>\n                    <div class=\"row offset-1\" *ngIf=\" addinventoryForm.get('assigned_to1').value == 'Admin'\">\n\n                        <!-- <br><br> -->\n                        <ng-select class=\"ng-select inputs2\" [items]=\"access_type\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Admin\" (change)=\"changeAccess($event)\">\n                        </ng-select>\n\n                    </div>\n\n                    <!-- Select Agents -->\n                    <div class=\"row offset-1\" *ngIf=\" addinventoryForm.get('assigned_to1').value === 'Agents' \">\n\n\n\n                        <!-- <ng-select class=\"ng-select\" #city [items]=\"cities\" bindLabel=\"city\" bindValue=\"_id\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\n                        </ng-select> -->\n\n                        <ng-select class=\"ng-select inputs2\" [items]=\"userList\" bindLabel=\"fullname\" bindValue=\"fullname\" placeholder=\"Select Agent\" (change)=\"changeAccess2($event)\">\n                        </ng-select>\n\n                    </div>\n                </form>\n\n                <!-- Complete form submission button -->\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button (click)=\"submitForm()\" class=\"btn btn1 btn-primary\">{{formSendingStatus}}</button>\n                            <br><br><br>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { RouteInfo } from \"./sidebar.metadata\";\n\nexport const ROUTES: RouteInfo[] = [\n  {\n    path: \"\",\n    title: \"Dashboard\",\n    icon: \"mdi mdi-dots-horizontal\",\n    class: \"nav-small-cap\",\n    extralink: true,\n    submenu: [],\n  },\n  {\n    path: \"/profile\",\n    title: \"User Profile\",\n    icon: \"mdi mdi-account\",\n    class: \"\",\n    extralink: false,\n    submenu: [],\n  },\n  {\n    path: \"/users\",\n    title: \"Agent\",\n    icon: \"fa fa-users\",\n    class: \"\",\n    extralink: false,\n    submenu: [],\n  },\n  {\n    path: \"/inventory\",\n    title: \"Inventory\",\n    icon: \"fas fa-file-alt\",\n    class: \"\",\n    extralink: false,\n    submenu: [],\n  },\n  {\n    path: \"/leads\",\n    title: \"Leads\",\n    icon: \"fas fa-phone-volume\",\n    class: \"\",\n    extralink: false,\n    submenu: [],\n  }\n];\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticationService } from \"../services/Authentication/authentication.service\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n// import { first } from 'rxjs/operators';\nimport { ToastrService } from \"ngx-toastr\";\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"],\n})\nexport class SignupComponent implements OnInit {\n  submitted = false;\n  registerForm: FormGroup;\n  cities: any;\n  locations: any;\n  // access: ['super_admin', 'agent', 'city_admin'];\n  user: any;\n  abc: any;\n  accessType = [\n    { access: \"agent\" },\n    { access: \"city_admin\" },\n  ];\n  selectedLocations: any = [];\n  selectedCity: any;\n  selectStringLocations: any = [];\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    public router: Router,\n    private toastr: ToastrService\n  ) {}\n  ngOnInit(): void {\n    this.getUser();\n    this.removeUser();\n    this.initialize();\n    if (this.user) {\n      this.updatefields();\n    }\n  }\n  removeUser() {\n    this.authService.removeUser();\n  }\n  getUser() {\n    this.user = this.authService.getUser();\n  }\n  updatefields() {\n    console.log(this.user);\n    // this.registerForm.value[\"city\"] = this.user.city;\n    // this.registerForm.value[\"access\"] = this.user.access;\n    this.registerForm.patchValue({ fullname: this.user.fullname });\n    this.registerForm.patchValue({ email: this.user.email });\n    this.registerForm.patchValue({ password: this.user.password });\n    this.registerForm.patchValue({ location: this.user.location });\n    this.registerForm.patchValue({ city: this.user.city });\n    this.registerForm.patchValue({ contact: this.user.contact });\n    this.registerForm.patchValue({ access: this.user.access });\n    console.log(this.registerForm);\n\n    if (this.user.location) {\n      for (let i = 0; i < this.user.location.length; i++) {\n        console.log(this.user.location[i].location);\n        this.selectStringLocations.push(this.user.location[i].location);\n        this.selectedLocations.push(this.user.location[i].location);\n      }\n      console.log(this.selectStringLocations);\n    }\n\n    if (this.user.city) {\n      this.getLocations(this.user.city._id);\n      // this.registerForm.patchValue({ city: this.user.city });\n      console.log(this.user.city.city);\n    }\n    this.selectedCity = this.user.city.city;\n    // this.selectedLocations = this.user.location;\n    console.log(this.selectedLocations);\n    \n  }\n  initialize() {\n    if (this.user) {\n      this.registerForm = this.formBuilder.group({\n        fullname: [\"\", Validators.required],\n        email: [\n          \"\",\n          [\n            Validators.required,\n            Validators.email,\n            Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),\n          ],\n        ],\n        location: [],\n        contact: [\"\", Validators.required],\n        access: [],\n        city: [\"\"],\n        // created: []\n      });\n    } else {\n      this.registerForm = this.formBuilder.group(\n        {\n          fullname: [\"\", Validators.required],\n          email: [\n            \"\",\n            [\n              Validators.required,\n              Validators.email,\n              Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),\n            ],\n          ],\n          password: [\"\", [Validators.required, Validators.minLength(6)]],\n          location: [],\n          city: [\"\"],\n          contact: [\"\", Validators.required],\n          access: [\"\"],\n          confirm_password: [\n            \"\",\n            [Validators.required, Validators.minLength(6)],\n          ],\n          // validators: this.password.bind(this)\n        }\n        // {\n        //   validators: this.password.bind(this),\n        // }\n      );\n    }\n    this.getCities();\n  }\n  password(event, value) {\n    const password = this.registerForm.get(\"password\");\n    const confirm_password = this.registerForm.get(\"confirm_password\");\n    if (value === \"Pass\" && event === confirm_password.value) {\n      this.abc = \"\";\n    } else if (value === \"Conf\" && event === password.value) {\n      this.abc = \"\";\n    } else {\n      this.abc = \"Password not matched\";\n    }\n  }\n\n  // Calling Api to get the Cities\n  getCities() {\n    this.authService.getCities().subscribe(\n      (data) => {\n        console.log(data);\n        this.cities = data;\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n  // Calling Api to get the Locations\n  getLocations(selectedCity?) {\n    this.authService.getLocations().subscribe(\n      (locations) => {\n        console.log(locations);\n        this.locations = locations;\n        if (selectedCity) {\n          this.locations = locations.filter((loc) => {\n            return loc.cityId == selectedCity;\n          });\n        }\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  //Function to change the city of --ng select city--\n  changeCity(city) {\n    \n    // console.log(this.registerForm.controls['location'].value);\n    // this.registerForm.patchValue( {'location':'cdf'} );\n    // this.registerForm.controls.location.setValue('abc');\n    // console.log(this.registerForm.controls['location'].value);\n    \n    this.locations = '';\n    if(this.user){\n    console.log(city.city);\n    \n    console.log(this.selectedCity);\n\n    if (this.selectedCity == city.city)\n    {\n      this.selectStringLocations = this.selectedLocations;\n      console.log(this.selectStringLocations);\n    }\n    else\n    this.selectStringLocations = [];\n  }\n    // if(this.user.city.city === city.city) {\n    //   console.log(this.user.city.city, city.city);\n    //   if (this.user.location) {\n    //     for (let i = 0; i < this.user.location.length; i++) {\n    //       this.selectStringLocations.push(this.user.location[i].location);\n    //     }\n    //   }\n    // }\n\n    if (city) this.getLocations(city._id);\n    this.registerForm.patchValue({ city });\n  }\n\n  //Function to change the location of --ng select location--\n  changeLocation(location) {\n    // this.selectedLocations = location;\n    // console.log(this.selectedLocations);\n    console.log(location);\n    this.registerForm.patchValue({ location: location });\n  }\n\n  // Patch the value of access input using this below function\n  changeAccess(access) {\n    // console.log(access.access);\n    if (access) this.registerForm.patchValue({ access: access.access });\n  }\n\n  // Function to register the user by sending whole form\n  registerUser() {\n    console.log(this.registerForm);\n\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      console.log(\"Erroneous\");\n      this.toastr.error(\"Can not Registered\", \"Error\", {\n        timeOut: 5000,\n      });\n      return;\n    }\n\n    if (this.user) {\n      // console.log(this.registerForm.value);\n      this.authService\n        .updateUser(this.user._id, this.registerForm.value)\n        .subscribe((data: any) => {\n          console.log(\"signup data: \", data);\n          // this.registerresponse = data;\n          const email = this.registerForm.value.email;\n          const msg = data.message;\n          // const status = data.status;\n          // this.registerForm.reset();\n          if (msg !== \"This email has been registered already\") {\n            this.toastr.success(msg, \"Success\", {\n              timeOut: 5000,\n            });\n            this.router.navigate([\"users\"]);\n          } else {\n            this.toastr.error(msg, \"Error\", {\n              timeOut: 5000,\n            });\n          }\n        });\n    } else {\n      console.log(this.registerForm.value);\n      this.authService.register(this.registerForm.value).subscribe(\n        (data) => {\n          console.log(\"signup data: \", data);\n          const msg = data.message;\n          // if (msg !== \"This email has been registered already\") {\n          this.toastr.success(msg, \"Success\", {\n            timeOut: 5000,\n          });\n          this.router.navigate([\"users\"]);\n          // }\n        },\n        (error) => {\n          console.log(error.error.message);\n          this.toastr.error(error.error.message, \"Error\", {\n            timeOut: 5000,\n          });\n        }\n      );\n    }\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n}\n","<!-- <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script> -->\n\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-header></app-header>\n    </div>\n</div>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- <app-header></app-header> -->\n            <app-dashboard></app-dashboard>\n        </div>\n    </div>\n    <div class=\"row\">\n\n        <div class=\"col-md-11 col-lg-9 col-xl-7 right\">\n            <div class=\"register\">\n                <h2 class=\"text-center\">Welcome to my asasa</h2>\n                <form class=\"form-register\" [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\">\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <i class=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                            <input type=\"text\" class=\"form-control inputs\" formControlName=\"fullname\" placeholder=\"Full name\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\n                            <div *ngIf=\"submitted && f.fullname.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.fullname.errors.required\">Name is required</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                            <input type=\"text\" class=\"form-control emailInput\" formControlName=\"email\" id=\"email\" autocomplete=\"off\" placeholder=\"Enter Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Password -->\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <i class=\"fas fa-unlock\"></i>\n                            <input type=\"password\" (keyup)=\"password($event.target.value, 'Pass')\" class=\"form-control inputs\" formControlName=\"password\" autocomplete=\"off\" placeholder=\"Password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <i class=\"fas fa-unlock\"></i>\n                            <input type=\"password\" (keyup)=\"password($event.target.value, 'Conf')\" class=\"form-control inputs\" formControlName=\"confirm_password\" autocomplete=\"off\" placeholder=\"Confirm Password\" [ngClass]=\"{ 'is-invalid': submitted && f.confirm_password.errors }\"\n                            />\n                            <div *ngIf=\"submitted && f.confirm_password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.confirm_password.errors.required\">Password is required</div>\n                                <div *ngIf=\"f.confirm_password.errors.minlength\">Confirm Password must be at least 6 characters</div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"!submitted\" class=\"texts\">{{abc}}</div>\n                        <div *ngIf=\"submitted && !f.confirm_password.errors\" class=\"texts\">{{abc}}</div>\n                    </div>\n                    <!-- Contact -->\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input formControlName=\"contact\" type=\"number\" class=\"form-control inputs\" autocomplete=\"off\" placeholder=\"Phone Number\" [ngClass]=\"{ 'is-invalid': submitted && f.contact.errors }\" />\n                            <div *ngIf=\"submitted && f.contact.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.contact.errors.required\">Contact is required</div>\n                            </div>\n                        </div>\n                        <div id='message'></div>\n                    </div>\n                    <!-- City -->\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select City</b> -->\n                            <i class=\"fas fa-building\"></i>\n                            <ng-select class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"_id\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\n                            </ng-select>\n                            <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.city.errors.required\">City is required</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select City</b> -->\n                            <i class=\"fas fa-building\"></i>\n                            <ng-select [(ngModel)]=\"user.city.city\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\n                            </ng-select>\n                            <!-- {{user.city.city}} -->\n                            <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.city.errors.required\">City is required</div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Location -->\n                    <div class=\"form-group\" *ngIf=\"user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select Location</b> -->\n                            <i class=\"fas fa-street-view\"></i>\n                            <ng-select [(ngModel)]=\"selectStringLocations\" [multiple]=\"true\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select inputs2\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                            </ng-select>\n                            <!-- {{user.location[0].location}} -->\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select Location</b> -->\n                            <i class=\"fas fa-street-view\"></i>\n                            <ng-select class=\"ng-select inputs2\" [multiple]=\"true\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                            </ng-select>\n                        </div>\n                    </div>\n                    <!-- Access Type -->\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select Access</b> -->\n                            <i class=\"fas fa-universal-access\"></i>\n                            <ng-select class=\"ng-select inputs2\" [items]=\"accessType\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\n                                <!-- <ng-select class=\"ng-select inputs2\" [items]=\"access\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\n                            <option>dasdas</option> -->\n                            </ng-select>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select Access</b> -->\n                            <i class=\"fas fa-universal-access\"></i>\n                            <ng-select [(ngModel)]=\"user.access\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select inputs2\" [items]=\"accessType\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\n                                <!-- <ng-select class=\"ng-select inputs2\" [items]=\"access\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\n                            <option>dasdas</option> -->\n                            </ng-select>\n                            <!-- {{user.access}} -->\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class='btn' class=\"btn btn-primary rounded-pill\">\n                            <span *ngIf=\"!user\">Register</span>\n                            <span *ngIf=\"user\">Save</span>\n                        </button>\n                    </div>\n                </form>\n\n            </div>\n        </div>\n    </div>\n\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter05'\n})\nexport class TableFilter05Pipe implements PipeTransform {\n\n  transform(\n    user: User[],\n    search_demand: string\n  ): User[] {\n\n    if (!user || !search_demand) {\n      return user;\n    }\n    return user.filter(user =>\n      user.Demand.toLowerCase().indexOf(search_demand.toLowerCase()) !== -1);\n\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-both',\n  templateUrl: './both.component.html',\n  styleUrls: ['./both.component.css']\n})\nexport class BothComponent implements OnInit {\n  user: any;\n  savedId: any;\n\n  withAutofocus = `<button type=\"button\" ngbAutofocus class=\"btn btn-danger\"\n      (click)=\"modal.close('Ok click')\">Ok</button>`;\n  deleteId: any;\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    private toastr: ToastrService\n    ) { }\n  // tslint:disable-next-line: variable-name\n  search_id: string;\n  // tslint:disable-next-line: variable-name\n  search_client: string;\n  // tslint:disable-next-line: variable-name\n  general_search: string;\n  // tslint:disable-next-line: variable-name\n  search_location: string;\n  // tslint:disable-next-line: variable-name\n  search_type: string;\n  // tslint:disable-next-line: variable-name\n  search_demand: string;\n  // tslint:disable-next-line: variable-name\n  search_area: string;\n\n  ngOnInit(): void {\n    this.getAllList();\n  }\n  \n  setUser(user: any){\n    this.authService.setUser(user);\n    // this.authService.setFormTitle('Both');\n    this.router.navigateByUrl('/add-inventories');\n    }\n    \n    setFormTitle(name){\n      this.authService.setFormTitle(name);\n      this.router.navigate(['/add-inventories']);\n    }\n    \n  getAllList() {\n    this.authService.getAll().subscribe(\n      (data) => {\n        this.user = data.inventories;\n        console.log('Server response: ', data);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n    // Function to delete the single inventory\n  deleteLead(){\n    console.log(this.deleteId);\n\n    this.authService.deleteInventory(this.deleteId).subscribe(data => {\n      console.log(data);\n      if (data.code === 200) {\n        this.toastr.success(data.message, 'Success', {\n            timeOut: 5000\n          });\n          this.getAllList();\n      //   for ( let i = 0; i < this.user.length; i++){\n      //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\n      }\n\n    });\n  }\n\n  confirmID(id) {\n    console.log(id);\n\n    this.deleteId = id;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-header></app-header>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-2\">\n        <!-- <app-header></app-header> -->\n        <app-dashboard></app-dashboard>\n    </div>\n    <!-- </div> -->\n    <div class=\"col-md-9\">\n        <div class=\"both\">\n            <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Both Leads/Inventory Table</b></h1>\n            <br>\n            <div>\n                <button class=\"btn btn-primary rounded-pill\" (click)=\"setFormTitle('Both')\">Add New</button>\n            </div>\n            <div class=\"pull-right\">\n                <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\n                <div class=\"card-body row\">\n                    <div class=\"col-auto\">\n                        <i class=\"fa fa-search icon\"></i>\n                    </div>\n                    <!--end of col-->\n                    <div class=\"col\">\n                        <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\" placeholder=\"Search topic or keyword\">\n                    </div>\n\n                    <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\n\n                    <button onclick=\"window.print()\" class=\"btn btn-primary rounded-pill\">Print</button>\n                    <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                </div>\n            </div>\n            <br><br><br>\n            <!-- Inventory management table is below -->\n            <table class=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Client</th>\n                        <th scope=\"col\">Type</th>\n                        <th scope=\"col\">Purpose</th>\n                        <th scope=\"col\">Prop. Type</th>\n                        <th scope=\"col\">Prop. #</th>\n                        <th scope=\"col\">Area</th>\n                        <th scope=\"col\">Location</th>\n                        <th scope=\"col\">Demand</th>\n                        <th scope=\"col\">Beds</th>\n                        <th scope=\"col\">Phone #</th>\n                        <th scope=\"col\">Comment</th>\n                        <th scope=\"col\">Assigned To</th>\n                        <th scope=\"col\">Admin Status</th>\n                        <th scope=\"col\">Agent Status</th>\n                        <th scope=\"col\">Added On</th>\n                        <th scope=\"col\">Operations</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of user | filter: general_search\">\n                        <!-- | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id -->\n                        <td>{{ user._id }}</td>\n\n                        <td><b>Name : </b>{{ user?.client_name }} <br> <b>Number : </b>{{ user?.client_number}}</td>\n                        <!-- <td>{{ user.client_name }}</td> -->\n                        <td>{{ user?.client_type }}</td>\n                        <td>{{ user?.property_purpose }}</td>\n                        <td>{{ user?.property_type }}</td>\n                        <td>{{ user?.Prop_num }}</td>\n                        <td>{{ user?.area}}</td>\n                        <!-- <td>{{ user.location.location }}</td> -->\n\n                        <!-- <td>\n                            <span *ngFor=\"let loc of user?.location\">{{ loc.location }}<br></span>\n                        </td> -->\n\n\n                        <td>\n                            {{user.city[0]?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},  </span>\n                        </td>\n\n                        <td>{{ user?.demand_price }}</td>\n                        <td>{{ user?.beds_number }}</td>\n                        <td>{{ user?.Phone_num }}</td>\n                        <td>{{ user?.Comment }}</td>\n                        <td>{{ user.assigned_to?.name}}</td>\n                        <td>{{ user?.Admin_status }}</td>\n                        <td>{{ user?.Agent_status }}</td>\n                        <td>{{ user?.created | date: \"dd/MM/yyyy\"}}</td>\n                        <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i><a (click)=\"setUser(user)\" role=\"button\">Edit</a>\n\n                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\n\n                        </td>\n                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        Are you sure you want to Delete it?\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n          Close\n        </button>\n                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLead()\">\n          Delete\n        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../Authentication/authentication.service';\nimport { Injectable } from '@angular/core';\n\nimport * as jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RedirectLoginGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthenticationService) {}\n\n  async canActivate() {\n    const token = await this.authService.getToken();\n    if (token) {\n      this.router.navigateByUrl('/profile');\n  } else {\n      return true;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n\n@Pipe({\n  name: 'tableFilter03'\n})\nexport class TableFilter03Pipe implements PipeTransform {\n\n  transform(\n    user: User[],\n    search_area: string\n  ): User[] {\n\n    if (!user || !search_area) {\n      return user;\n    }\n    return user.filter(user =>\n      user.Area.toLowerCase().indexOf(search_area.toLowerCase()) !== -1);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MapComponent } from './map/map.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './dashboard/profile/profile.component';\nimport { InventoryComponent } from './dashboard/inventory/inventory.component';\nimport { BothComponent } from './dashboard/both/both.component';\nimport { UsersComponent } from './dashboard/users/users.component';\nimport { LeadsComponent } from './dashboard/leads/leads.component';\nimport { InactiveComponent } from './dashboard/inactive/inactive.component';\nimport { OptionsComponent } from './dashboard/options/options.component';\nimport { AddUsersComponent } from './dashboard/users/add-users/add-users.component';\nimport { AddLeadsComponent } from './dashboard/leads/add-leads/add-leads.component';\nimport { AddInventoriesComponent } from './dashboard/inventory/add-inventories/add-inventories.component';\nimport { RedirectLoginGuard } from './services/guards/redirectlogin.guard';\nimport { IsLoginGuard } from './services/guards/islogin.guard';\n\nconst routes: Routes = [\n  {\n    path: 'map',\n    canActivate: [IsLoginGuard], component: MapComponent\n  },\n  {\n    path: '',\n    canActivate: [RedirectLoginGuard],\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    canActivate: [IsLoginGuard], component: SignupComponent\n  },\n  { path: 'forgetpass-component', component: ForgetpassComponent },\n  { path: 'forgetpassverify-component/:email', component: ForgetpassverifyComponent },\n  { path: 'newpass-component/:email', component: NewpassComponent },\n  { path: 'signupotp-component/:email', canActivate: [IsLoginGuard], component: SignupotpComponent },\n  {\n    path: 'dashboard',\n    canActivate: [IsLoginGuard],\n    component: DashboardComponent\n  },\n  {\n    path: 'navbar',\n    canActivate: [IsLoginGuard], component: DashboardComponent\n  },\n  {\n    path: 'profile/:email',\n    canActivate: [IsLoginGuard], component: ProfileComponent\n  },\n  {\n    path: 'profile',\n    canActivate: [IsLoginGuard],\n     component: ProfileComponent\n  },\n  {\n    path: 'inventory',\n    canActivate: [IsLoginGuard], component: InventoryComponent\n  },\n  {\n    path: 'users',\n    canActivate: [IsLoginGuard], component: UsersComponent\n  },\n  {\n    path: 'both',\n    canActivate: [IsLoginGuard], component: BothComponent\n  },\n  {\n    path: 'leads',\n    canActivate: [IsLoginGuard], component: LeadsComponent\n  },\n  {\n    path: 'inactive',\n    canActivate: [IsLoginGuard], component: InactiveComponent\n  },\n  {\n    path: 'options',\n    canActivate: [IsLoginGuard], component: OptionsComponent\n  },\n  {\n    path: 'add-users',\n    canActivate: [IsLoginGuard], component: AddUsersComponent\n  },\n  {\n    path: 'add-leads',\n    canActivate: [IsLoginGuard], component: AddLeadsComponent\n  },\n  {\n    path: 'add-inventories',\n    canActivate: [IsLoginGuard], component: AddInventoriesComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  mobileView: boolean;\n  username: string;\n  email: string;\n  errorMessage: any;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router,\n    private route: ActivatedRoute,\n    private toastr: ToastrService) {\n  }\n\n  ngOnInit(): void {\n    this.initialize();\n  }\n  initialize() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n    });\n  }\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log('Subscribed Data: ', data);\n      const msg = data.message;\n      const token = data.token;\n      const email = this.loginForm.value.email;\n      this.toastr.success(msg, 'Success', {\n        timeOut: 5000\n      });\n      this.authService.setToken(token);\n      this.router.navigate(['profile', email]);\n\n    },\n      (error) => {\n        console.error(error.error.message);\n        this.errorMessage = error;\n        this.toastr.error(error.error.message, 'Error', {\n          timeOut: 5000\n        });\n      }\n    );\n\n  }\n  // getting input labels values from user end (login.html)\n  get f() { return this.loginForm.controls; }\n}\n","<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n -->\n<div class=\"container\">\n    <div class=\"row center\">\n        <img class=\"wave\" src=\"assets/icons/wave.png\">\n        <div class=\"container\">\n            <div class=\"img\">\n                <img src=\"assets/icons/bg.svg\">\n            </div>\n            <div class=\"login-content text-center\">\n                <div class=\"login\">\n                    <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n                        <img src=\"assets/icons/avatar.svg\">\n                        <h3>Welcome to Agent Dashboard</h3>\n                        <div class=\"input-div one\" style=\"background-color: #fff; padding-left: 5px;\">\n                            <div class=\"i\">\n                                <i class=\"fa fa-user\"></i>\n                            </div>\n                            <div class=\"div\">\n                                <!-- <h5>Username</h5> -->\n                                <input type=\"text\" class=\"input\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" type=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"\">\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback text-left\">\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"input-div pass\" style=\"background-color: #fff;\">\n                            <div class=\"i\">\n                                <i class=\"fa fa-lock\"></i>\n                            </div>\n                            <div class=\"div\">\n                                <!-- <h5>Password</h5> -->\n                                <input type=\"password\" class=\"input\" class=\"input-field\" type=\"password\" formControlName=\"password\" placeholder=\"Password\" required=\"\" class=\"\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback text-left\">\n                                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                       \n                        <input type=\"submit\" class=\"btn\" value=\"Login\">\n                        <hr class=\"mt-4 mb-4\">\n                         <!-- <div class=\"custom-control custom-checkbox mt-3\">\n                             <p>\n                                <a class=\"text-center\" routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                             </p>\n                             <p>\n                                Not Registered? <a class=\"text-center\" routerLink=\"/signup-component\"> <b>Sign up!</b></a>\n                             </p>\n                        </div> -->\n                    </form>\n                </div>\n            </div>\n        </div>\n        <!-- <div class=\"col-5 left\">\n            <div>\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n        <div class=\"col-1 v2 \" *ngIf=\"mobileView ==false\">\n            <div class=\"vl\"></div>\n            Log - in\n            <div class=\"vl\"></div>\n        </div>\n        <div class=\"col-6 right\">\n            <h2 class=\"text-center\">Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" type=\"email\" name=\"email\"\n                            formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" type=\"password\" formControlName=\"password\" placeholder=\"Password\"\n                            required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n                                characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <br>\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\">\n                        Login</button>\n                </div>\n                <div class=\"custom-control custom-checkbox mb-3\">\n                    <a routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                    <br>\n                    Not Registered?\n                    <a routerLink=\"/register\"> <b>Sign up!</b></a>\n                </div>\n            </form>\n        </div> -->\n    </div>\n</div>\n<link href=\"https://fonts.googleapis.com/css?family=Poppins:600&display=swap\" rel=\"stylesheet\">\n<script src=\"https://kit.fontawesome.com/a81368914c.js\"></script>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-forgetpass',\n  templateUrl: './forgetpass.component.html',\n  styleUrls: ['./forgetpass.component.css']\n})\nexport class ForgetpassComponent implements OnInit {\n  forgetPassForm: FormGroup;\n  submitted = false;\n  constructor(\n    private authServ: AuthenticationService,\n    public formBuilder: FormBuilder,\n    public router: Router) { }\n\n  ngOnInit(): void {\n    this.forgetPassForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]]\n    });\n  }\n  get f() { return this.forgetPassForm.controls; }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.forgetPassForm.invalid) {\n      return;\n    }\n    console.log(\"Sending this email: \" + this.forgetPassForm.value.email);\n    const body = {\n      email: this.forgetPassForm.value.email\n    }\n    this.authServ.verifyEmail(body).subscribe(data => {\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      const email = this.forgetPassForm.value.email;\n      if (status) {\n        alert(msg)\n\n        this.router.navigate(['forgetpassverify-component', email]);\n      }\n      else\n      {\n        alert(msg);\n      }\n    });\n\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Forget password\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"forgetPassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"text\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <div class=\"custom-control custom-checkbox mb-3\"> -->\n                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\">Get Code</button>\n                </div>\n                <button class=\"btn btn-info rounded-pill\" routerLink=\"/\">Back</button>\n                <!-- </div> -->\n\n            </form>\n        </div>\n\n    </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms';\n// import { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-users',\n  templateUrl: './add-users.component.html',\n  styleUrls: ['./add-users.component.css']\n})\nexport class AddUsersComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  adduserForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n\n  // tslint:disable-next-line: typedef\n  formDeclare() {\n    this.adduserForm = this.formBuilder.group({\n      location: ['', Validators.required],\n      email: ['', Validators.required],\n      userId: ['', Validators.required],\n      status: ['', Validators.required],\n      fullname: ['', Validators.required],\n      contact: ['', Validators.required],\n      access: ['', Validators.required],\n    });\n  }\n  // convenience getter for easy access to form fields\n  // tslint:disable-next-line: typedef\n  get f() { return this.adduserForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n  }\n  // tslint:disable-next-line: typedef\n  createUser() {\n    this.authService.createUsers(this.adduserForm).subscribe((res) => {\n      console.log('Subscribed data: ', res);\n    });\n  }\n  // tslint:disable-next-line: typedef\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.adduserForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      // console.log('Erroneous')\n      return;\n    }\n    else {\n      console.log('calling the service: ', this.adduserForm.value);\n      this.authService.createUsers(this.adduserForm.value).subscribe((res) => {\n        this.adduserForm.reset();\n        this.toastr.success('User Added', 'Success', {\n          timeOut: 9000\n        });\n        console.log('Subscribed data: ', res);\n      });\n    }\n\n  }\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"adduserForm\">\n                <h2 class=\"register-heading\">Add User</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                <!-- <br><br> -->\n                                User ID\n                                <input type=\"number\" class=\"form-control\" formControlName=\"userId\" id=\"userId\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.userId.errors }\" />\n                                <!-- <label for=\"nme\"><span>Enter ID</span></label> -->\n                                <div *ngIf=\"submitted && f.userId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.userId.errors.required\">Id is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n\n                                Full Name\n                                <input type=\"text\" class=\"form-control\" formControlName=\"fullname\" id=\"fullname\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\n                                <!-- <label for=\"nme\"><span>Enter Full Name</span></label> -->\n                                <div *ngIf=\"submitted && f.fullname.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.fullname.errors.required\">Name is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                <br> Contact #\n                                <input type=\"number\" class=\"form-control\" formControlName=\"contact\" id=\"contact\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.contact.errors }\" />\n                                <div *ngIf=\"submitted && f.contact.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.contact.errors.required\">Contact is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                <br> Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"location\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                <br><br> Email Address\n                                <input type=\"email\" class=\"form-control\" formControlName=\"email\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Right side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <!-- <br> -->\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                Access\n                                <input formControlName=\"access\" class=\"form-control\" type=\"text\" list=\"productName\" [ngClass]=\"{ 'is-invalid': submitted && f.access.errors }\" />\n                                <div *ngIf=\"submitted && f.access.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.access.errors.required\">Access is required</div>\n                                </div>\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                Status\n                                <input formControlName=\"status\" class=\"form-control\" type=\"text\" list=\"productName1\" [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\" />\n                                <div *ngIf=\"submitted && f.status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.status.errors.required\">Status is required</div>\n                                </div>\n                                <datalist id=\"productName1\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button (click)=\"submitForm()\" class=\"btn btn-primary\">Add</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-forgetpassverify',\n  templateUrl: './forgetpassverify.component.html',\n  styleUrls: ['./forgetpassverify.component.css']\n})\nexport class ForgetpassverifyComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  forgetpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.forgetpassForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.forgetpassForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.forgetpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.forgetpassForm.value.code\n    };\n\n    // this.authServ.verifyOTPEmail(user).subscribe(data => {\n    //   console.log(data);\n    // });\n    this.authServ.verifyOTPCode(user).subscribe(data => {\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      if (status) {\n\n        alert(msg)\n        this.router.navigate(['newpass-component', this.email]);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"forgetpassForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/forgetpass-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}