{"version":3,"sources":["./src/app/Pipes/Non-Utilized_Pipes/table-filter.pipe.ts","./src/app/signupotp/signupotp.component.ts","./src/app/signupotp/signupotp.component.html","./src/app/services/Map/mapservice.service.ts","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/header-navigation/navigation.component.ts","./src/app/header-navigation/navigation.component.html","./src/app/services/Authentication/authentication.service.ts","./src/app/dashboard/profile/profile.component.ts","./src/app/dashboard/profile/profile.component.html","./src/app/Pipes/Non-Utilized_Pipes/table-filter04.pipe.ts","./src/environments/environment.ts","./src/app/Pipes/Non-Utilized_Pipes/table-filter02.pipe.ts","./src/app/Pipes/Non-Utilized_Pipes/table-filter06.pipe.ts","./src/app/dashboard/users/users.component.ts","./src/app/dashboard/users/users.component.html","./src/app/dashboard/leads/leads.component.ts","./src/app/dashboard/leads/leads.component.html","./src/app/dashboard/inventory/inventory.component.ts","./src/app/dashboard/inventory/inventory.component.html","./src/app/newpass/newpass.component.ts","./src/app/newpass/newpass.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/guards/islogin.guard.ts","./src/app/dashboard/options/options.component.ts","./src/app/dashboard/options/options.component.html","./src/app/app.module.ts","./src/app/dashboard/leads/add-leads/add-leads.component.ts","./src/app/dashboard/leads/add-leads/add-leads.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/dashboard/inactive/inactive.component.ts","./src/app/dashboard/inactive/inactive.component.html","./src/app/dashboard/header/header.component.ts","./src/app/dashboard/header/header.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/dashboard/inventory/add-inventories/add-inventories.component.ts","./src/app/dashboard/inventory/add-inventories/add-inventories.component.html","./src/app/sidebar/menu-items.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/Pipes/Non-Utilized_Pipes/table-filter05.pipe.ts","./src/app/dashboard/both/both.component.ts","./src/app/dashboard/both/both.component.html","./src/app/services/guards/redirectlogin.guard.ts","./src/app/Pipes/Non-Utilized_Pipes/table-filter03.pipe.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/forgetpass/forgetpass.component.ts","./src/app/forgetpass/forgetpass.component.html","./src/app/dashboard/users/add-users/add-users.component.ts","./src/app/dashboard/users/add-users/add-users.component.html","./src/app/forgetpassverify/forgetpassverify.component.ts","./src/app/forgetpassverify/forgetpassverify.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAoD;;AAO7C,MAAM,eAAe;IACxB,SAAS,CACL,IAAS,EACT,SAAiB;QAGjB,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;YACrB,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CACtB,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3E,CAAC;;8EAZQ,eAAe;gHAAf,eAAe;6FAAf,eAAe;cAJ3B,kDAAI;eAAC;gBACF,IAAI,EAAE,aAAa;aAEtB;;;;;;;;;;;;;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;IC+B5C,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAC1D,sEAAqC;IAAA,6FAAkC;IAAA,4DAAM;;;IAC7E,sEAAqC;IAAA,uGAA4C;IAAA,4DAAM;;;IACvF,sEAAmC;IAAA,+FAAoC;IAAA,4DAAM;;;IAJjF,0EACI;IAAA,sHAAoC;IACpC,sHAAqC;IACrC,sHAAqC;IACrC,sHAAmC;IACvC,4DAAM;;;IAJG,0DAA8B;IAA9B,+FAA8B;IAC9B,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAA6B;IAA7B,8FAA6B;;;ADzBnD,MAAM,kBAAkB;IAK7B,YACU,QAA+B,EAC/B,WAAwB,EACxB,MAAc,EACd,KAAqB;QAHrB,aAAQ,GAAR,QAAQ,CAAuB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAP/B,cAAS,GAAG,KAAK,CAAC;IAOiB,CAAC;IAEpC,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,2BAA2B;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SACpH,CAAC,CAAC;IACL,CAAC;IACD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC9B,OAAO;SACR;QACD,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI;SACvC,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YACrB,IAAI,MAAM,EAAE;gBAEV,KAAK,CAAC,aAAa,GAAG,GAAG,GAAG,eAAe,GAAG,MAAM,CAAC;gBACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/C;iBAAM;gBACL,KAAK,CAAC,GAAG,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;;oFAjDU,kBAAkB;kGAAlB,kBAAkB;QCV/B,qEACA;QAAA,qEACA;QAIA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAEI;QAAA,oEACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,oEAAsB;QACtB,yEACA;QAAA,qEAAsB;QAC1B,4DAAM;QAEN,0EACI;QAAA,sEAAI;QAAA,+EAAmB;QAAA,4DAAK;QAE5B,2EACR;QADgE,+IAAY,cAAU,IAAC;QACvF,2EACY;QAAA,2EACI;QAAA,oEAA+B;QAC/B,wEAGA;QAAA,iHACI;QAKR,4DAAM;QACN,4DAAM;QAEN,2EACX;QAAA,8EACsC;QAAA,kEAAM;QAAA,4DAAS;QACtD,4DAAM;QACM,8EAA8E;QAAA,gEAAI;QAAA,4DAAS;QAO/F,4DAAO;QACX,4DAAM;QACV,4DAAM;QAEV,4DAAM;;QA/BkC,2DAA2B;QAA3B,wFAA2B;QAM3C,0DAAwD;QAAxD,8KAAwD;QACvD,0DAAkC;QAAlC,oGAAkC;;6FDrB9C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA,iDAAiD;AACjD,sDAAsD;AACX;;;AAG3C,+BAA+B;AAIxB,MAAM,iBAAiB;IAC5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAG7B,WAAM,GAAG,gCAAgC,CAAC;IAFnD,CAAC;IAGD,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;;kFAPY,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AAC3B;;;;;;;ICI1B,yEAAqE;IAAA,uDAAwB;IAAA,4DAAM;;;IAA9B,0DAAwB;IAAxB,wFAAwB;;;;;IAC7F,uEAGI;IAFsE,ibAA8C;IAEpH,kEAAyC;IACzC,0EAAwB;IAAA,uDAAwB;IAAA,4DAAO;IAC3D,4DAAI;;;IAL4C,6MAAyE;IAGlH,0DAAiC;IAAjC,kKAAiC;IACZ,0DAAwB;IAAxB,wFAAwB;;;IAPxD,wEAEI;IAAA,iHAAqE;IACrE,8GAGI;IAGR,4DAAK;;;;IAToB,gHAAkD;IACvE,mIAAuE;IAC5C,0DAAyC;IAAzC,sGAAyC;IAE7B,0DAAkC;IAAlC,8FAAkC;;ADFrF,qBAAqB;AAMd,MAAM,gBAAgB;IAa3B,YACU,YAAsB,EACtB,MAAc,EACd,KAAqB;QAFrB,iBAAY,GAAZ,YAAY,CAAU;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAf/B,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;QACV,oBAAe,GAAa,EAAE,CAAC;IAcnC,CAAC;IAbJ,6BAA6B;IAC7B,cAAc,CAAC,OAAe;QAC5B,IAAI,OAAO,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SACzB;IACH,CAAC;IAQD,iBAAiB;IACjB,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,kDAAM,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC;IACzE,CAAC;;gFAtBU,gBAAgB;gGAAhB,gBAAgB;QCX7B,yEACI;QAAA,wEACI;QACA,0GAEI;QAQR,4DAAK;QACT,4DAAM;;QAX8E,0DAA8C;QAA9C,wFAA8C;;6FDQrH,gBAAgB;cAJ5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;;;;;;;AAChE,qBAAqB;AAMd,MAAM,mBAAmB;IAM9B;QAJA,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAElC,eAAU,GAAG,KAAK,CAAC;IAEX,CAAC;;sFANL,mBAAmB;mGAAnB,mBAAmB;QCJhC,wEACE;QAAA,wEACE;QAAA,uEAKE;QAJA,sIAAS,wBAAoB,IAAC;QAI9B,kEAAoC;QACtC,4DAAI;QACN,4DAAK;QAIL,wEACE;QAAA,uEAKE;QAJA,0KAAkC;QAIlC,kEAAyB;QAC3B,4DAAI;QACJ,0EAIE;QAAA,sEAKA;QAAA,uEACE;QADiB,0KAAkC;QACnD,oEAAwB;QAC1B,4DAAI;QACN,4DAAO;QACT,4DAAK;QACP,4DAAK;QAIL,0EACE;QAGA,0EACE;QAAA,yEAQE;QAAA,sEAMF;QAAA,4DAAI;QACJ,2EACE;QAAA,yEACE;QAAA,oEAAmC;QAAC,uEAAU;QAAA,4DAC/C;QACD,yEACE;QAAA,oEAAqC;QAAC,uEAAU;QAAA,4DACjD;QACD,yEACE;QAAA,oEAAoC;QAAC,kEAAK;QAAA,4DAC3C;QACD,sEAAoC;QACpC,yEACE;QAAA,oEAAuC;QAAC,4EAAe;QAAA,4DACxD;QACD,sEAAoC;QACpC,yEACE;QAAA,oEAA2C;QAAC,mEAAM;QAAA,4DACnD;QACD,sEAAoC;QACpC,2EACE;QAAA,yEACG;QAAA,wEAAY;QAAA,4DACd;QACH,4DAAM;QACR,4DAAM;QACR,4DAAK;QAIP,4DAAK;;QAjEC,0DAAyC;QAAzC,0JAAyC;;6FDnBlC,mBAAmB;cAJ/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;aAC3C;sCAGC,aAAa;kBADZ,oDAAM;;;;;;;;;;;;;;AERT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAKb;AAII;AACe;AACb;;;;AAI7B,MAAM,qBAAqB;IAOhC,YAAoB,UAAsB,EAAS,MAAc;QAA7C,eAAU,GAAV,UAAU,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QANjE,YAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,QAAG,GAAG,gCAAgC,CAAC;IAMxD,CAAC;IAED,sEAAsE;IACtE,eAAe,CAAC,IAAS;QACvB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB,EAAE,IAAI,CAAC;aACvC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,2BAA2B;IAC3B,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IACD,2BAA2B;IAC3B,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACD,eAAe;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IACD,2EAA2E;IAC3E,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC;IAC3D,CAAC;IACD,gDAAgD;IAChD,QAAQ;QACN,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,2DAA2D;IAC3D,MAAM;QAEJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;IAC/D,CAAC;IACD,sDAAsD;IACtD,UAAU,CAAC,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAC3B,wCAAwC,EAAE,EAAE,CAC7C,CAAC;IACJ,CAAC;IACD,oDAAoD;IACpD,WAAW,CAAC,IAAS;QACnB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACtC,IAAG,IAAI,YAAY,IAAI,EAAE;YACvB,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC,UAAU;iBACrB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,EAAE,QAAQ,CAAC,CAAC;SAC3C;aAAM;YACL,OAAO,IAAI,CAAC,UAAU;iBACrB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,EAAE,IAAI,CAAC;iBACpC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SACrC;IACH,CAAC;IACD,2DAA2D;IAE3D,QAAQ,CAAC,KAAK;QACZ,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;IACD,eAAe,CAAC,KAAa;QAC3B,IAAI;YACF,sBAAsB;YACtB,OAAO,0DAAU,CAAC,KAAK,CAAC,CAAC;SAC1B;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IACD,QAAQ;QACN,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrC,kCAAkC;QAClC,gBAAgB;IAClB,CAAC;IAED,0CAA0C;IAC1C,eAAe,CAAC,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAC3B,4CAA4C,EAAE,EAAE,CACjD,CAAC;IACJ,CAAC;IAED,gCAAgC;IAChC,SAAS;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,kCAAkC,CAAC,CAAC;IACtE,CAAC;IAED,0BAA0B;IAC1B,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,qCAAqC,CAAC,CAAC;IACzE,CAAC;IAED,2DAA2D;IAC3D,OAAO,CAAC,IAAS;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD,2DAA2D;IAC3D,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,0EAA0E;IAC1E,UAAU,CAAC,EAAE,EAAE,IAAI;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,wCAAwC,EAAE,EAAE,EAC5C,IAAI,CACL,CAAC;IACJ,CAAC;IACD,4BAA4B;IAC5B,eAAe,CAAC,EAAE,EAAE,IAAI;QACtB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,4CAA4C,EAAE,EAAE,EAChD,IAAI,CACL,CAAC;IACJ,CAAC;IACD,yDAAyD;IACzD,QAAQ,CAAC,IAAS;QAChB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IACD,iCAAiC;IACjC,gFAAgF;IAChF,cAAc,CAAC,IAAS;QACtB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB,EAAE,IAAI,CAAC;aAC3C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,iGAAiG;IACjG,aAAa,CAAC,IAAS;QACrB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,sBAAsB,EAAE,IAAI,CAAC;aAC7C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,4EAA4E;IAC5E,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB,EAAE,IAAI,CAAC;aAC3C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,oEAAoE;IAC7D,KAAK,CAAC,IAAS;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,cAAc,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,gDAAgD;IAChD,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACrE,CAAC;IAED,0DAA0D;IAC1D,cAAc;QACZ,OAAO,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,UAAU;QACZ,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACvD,OAAO,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAC3C,CAAC;IACD,2CAA2C;IAC3C,MAAM;QACJ,IAAI,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,IAAI,EAAE;YACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;SACvC;IACH,CAAC;IACD,2CAA2C;IAE3C,2CAA2C;IAC3C,cAAc,CAAC,EAAE;QACf,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAChE,IAAI,CACH,0DAAG,CAAC,CAAC,GAAa,EAAE,EAAE;YACpB,OAAO,GAAG,IAAI,EAAE,CAAC;QACnB,CAAC,CAAC,EACF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IACD,2CAA2C;IAE3C,0CAA0C;IAC1C,WAAW,CAAC,KAAwB;QAClC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,oBAAoB;YACpB,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;SAC3B;aAAM;YACL,oBAAoB;YACpB,GAAG,GAAG,eAAe,KAAK,CAAC,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE,CAAC;SAChE;QACD,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IACD,2CAA2C;IAE3C,YAAY,CAAC,EAAE;QACb,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;;0FAzNU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;ACdiD;;;;;;;;ICsFd,qEACA;;;IAAA,qEACA;;;IAD0B,qJAAwB;;ADnFtF,MAAM,YAAY;IAChB,YAAmB,GAAW,EAAS,IAAU;QAA9B,QAAG,GAAH,GAAG,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;CACtD;AAOM,MAAM,gBAAgB;IAQ3B,YAAmB,MAAc,EAAU,KAAqB,EAAS,WAAkC;QAAxF,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAuB;QAC3G,aAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;IADoF,CAAC;IAGhH,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEK,YAAY;;YAEhB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAChD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC;YACnC,+BAA+B;QACjC,CAAC;KAAA;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC/C,MAAM,IAAI,GAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAEhC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,KAAU,EAAE,EAAE;gBAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,mCAAmC;IACnC,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxF,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IAEL,CAAC;;gFA3CU,gBAAgB;gGAAhB,gBAAgB;;QC2D7B,sEACI;QAAA,wEAAyB;QACzB,yEACI;QAAA,yEACI;QAAA,2EAA+B;QACnC,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,0EACI;QAAA,8GACA;QAAA,8GACA;QAAA,2EACI;QAAA,sEAAI;QAAA,wDAAuB;QAAA,4DAAK;QAChC,4EAAmC;QAAA,wDAAqB;QAAA,4DAAO;QAE/D,yEAAe;QAAA,2IAA+E;QAAA,4DAAI;QACtG,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAEN,0EACI;QAAA,2EACI;QAAA,2EAEI;QAAA,2EACI;QAAA,8EACZ;QADoB,sRAAS,WAAY,IAAC;QAC1C,yEAA2C;QAAA,kEAAM;QAAA,4DAAI;QACrD,4EAAqB;QAAA,qEAAG;QAAA,kEAAM;QAAA,4DAAI;QAAA,4DAAO;QAC3C,4DAAS;QACK,iFAA2E;QAAhC,gJAAU,wBAAoB,IAAC;QAA1E,4DAA2E;QAAA,iEAAI;QAAA,iEACnF;QAAA,4DAAM;QACN,2EACI;QAAA,8EACZ;QADoB,yIAAS,iBAAa,IAAC;QAC3C,yEAAsB;QAAA,kEAAM;QAAA,4DAAI;QAChC,4EAAqB;QAAA,qEAAG;QAAA,gEAAI;QAAA,4DAAI;QAAA,4DAAO;QACzC,4DAAS;QACC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,0EAA0E;QAAA,qEAAG;QAAA,oEAAQ;QAAA,4DAAI;QAAC,wDAA4C;QAAA,4DAAK;QAC3I,0EAA0E;QAAA,qEAAG;QAAA,sEAAU;QAAA,4DAAI;QAAC,wDAA2C;QAAA,4DAAK;QAChJ,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAvDmC,2DAAqB;QAArB,mFAAqB;QACrB,0DAAoB;QAApB,kFAAoB;QAEjB,0DAAuB;QAAvB,sHAAuB;QACQ,0DAAqB;QAArB,oHAAqB;QAsCkC,2DAA4C;QAA5C,qJAA4C;QAC1C,0DAA2C;QAA3C,oJAA2C;;6FDpHlK,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,iBAAiB;IAE5B,SAAS;IACP,iBAAiB;IACjB,IAAS,EACT,WAAmB;QAGnB,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;YACzB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CACxB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE1E,CAAC;;kFAdU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE;QACN,WAAW,EAAE,mGAAmG;KACjH;IACD,GAAG,EAAE,+CAA+C;CACrD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACnBnE;AAAA;AAAA;AAAoD;;AAK7C,MAAM,iBAAiB;IAE5B,SAAS;IACP,gBAAgB;IAChB,IAAS,EACT,eAAuB;QAGvB,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,EAAE;YAC7B,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CACxB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE/E,CAAC;;kFAdU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,iBAAiB;IAE5B,SAAS;IACP,iBAAiB;IACjB,IAAS,EACT,aAAqB;QAGrB,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3B,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CACxB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE7E,CAAC;;kFAdU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;IC4ElB,uEAA4B;IAAA,uDAA+B;;IAAA,4DAAO;;;IAAtC,0DAA+B;IAA/B,kJAA+B;;;IAC3D,uEAA6B;IAAA,uDAA2B;;IAAA,4DAAO;;;IAAlC,0DAA2B;IAA3B,8IAA2B;;;IAMR,2EAAkE;IAAA,uDAAqB;IAAA,4DAAO;;;IAA5B,0DAAqB;IAArB,2FAAqB;;;;IAX/I,qEACI;IACA,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEACI;IAAA,mHAA4B;IAC5B,mHAA6B;IACjC,4DAAK;IACL,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAG5B,qEACI;IAAA,uDAAmB;IAAA,wEAAM;IAAA,wEAAY;IAAA,4DAAO;IAAA,iEAAI;IAAA,qHAAkE;IACtH,4DAAK;IACL,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IACzB,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IACzB,sEAAI;IAAA,wDAAsC;;IAAA,4DAAK;IAE/C,sEAAI;IAAA,yEAAuD;IAA5B,kVAAuB;IAAC,4DAAI;IAAA,yEAAyC;IAAtC,oVAAuB;IAAe,gEAAI;IAAA,4DAAI;IAExG,yEAA+G;IAAnF,0VAA6B;IAAkD,4DAAI;IAEnH,4DAAK;IACL,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,0EAA+C;IAAA,+EAAmB;IAAA,4DAAK;IACvE,8EAClC;IAAA,4EAAyB;IAAA,kEAAO;IAAA,4DAAO;IACzC,4DAAS;IACuB,4DAAM;IACN,2EACI;IAAA,iGACJ;IAAA,4DAAM;IACN,2EACI;IAAA,8EAClC;IAAA,mEACF;IAAA,4DAAS;IAC2B,8EAClC;IADoG,sTAAsB;IAC1H,oEACF;IAAA,4DAAS;IACuB,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IA3CG,0DAAe;IAAf,qGAAe;IAET,0DAAqB;IAArB,kFAAqB;IACrB,0DAAsB;IAAtB,mFAAsB;IAE5B,0DAAmB;IAAnB,0FAAmB;IAInB,0DAAmB;IAAnB,0HAAmB;IAA6D,0DAAiC;IAAjC,qFAAiC;IAEjH,0DAAgB;IAAhB,8EAAgB;IAChB,0DAAgB;IAAhB,wGAAgB;IAChB,0DAAsC;IAAtC,yLAAsC;;AD5E/D,MAAM,cAAc;IAKzB;IACE,oCAAoC;IAC5B,WAAkC,EAClC,MAAc,EACd,MAAqB;QAFrB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;IAC5B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,OAAO,CAAC,IAAS;QACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,mCAAmC;IACnC,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,EAAO;QACf,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAEC,0CAA0C;IAC1C,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE;oBACzC,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,iDAAiD;gBACjD,gFAAgF;aAC/E;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;;4EAtDQ,cAAc;8FAAd,cAAc;QCX3B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAyB;QAC7B,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QACA,2EAA+B;QACnC,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,gEACA;QAAA,sEAAI;QAAA,qEAAG;QAAA,yFAA6B;QAAA,4DAAI;QAAA,4DAAK;QAC7C,iEAEA;QAAA,0EACI;QAAA,0EACI;QAAA,6EAAoE;QAAA,mEAAO;QAAA,4DAAS;QACxF,4DAAM;QACN,0EACI;QAAA,0EAEI;QAAA,4EAEJ;QAF8C,2LAA4B;QAAtE,4DAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEAAI;QAAA,iEAAI;QAAA,iEACR;QACA,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,qEAAS;QAAA,4DAAK;QAC9B,0EAAgB;QAAA,qEAAS;QAAA,4DAAK;QAC9B,0EAAgB;QAAA,6EAAiB;QAAA,4DAAK;QACtC,0EAAgB;QAAA,yEAAa;QAAA,4DAAK;QAClC,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,0EAAgB;QAAA,sEAAU;QAAA,4DAAK;QAEnC,4DAAK;QACT,4DAAQ;QAER,yEACI;QAyBA,6GACI;;QA6CR,4DAAQ;QACZ,4DAAQ;QAEZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QApGgE,2DAA4B;QAA5B,uFAA4B;QAgDtE,2DAAkD;QAAlD,mKAAkD;;6FD7DjE,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;IC6H6B,2EAAkE;IAAA,uDAAqB;IAAA,4DAAO;;;IAA5B,0DAAqB;IAArB,2FAAqB;;;;IAflJ,qEACI;IACA,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IAEvB,qEAAI;IAAA,oEAAG;IAAA,kEAAO;IAAA,4DAAI;IAAA,uDAAuB;IAAA,gEAAK;IAAA,oEAAG;IAAA,oEAAS;IAAA,4DAAI;IAAA,wDAAuB;IAAA,4DAAK;IAE1F,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAc;IAAA,4DAAK;IAIvB,sEACI;IAAA,wDAAsB;IAAA,wEAAM;IAAA,wEAAY;IAAA,4DAAO;IAAA,iEAAI;IAAA,qHAAkE;IACzH,4DAAK;IAKL,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAMhC,sEAAI;IAAA,wDAAsC;;IAAA,4DAAK;IAC/C,sEAAI;IAAA,yEAAuD;IAA5B,kVAAuB;IAAC,4DAAI;IAAA,yEAAyC;IAAtC,kVAAuB;IAAe,gEAAI;IAAA,4DAAI;IAExG,yEAA+G;IAAnF,wVAA6B;IAAkD,4DAAI;IAEnH,4DAAK;IACL,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,0EAA+C;IAAA,+EAAmB;IAAA,4DAAK;IACvE,8EAC9B;IAAA,4EAAyB;IAAA,kEAAO;IAAA,4DAAO;IACzC,4DAAS;IACmB,4DAAM;IACN,2EACI;IAAA,iGACJ;IAAA,4DAAM;IACN,2EACI;IAAA,8EAC9B;IAAA,mEACF;IAAA,4DAAS;IACuB,8EAC9B;IADgG,oTAAsB;IACtH,oEACF;IAAA,4DAAS;IACmB,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IAtDG,0DAAc;IAAd,4EAAc;IAEA,0DAAuB;IAAvB,8FAAuB;IAAqB,0DAAuB;IAAvB,sFAAuB;IAEjF,0DAAsB;IAAtB,oFAAsB;IACtB,0DAA2B;IAA3B,yFAA2B;IAC3B,0DAAwB;IAAxB,sFAAwB;IACxB,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAc;IAAd,6EAAc;IAKd,0DAAsB;IAAtB,gIAAsB;IAA6D,0DAAiC;IAAjC,qFAAiC;IAMpH,0DAAuB;IAAvB,qFAAuB;IAMvB,0DAAsC;IAAtC,iKAAsC;;AD/H3D,MAAM,cAAc;IAQzB,YACU,MAAc,EACd,WAAkC,EAClC,MAAqB;QAFrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAe;QAP/B,kBAAa,GAAG;oDACkC,CAAC;IAO7C,CAAC;IASP,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,OAAO,CAAC,IAAS;QACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IAC9C,CAAC;IAED,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEH,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAEC,0CAA0C;IAC5C,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE;oBACzC,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,IAAI,CAAC,YAAY,EAAE,CAAC;gBACxB,iDAAiD;gBACjD,gFAAgF;aAC/E;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;;4EAtEU,cAAc;8FAAd,cAAc;QCV3B,yEACI;QAAA,yEACI;QAAA,wEAAyB;QAC7B,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QACA,2EAA+B;QACnC,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,oEAAG;QAAA,oGAAwC;QAAA,4DAAI;QAAA,4DAAK;QACxD,iEACA;QAAA,uEACI;QAAA,6EAA4E;QAA/B,uIAAS,iBAAa,MAAM,CAAC,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAChG,4DAAM;QACN,0EACI;QAEA,0EACI;QAAA,0EACI;QAAA,mEAAiC;QACrC,4DAAM;QAEN,2EACI;QAAA,6EACJ;QADyD,2LAA4B;QAAjF,4DACJ;QAAA,4DAAM;QAIN,8EAAsE;QAAA,iEAAK;QAAA,4DAAS;QACpF,8EAA6C;QAAA,iEAAK;QAAA,4DAAS;QAAA,qFAC/D;QAAA,4DAAM;QACV,4DAAM;QACN,iEAAI;QAAA,iEAAI;QAAA,iEACR;QACA,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,0EAAgB;QAAA,8DAAE;QAAA,4DAAK;QACvB,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,sEAAU;QAAA,4DAAK;QAC/B,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAM3B,0EAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,sEAAU;QAAA,4DAAK;QACnC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAkDA,6GACI;;QAwDR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAhJuE,2DAA4B;QAA5B,uFAA4B;QAmFjF,2DAAkD;QAAlD,mKAAkD;;6FDpG7D,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;ICsG6B,2EAAkE;IAAA,uDAAqB;IAAA,4DAAO;;;IAA5B,0DAAqB;IAArB,2FAAqB;;;;IAVlJ,qEACI;IACA,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAO/B,qEACI;IAAA,uDAAsB;IAAA,uEAAM;IAAA,uEAAY;IAAA,4DAAO;IAAA,gEAAI;IAAA,uHAAkE;IACzH,4DAAK;IAEL,qEAAI;IAAA,wDAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,qEAAG;IAAA,mEAAO;IAAA,4DAAI;IAAA,wDAAuB;IAAA,iEAAK;IAAA,qEAAG;IAAA,qEAAS;IAAA,4DAAI;IAAA,wDAAuB;IAAA,4DAAK;IAC1F,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,yEAAuD;IAA5B,sVAAuB;IAAC,4DAAI;IAAA,yEAAyC;IAAtC,sVAAuB;IAAe,gEAAI;IAAA,4DAAI;IAExG,yEAA+G;IAAnF,4VAA6B;IAAkD,4DAAI;IAEnH,4DAAK;IACL,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,0EAA+C;IAAA,+EAAmB;IAAA,4DAAK;IACvE,8EAC1B;IAAA,4EAAyB;IAAA,kEAAO;IAAA,4DAAO;IACzC,4DAAS;IACe,4DAAM;IACN,2EACI;IAAA,iGACJ;IAAA,4DAAM;IACN,2EACI;IAAA,8EAC1B;IAAA,mEACF;IAAA,4DAAS;IACmB,8EAC1B;IAD4F,6TAA2B;IACvH,oEACF;IAAA,4DAAS;IACe,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IA9CG,0DAAsB;IAAtB,oFAAsB;IAQtB,0DAAsB;IAAtB,gIAAsB;IAA6D,0DAAiC;IAAjC,qFAAiC;IAGpH,0DAAe;IAAf,6EAAe;IACf,0DAAsB;IAAtB,oFAAsB;IACtB,0DAAuB;IAAvB,qFAAuB;IACvB,0DAA2B;IAA3B,yFAA2B;IAC3B,0DAAsB;IAAtB,oFAAsB;IACR,0DAAuB;IAAvB,8FAAuB;IAAqB,0DAAuB;IAAvB,sFAAuB;IACjF,0DAAsB;IAAtB,oFAAsB;;ADtG3C,MAAM,kBAAkB;IAG7B,YACU,MAAc,EACd,WAAkC,EAClC,MAAqB;QAFrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAe;IAC5B,CAAC;IAQJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACvC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC;IACD,mBAAmB;IACnB,4CAA4C;IAC5C,mBAAmB;IACnB,uCAAuC;IACvC,aAAa;IACb,4DAA4D;IAC5D,2CAA2C;IAC3C,UAAU;IACV,qCAAqC;IACrC,qBAAqB;IACrB,qCAAqC;IACrC,MAAM;IACN,IAAI;IAEJ,UAAU;IACV,0CAA0C;IAC1C,oCAAoC;IACpC,uBAAuB;IACvB,4CAA4C;IAE5C,6DAA6D;IAC7D,yBAAyB;IACzB,+BAA+B;IAC/B,uDAAuD;IACvD,0BAA0B;IAC1B,cAAc;IACd,qDAAqD;IACrD,2EAA2E;IAC3E,QAAQ;IAER,QAAQ;IACR,IAAI;IACJ,SAAS,CAAC,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,0CAA0C;IAC1C,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE;oBAC3C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,iDAAiD;gBACjD,gFAAgF;aACjF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,OAAO,CAAC,IAAS;QACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IAChD,CAAC;;oFA5FU,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEACI;QAAA,yEACI;QAAA,wEAAyB;QAC7B,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QACA,2EAA+B;QACnC,4DAAM;QAGN,yEACI;QAAA,yEAAuB;QAAA,gEACnB;QAAA,qEAAI;QAAA,qEAAG;QAAA,wGAA4C;QAAA,4DAAI;QAAA,4DAAK;QAC5D,iEACA;QAAA,uEACI;QAAA,6EAAiF;QAApC,2IAAS,iBAAa,WAAW,CAAC,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAUrG,4DAAM;QAEN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,mEAAiC;QACrC,4DAAM;QAEN,2EACI;QAAA,6EACJ;QADyD,+LAA4B;QAAjF,4DACJ;QAAA,4DAAM;QAEN,8EAAsE;QAAA,iEAAK;QAAA,4DAAS;QACpF,8EAA6C;QAAA,iEAAK;QAAA,4DAAS;QAAA,qFAC/D;QAAA,4DAAM;QACV,4DAAM;QACN,iEAAI;QAAA,iEAAI;QAAA,iEACR;QAEA,6EACI;QAAA,yEACI;QAAA,0EAAgB;QAAA,8DAAE;QAAA,4DAAK;QACvB,0EAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,0EAAc;QAAA,4DAAK;QACnC,0EAAgB;QAAA,0EAAc;QAAA,4DAAK;QACnC,0EAAgB;QAAA,sEAAU;QAAA,4DAAK;QACnC,4DAAQ;QAER,yEACI;QA8BA,iHACI;;QAgDR,4DAAQ;QAEZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA7GuE,2DAA4B;QAA5B,uFAA4B;QAuDjF,2DAAkD;QAAlD,mKAAkD;;6FDnF7D,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;IC4BxC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEAAyC;IAAA,kGACzC;IAAA,4DAAM;;;IAHV,0EACI;IAAA,oHAAwC;IACxC,oHAAyC;IAE7C,4DAAM;;;IAHG,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAmC;IAAnC,oGAAmC;;;ADpB7D,MAAM,gBAAgB;IAK3B,YACU,QAA+B,EAC/B,WAAwB,EACxB,MAAc,EACd,KAAqB;QAHrB,aAAQ,GAAR,QAAQ,CAAuB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAP/B,cAAS,GAAG,KAAK,CAAC;IAOiB,CAAC;IAEpC,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,oCAAoC;IACpC,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;IACL,CAAC;IACD,oCAAoC;IACpC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE7C,oCAAoC;IACpC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,OAAO;SACR;QACD,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ;SAC7C,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/C,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,IAAI,MAAM,EAAE;gBACV,KAAK,CAAC,GAAG,CAAC,CAAC;gBACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;iBAAM;gBACL,KAAK,CAAC,GAAG,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gFAlDU,gBAAgB;gGAAhB,gBAAgB;QCV7B,qEACA;QAAA,qEACA;QAIA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAEI;QAAA,oEACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,oEAAsB;QACtB,4EACA;QAAA,qEAAsB;QAC1B,4DAAM;QAEN,0EACI;QAAA,sEAAI;QAAA,+EAAmB;QAAA,4DAAK;QAC5B,2EACI;QADkD,6IAAY,cAAU,IAAC;QACzE,2EACI;QAAA,2EACI;QAAA,oEAA+B;QAC/B,wEACA;QAAA,+GACI;QAIR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,oEAA+B;QAC/B,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,8EAA2D;QAAA,kEAAM;QAAA,4DAAS;QAC9E,4DAAM;QACN,8EAA4D;QAAA,iEAAK;QAAA,4DAAS;QAG9E,4DAAO;QACX,4DAAM;QAEV,4DAAM;QACV,4DAAM;;QA5BkC,2DAAyB;QAAzB,sFAAyB;QAIoL,0DAA4D;QAA5D,kLAA4D;QACpR,0DAAsC;QAAtC,wGAAsC;;6FDlBtD,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;;;;;;;;;;AETiD;;;;;;;;IC2JlC,wEACI;IADgC,6SAAkB;IAClD,mEAA0B;IAC1B,2EAA0D;IAAA,kEAAO;IAAA,4DAAO;IAC5E,4DAAI;;ADpJb,MAAM,kBAAkB;IAG7B,YACS,WAAkC,EAClC,MAAc,EACb,MAAqB;QAFtB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEpC,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACC,oCAAoC;IAChC,YAAY;;YAEhB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAChD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC;YACnC,+BAA+B;QACjC,CAAC;KAAA;IAED,oCAAoC;IACpC,OAAO;QAEL,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC1C,sBAAsB;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,oCAAoC;IACpC,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE;YAC3C,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;;oFAnCU,kBAAkB;kGAAlB,kBAAkB;QCV/B,qEACA;QAIA,uEAGI;QAAA,qEACA;QAAA,wEAAO;QAAA,2EAAgB;QAAA,4DAAQ;QAC/B,qEACA;QAAA,qEAGJ;QAAA,4DAAO;QAqCP,yEACI;QAAA,uEACI;QAAA,kEAA2B;QAC/B,4DAAI;QACJ,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,yEAAkB;QAAA,2EAAe;QAAA,4DAAI;QACzC,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,sEACJ;QAAA,4DAAM;QACN,2EACI;QAAA,4EAAwB;QAAA,wDAClC;QAAA,4DAAO;QACG,4EAAwB;QAAA,wDAAqB;QAAA,4DAAO;QACpD,4EACR;QAAA,oEAA4B;QAC5B,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACX,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,uEACI;QAAA,2EACI;QAAA,wEACA;QAAA,2EACI;QAAA,4EACZ;QAAA,oEAA+C;QACjD,4DAAO;QACG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,sEACI;QAAA,0EACI;QAAA,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QAC1B,4DAAK;QACL,0EACI;QAAA,yEACI;QAAA,oEAA0B;QAC1B,wEAAM;QAAA,wEAAY;QAAA,4DAAO;QAC7B,4DAAI;QAER,4DAAK;QAEL,0EACI;QAAA,yEACI;QAAA,oEAA2B;QAC3B,wEAAO;QAAA,kEAAK;QAAA,4DAAO;QACvB,4DAAI;QAER,4DAAK;QACL,0EACI;QAAA,yEACI;QAAA,oEAA+B;QAC/B,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QAC1B,4DAAI;QAER,4DAAK;QACL,sEACI;QAAA,yEACI;QAAA,oEAAmC;QACnC,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAI;QAER,4DAAK;QAEL,sEACI;QAAA,yEACI;QAAA,oEAAmC;QACnC,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAI;QAER,4DAAK;QAEL,0EACI;QAAA,yEACI;QAAA,oEAAoC;QACpC,wEAAM;QAAA,oEAAQ;QAAA,4DAAO;QACzB,4DAAI;QAER,4DAAK;QACL,0EACI;QAAA,yEACI;QAAA,oEAA0B;QAC1B,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACjB,4EAA0C;QAAA,+DAAG;QAAA,4DAAO;QACxD,4DAAI;QAER,4DAAK;QAQT,4DAAK;QACT,4DAAM;QACN,2EACI;QAAA,6GACI;QAGJ,yEACI;QAAA,oEAA0B;QAC1B,4EAA0D;QAAA,6DAAC;QAAA,4DAAO;QACtE,4DAAI;QACJ,yEACI;QAAA,oEAAyB;QACzB,uEAAiC;QACrC,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAzGsC,2DAClC;QADkC,gIAClC;QACkC,0DAAqB;QAArB,oHAAqB;QAwF/B,2DAAiB;QAAjB,+EAAiB;;6FDjJtC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAA6D;AACnB;AAGuC;;;;;AAO1E,MAAM,YAAY;IAQvB,YACS,WAAwB,EAAE,sCAAsC;IAChE,WAAkC,EAAE,2DAA2D;IAC/F,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QAVvB,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,qCAAqC,CAAC;QAE9C,2BAA2B;QAC3B,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAMlB,CAAC;IAED,oDAAoD;IACpD,QAAQ;QAEN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,qCAAqC;IAEvC,CAAC;IACD,oCAAoC;IACpC,OAAO;QAEL,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC1C,sBAAsB;QACtB,OAAO,KAAK,CAAC;QACb,eAAe;QACf,iBAAiB;QACjB,IAAI;QACJ,SAAS;QACT,kBAAkB;QAClB,IAAI;IACN,CAAC;IACD,oCAAoC;IACpC,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,oCAAoC;IACpC,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;YACrH,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;IAEL,CAAC;IACD,oCAAoC;IACpC,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IACD,oCAAoC;IACpC,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC1B,OAAO;SACR;QACD,yDAAyD;QACzD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE5D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,MAAM,GAAG,GAAW,IAAI,CAAC,GAAG,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC;YAC/B,IAAI,MAAM,EAAE;aAEX;iBAAM;gBACL,KAAK,CAAC,4BAA4B,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yDAAyD;IACzD,oCAAoC;IACpC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;wEA3EhC,YAAY;4FAAZ,YAAY;QCwHzB,2EAA+B;;6FDxHlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;;;;;;;;AEP0C;;;;AAKpC,MAAM,YAAY;IACvB,YAAoB,MAAc,EAAU,WAAkC;QAA1D,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAuB;IAAG,CAAC;IAE5E,WAAW;;YACf,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAChD,IAAI,CAAC,KAAK,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAChC;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;QACH,CAAC;KAAA;;wEAVU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACiD;;;;;;AAW5F,MAAM,gBAAgB;IAM3B,YAAoB,WAAwB,EAClC,WAAkC,EAClC,MAAc,EACd,MAAqB;QAHX,gBAAW,GAAX,WAAW,CAAa;QAClC,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAR/B,cAAS,GAAG,KAAK,CAAC;IAQiB,CAAC;IACpC,WAAW;QACT,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IACD,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC/C,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAI,+BAA+B;QACzD,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,OAAO,EAAE;gBACzC,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACxB,OAAO;SACR;QACD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE;YAC3C,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;;gFAzCU,gBAAgB;gGAAhB,gBAAgB;QCZ7B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACA;QAAA,qEAAI;QAAA,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;QAAA,4DAAK;QACrC,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,wEAA6B;QAAA,kEAAM;QAAA,4DAAK;QACxC,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,0EACA;QAAA,wEAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,0EACA;QAAA,wEAEA;QAAA,gFACI;QAAA,8EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,iEAAI;QAAA,iEACJ;QAAA,2EACI;QAAA,8EAA8C;QAAA,oEAAQ;QAAA,4DAAS;QACnE,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,iEAAI;QAAA,iEACJ;QAAA,2EACI;QAAA,8EAA8C;QAAA,gEAAI;QAAA,4DAAS;QAAA,2FAC3D;QAAA,8EAA6C;QAAA,kEAAM;QAAA,4DAAS;QAChE,4DAAM;QACV,4DAAM;QACV,4DAAM;QAIN,yEAA6B;QAAA,qEAAS;QAAA,4DAAK;QAC3C,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,0EACI;QAAA,2EAAyB;QAAA,iEACrB;QAAA,yEACA;QAAA,wEAEA;QAAA,gFACI;QAAA,8EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,0EACI;QAAA,2EAAyB;QAAA,iEACrB;QAAA,yEACA;QAAA,wEAEA;QAAA,gFACI;QAAA,8EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,iEACA;QAAA,0EACI;QAAA,2EACI;QAAA,gFACA;QAAA,wEAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,iEACA;QAAA,6EACA;QAAA,wEACA;QAAA,gFACI;QAAA,8EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,iEACA;QAAA,0EACI;QAAA,2EACI;QAAA,qFACA;QAAA,yEACA;QAAA,iFACI;QAAA,+EAAoB;QAAA,gEAAG;QAAA,4DAAS;QAChC,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,kEAAI;QAAA,kEACJ;QAAA,4EACI;QAAA,+EAA8C;QAAA,yEAAY;QAAA,4DAAS;QAEvE,4DAAM;QACN,4EACI;QAAA,+EAA8C;QAAA,iEAAI;QAAA,4DAAS;QAAA,4FAC3D;QAAA,+EAA6C;QAAA,mEAAM;QAAA,4DAAS;QAChE,4DAAM;QACV,4DAAM;QACV,4DAAM;QAIN,0EAA6B;QAAA,2EAAc;QAAA,4DAAK;QAChD,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,2EACA;QAAA,yEAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,0EACA;QAAA,yEAEA;QAAA,iFACI;QAAA,+EAAoB;QAAA,gEAAG;QAAA,4DAAS;QAChC,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACN,kEAAI;QAAA,kEACR;QAAA,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,+EAA8C;QAAA,8EAAiB;QAAA,4DAAS;QAE5E,4DAAM;QACN,4EACI;QAAA,+EAA8C;QAAA,iEAAI;QAAA,4DAAS;QAAA,4FAC3D;QAAA,+EAA6C;QAAA,mEAAM;QAAA,4DAAS;QAEhE,4DAAM;QACV,4DAAM;QACV,4DAAM;QAIN,0EAA6B;QAAA,yEAAY;QAAA,4DAAK;QAC9C,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,6EACA;QAAA,yEAEJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,2EACA;QAAA,yEAEA;QAAA,iFACI;QAAA,+EAAoB;QAAA,gEAAG;QAAA,4DAAS;QAChC,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4EAAiC;QAAA,kEAAI;QAAA,kEACjC;QAAA,4EACI;QAAA,+EAA8C;QAAA,4EAAe;QAAA,4DAAS;QAE1E,4DAAM;QACN,4EACI;QAAA,+EAA8C;QAAA,iEAAI;QAAA,4DAAS;QAAA,4FAC3D;QAAA,+EAA6C;QAAA,mEAAM;QAAA,4DAAS;QAEhE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;QArNkC,0DAA2B;QAA3B,wFAA2B;;6FDKtD,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAA0D;AACG;AACP;AACK;AAC3D,0DAA0D;AAC1D,oEAAoE;AACpE,yDAAyD;AACzD,oDAAoD;AACI;AACE;AACjB;AACe;AACxD,6DAA6D;AACL;AACT;AACI;AAE4B;AACnB;AACM;AACM;AACkB;AAC3B;AACN;AACY;AACrE,8DAA8D;AAC9D,yCAAyC;AACY;AACT;AACyB;AACI;AACM;AACZ;AACA;AACY;AACvB;AAC2B;AACA;AACA;AACA;AACA;AACP;AACH;AACW;AAC1C;AAC0C;AACsB;AAC9C;AACU;AACf;AACQ;AAE/D,kEAAkE;AAClE,oEAAoE;AACpE,2EAA2E;AACI;AACf;;;AAEhE,8EAA8E;AAC9E,2BAA2B;AAC3B,mBAAmB;AACnB,4BAA4B;AAC5B,2BAA2B;AAC3B,QAAQ;AAIR,yEAAyE;AACzE,oDAAoD;AACpD,2EAAkB,CAAC,kEAAE,CAAC,CAAC;AA+DhB,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBART;IACT,IAAI;IACJ,uCAAuC;IACvC,+CAA+C;IAC/C,IAAI;KACL,YAxBQ;YACP,qEAAgB;YAChB,gCAAgC;YAChC,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,6FAAuB;YACvB,wDAAY,CAAC,OAAO,EAAE;YACtB,mEAAmB;YACnB,0EAAgB;YAChB,wEAAe;YACf,2DAAW;YACX,qEAAS;YACT,0BAA0B;YAC1B,sEAAmB;YACnB,mEAAc;YACd,qEAAS;YACT,iBAAiB;SAClB;mIASU,SAAS,mBA3DlB,2DAAY;QACZ,+DAAY;QACZ,sEAAc;QACd,yEAAe;QACf,qFAAmB;QACnB,uGAAyB;QACzB,4EAAgB;QAChB,kFAAkB;QAClB,kFAAkB;QAClB,sFAAgB;QAChB,4FAAkB;QAClB,gFAAc;QACd,gFAAc;QACd,cAAc;QACd,qBAAqB;QACrB,4FAAe;QACf,gGAAiB;QACjB,gGAAiB;QACjB,gGAAiB;QACjB,gGAAiB;QACjB,gGAAiB;QACjB,yFAAiB;QACjB,sFAAgB;QAChB,iGAAiB;QACjB,iGAAiB;QACjB,uHAAuB;QACvB,yEAAe;QACf,mFAAe;QACf,4EAAgB;QAChB,4FAAmB;QACnB,6EAAa,aAGb,qEAAgB;QAChB,gCAAgC;QAChC,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,6FAAuB,4DACC,qBAAqB;QAC7C,mEAAmB;QACnB,0EAAgB;QAChB,wEAAe;QACf,2DAAW;QACX,qEAAS;QACT,0BAA0B;QAC1B,sEAAmB;QACnB,mEAAc;QACd,qEAAS;QACT,iBAAiB;;6FAUR,SAAS;cA7DrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,+DAAY;oBACZ,sEAAc;oBACd,yEAAe;oBACf,qFAAmB;oBACnB,uGAAyB;oBACzB,4EAAgB;oBAChB,kFAAkB;oBAClB,kFAAkB;oBAClB,sFAAgB;oBAChB,4FAAkB;oBAClB,gFAAc;oBACd,gFAAc;oBACd,cAAc;oBACd,qBAAqB;oBACrB,4FAAe;oBACf,gGAAiB;oBACjB,gGAAiB;oBACjB,gGAAiB;oBACjB,gGAAiB;oBACjB,gGAAiB;oBACjB,yFAAiB;oBACjB,sFAAgB;oBAChB,iGAAiB;oBACjB,iGAAiB;oBACjB,uHAAuB;oBACvB,yEAAe;oBACf,mFAAe;oBACf,4EAAgB;oBAChB,4FAAmB;oBACnB,6EAAa;iBACd;gBACD,OAAO,EAAE;oBACP,qEAAgB;oBAChB,gCAAgC;oBAChC,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,6FAAuB;oBACvB,wDAAY,CAAC,OAAO,EAAE;oBACtB,mEAAmB;oBACnB,0EAAgB;oBAChB,wEAAe;oBACf,2DAAW;oBACX,qEAAS;oBACT,0BAA0B;oBAC1B,sEAAmB;oBACnB,mEAAc;oBACd,qEAAS;oBACT,iBAAiB;iBAClB;gBACD,SAAS,EAAE;gBACT,IAAI;gBACJ,uCAAuC;gBACvC,+CAA+C;gBAC/C,IAAI;iBACL;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACnID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkD;;;;;;;;;ICgBhE,sEAAkC;IAAA,yEAAc;IAAA,4DAAM;;;IAD1D,0EACI;IAAA,qHAAkC;IACtC,4DAAM;;;IADG,0DAA4B;IAA5B,6FAA4B;;;IAYjC,sEAAsC;IAAA,6EAAkB;IAAA,4DAAM;;;IADlE,0EACI;IAAA,qHAAsC;IAC1C,4DAAM;;;IADG,0DAAgC;IAAhC,iGAAgC;;;IAarC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,qHAAoC;IACxC,4DAAM;;;IADG,0DAA8B;IAA9B,+FAA8B;;;IAkBnC,sEAAuC;IAAA,8EAAmB;IAAA,4DAAM;;;IADpE,0EACI;IAAA,qHAAuC;IAC3C,4DAAM;;;IADG,0DAAiC;IAAjC,kGAAiC;;;IAkBtC,sEAAyC;IAAA,oFAAyB;IAAA,4DAAM;;;IAD5E,0EACI;IAAA,qHAAyC;IAC7C,4DAAM;;;IADG,0DAAmC;IAAnC,oGAAmC;;;IAkBxC,sEAAuC;IAAA,sFAA2B;IAAA,4DAAM;;;IAD5E,0EACI;IAAA,qHAAuC;IAC3C,4DAAM;;;IADG,0DAAiC;IAAjC,kGAAiC;;;IAatC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,qHAAoC;IACxC,4DAAM;;;IADG,0DAA8B;IAA9B,+FAA8B;;;IAanC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADtE,0EACI;IAAA,qHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IAavC,sEAAsC;IAAA,6EAAkB;IAAA,4DAAM;;;IADlE,0EACI;IAAA,qHAAsC;IAC1C,4DAAM;;;IADG,0DAAgC;IAAhC,iGAAgC;;;IAarC,sEAAwC;IAAA,mFAAwB;IAAA,4DAAM;;;IAD1E,0EACI;IAAA,sHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IAavC,sEAAuC;IAAA,8EAAmB;IAAA,4DAAM;;;IADpE,0EACI;IAAA,sHAAuC;IAC3C,4DAAM;;;IADG,0DAAiC;IAAjC,mGAAiC;;;IActC,sEAA2C;IAAA,kFAAuB;IAAA,4DAAM;;;IAD5E,0EACI;IAAA,sHAA2C;IAC/C,4DAAM;;;IADG,0DAAqC;IAArC,uGAAqC;;;IAc1C,sEAA4C;IAAA,mFAAwB;IAAA,4DAAM;;;IAD9E,0EACI;IAAA,sHAA4C;IAChD,4DAAM;;;IADG,0DAAsC;IAAtC,wGAAsC;;;IAmB3C,sEAA4C;IAAA,mFAAwB;IAAA,4DAAM;;;IAD9E,0EACI;IAAA,sHAA4C;IAChD,4DAAM;;;IADG,0DAAsC;IAAtC,wGAAsC;;;IAkB3C,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADtE,0EACI;IAAA,sHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,oGAAkC;;;ADtNpE,MAAM,iBAAiB;IAQ5B,YAAoB,WAAwB,EACxB,WAAkC,EAClC,MAAc,EACd,MAAqB;QAHrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAVzC,cAAS,GAAG,KAAK,CAAC;IAU2B,CAAC;IAC9C,WAAW;QACT,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,EAAE,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7B,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IACD,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7C,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACC,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CACpC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IACG,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACvC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IACP,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAI,+BAA+B;QACzD,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,OAAO,EAAE;gBACzC,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,2BAA2B;YAC3B,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE;YAC3C,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;;kFAzEU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACA;QAAA,qEAAI;QAAA,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;QAAA,4DAAK;QACrC,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,wEAA6B;QAAA,oEAAQ;QAAA,4DAAK;QAC1C,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,gEACA;QAAA,wEAEA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,oEACA;QAAA,wEAEA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,iEACA;QAAA,0EACI;QAAA,2EACI;QAAA,kEACA;QAAA,wEAEA;QAAA,gHACI;QAEJ,gFACI;QAAA,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACpC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QACtC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,iEACA;QAAA,0EACI;QAAA,2EACI;QAAA,qEACA;QAAA,wEAEA;QAAA,gHACI;QAEJ,gFACI;QAAA,8EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QACtC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,iEAAI;QAAA,iEACJ;QAAA,0EACI;QAAA,2EACI;QAAA,2EACA;QAAA,wEAEA;QAAA,gHACI;QAEJ,gFACI;QAAA,8EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACpC,8EAAiC;QAAA,4EAAgB;QAAA,4DAAS;QAC9D,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,iEAAI;QAAA,iEACJ;QAAA,6EACA;QAAA,wEAEA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,iEAAI;QAAA,iEACJ;QAAA,kEACA;QAAA,wEAEA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,iEAAI;QAAA,iEACJ;QAAA,sEACA;QAAA,wEAEA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,iEACA;QAAA,oEACA;QAAA,wEAEA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,4EACI;QAAA,kEACA;QAAA,2EACA;QAAA,yEAEA;QAAA,kHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,kEAAI;QAAA,kEACJ;QAAA,sEACA;QAAA,yEAEA;QAAA,kHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,kEAAI;QAAA,kEACJ;QAAA,0EACA;QAAA,yEAGA;QAAA,kHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,kEAAI;QAAA,kEACJ;QAAA,2EACI;QAAA,4EACI;QAAA,2EACA;QAAA,yEAGA;QAAA,kHACI;QAEJ,iFACI;QAAA,+EAAoB;QAAA,gEAAG;QAAA,4DAAS;QAChC,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,kEAAI;QAAA,kEACJ;QAAA,2EACI;QAAA,4EACI;QAAA,2EACA;QAAA,yEAGA;QAAA,kHACI;QAEJ,iFACI;QAAA,+EAAoB;QAAA,gEAAG;QAAA,4DAAS;QAChC,+EAAuB;QAAA,mEAAM;QAAA,4DAAS;QACtC,+EAAsB;QAAA,kEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,kEAAI;QAAA,kEACJ;QAAA,uEACA;QAAA,yEAEA;QAAA,kHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,kEAAI;QAAA,kEACJ;QAAA,4EACI;QAAA,+EAAuD;QAA/C,2IAAS,gBAAY,IAAC;QAAyB,gEAAG;QAAA,4DAAS;QAEvE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA3OkC,0DAAyB;QAAzB,sFAAyB;QAQV,0DAAsD;QAAtD,6KAAsD;QACxE,0DAAgC;QAAhC,kGAAgC;QAWd,0DAA0D;QAA1D,iLAA0D;QAC5E,0DAAoC;QAApC,sGAAoC;QAYrC,0DAAwD;QAAxD,+KAAwD;QACvD,0DAAkC;QAAlC,oGAAkC;QAiBnC,2DAA2D;QAA3D,kLAA2D;QAC1D,0DAAqC;QAArC,uGAAqC;QAiBtC,2DAA6D;QAA7D,oLAA6D;QAC5D,0DAAuC;QAAvC,yGAAuC;QAiBrB,2DAA2D;QAA3D,kLAA2D;QAC7E,0DAAqC;QAArC,uGAAqC;QAYnB,0DAAwD;QAAxD,+KAAwD;QAC1E,0DAAkC;QAAlC,oGAAkC;QAYhB,0DAA4D;QAA5D,mLAA4D;QAC9E,0DAAsC;QAAtC,wGAAsC;QAYpB,0DAA0D;QAA1D,iLAA0D;QAC5E,0DAAoC;QAApC,sGAAoC;QAYlB,0DAA4D;QAA5D,mLAA4D;QAC9E,0DAAsC;QAAtC,wGAAsC;QAYpB,0DAA2D;QAA3D,kLAA2D;QAC7E,0DAAqC;QAArC,uGAAqC;QAatC,0DAA+D;QAA/D,sLAA+D;QAC9D,0DAAyC;QAAzC,2GAAyC;QAa1C,0DAAgE;QAAhE,uLAAgE;QAC/D,0DAA0C;QAA1C,4GAA0C;QAkB3C,2DAAgE;QAAhE,uLAAgE;QAC/D,0DAA0C;QAA1C,4GAA0C;QAiBxB,2DAA4D;QAA5D,mLAA4D;QAC9E,0DAAsC;QAAtC,wGAAsC;;6FDrN9D,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACZ;;;;;AAO/B,MAAM,YAAY;IAuEvB,YAAoB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;QAtEjD,YAAO,GAAG,CAAC,CAAC;QAEZ,UAAK,GAAG,oCAAoC,CAAC;QAC7C,QAAG,GAAG,SAAS,CAAC;QAChB,QAAG,GAAG,SAAS,CAAC;QACjB,YAAO,GAAG;YACP,IAAI,EAAE,mBAAmB;YACzB,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,SAAS;oBACf,UAAU,EAAE;wBACV,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;qBACnB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,EAAE,GAAG,EAAE,eAAe,EAAE,GAAG,EAAE,kBAAkB,EAAE;qBAC/D;iBACF;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,UAAU,EAAE;wBACV,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;qBACnB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,EAAE,GAAG,EAAE,aAAa,EAAE,GAAG,EAAE,iBAAiB,EAAE;qBAC5D;iBACF;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,UAAU,EAAE;wBACV,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;qBACnB;oBACD,QAAQ,EAAE;wBACR,IAAI,EAAE,OAAO;wBACb,WAAW,EAAE,EAAE,GAAG,EAAE,iBAAiB,EAAE,GAAG,EAAE,iBAAiB,EAAE;qBAChE;iBACF;aACF;SACF,CAAC;QAEF,aAAQ,GAAG;YACT;gBACE,GAAG,EAAE,QAAQ;gBACb,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,WAAW;gBAChB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;aACf;YACD;gBACE,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;aACf;YACD;gBACE,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,UAAU;gBACf,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;aACf;YACD;gBACE,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;aACf;SACF,CAAC;IACmD,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,+FAA+F;QAE/F,6BAA6B;QAC7B,aAAa;QACb,YAAY;QACZ,0CAA0C;QAC1C,+CAA+C;QAC/C,kDAAkD;QAClD,+BAA+B;QAC/B,mEAAmE;QACnE,oCAAoC;QACpC,qCAAqC;QACrC,uCAAuC;QACvC,kCAAkC;QAClC,iCAAiC;QACjC,kCAAkC;QAClC,oCAAoC;QACpC,qCAAqC;QACrC,4CAA4C;QAC5C,4CAA4C;QAC5C,gCAAgC;QAChC,uBAAuB;QACvB,uDAAuD;QACvD,qDAAqD;QACrD,aAAa;QACb,8DAA8D;QAC9D,4BAA4B;QAC5B,UAAU;QAEV,KAAK;IAEP,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,GAAG,GAAG,IAAI,6CAAY,CAAC;YAC1B,WAAW,EACT,kGAAkG;YACpG,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,oCAAoC;YAC3C,MAAM,EAAE,CAAC,SAAS,EAAG,SAAS,CAAC;YAC/B,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAC/B,sCAAsC;YACtC,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACzC,EAAE,CAAC,SAAS,GAAG,QAAQ,CAAC;YACxB,EAAE,CAAC,KAAK,CAAC,eAAe,GAAG,oCAAoC,CAAC;YAChE,EAAE,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;YAC1B,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;YAC5B,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC9B,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;YACzB,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YACvC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YACxC,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;YAC3B,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;YAChC,IAAI,gDAAe,CAAC,EAAE,CAAC;iBACpB,SAAS,CAAC;gBACT,MAAM,CAAC,GAAG;gBACV,MAAM,CAAC,GAAG;aACX,CAAC;iBACD,QAAQ,CAAC,IAAI,+CAAc,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBAClD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,qBAAqB;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,2DAA0B,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,2DAA0B,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,GAAG,CAAC,UAAU,CACjB,IAAI,0DAAyB,CAAC;YAC5B,eAAe,EAAE;gBACf,kBAAkB,EAAE,IAAI;aACzB;YACD,iBAAiB,EAAE,IAAI;SACxB,CAAC,CACH,CAAC;IACJ,CAAC;IAED,aAAa;QACX,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QACjD,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACvB,iDAAiD;YACjD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE;gBAClC,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE,2BAA2B;gBAChC,WAAW,EAAE;oBACX,CAAC,SAAS,EAAG,SAAS,CAAC;oBACvB,CAAC,SAAS,EAAE,SAAS,CAAE;oBACvB,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;iBACvB;aACF,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAChB,EAAE,EAAE,eAAe;gBACnB,MAAM,EAAE,eAAe;gBACvB,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE;oBACL,gBAAgB,EAAE,IAAI,CAAC,OAAO;iBAC/B;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACrC,kEAAkE;gBAClE,8DAA8D;gBAC9D,sCAAsC;gBACtC,YAAY;gBACZ,MAAM,KAAK,GAAI,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB;qBAClE,KAAK,CAAC;gBACT,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACvB,eAAe,EACf,gBAAgB,EAChB,QAAQ,CAAC,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,CACpC,CAAC;gBACF,kBAAkB;gBAClB,WAAW,CAAC,WAAW,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;YAClD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACvB,iDAAiD;YACjD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE;gBACxB,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE,gBAAgB;gBACrB,WAAW,EAAE;oBACX,CAAC,SAAS,EAAE,SAAS,CAAE;oBACvB,CAAC,SAAS,EAAG,SAAS,CAAC;oBACvB,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;iBACvB;aACF,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAChB,EAAE,EAAE,KAAK;gBACT,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE;oBACL,gBAAgB,EAAE,IAAI,CAAC,OAAO;iBAC/B;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACrC,MAAM,KAAK,GAAI,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB;qBAClE,KAAK,CAAC;gBACT,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACvB,KAAK,EACL,gBAAgB,EAChB,QAAQ,CAAC,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,CACpC,CAAC;gBACF,kBAAkB;gBAClB,WAAW,CAAC,WAAW,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;YAClD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACvB,iDAAiD;YACjD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC5B,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE,oBAAoB;gBACzB,WAAW,EAAE;oBACX,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,kCAAkC;iBAC1D;aACF,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAChB,EAAE,EAAE,SAAS;gBACb,MAAM,EAAE,SAAS;gBACjB,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE;oBACL,gBAAgB,EAAE,IAAI,CAAC,OAAO;iBAC/B;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACrC,MAAM,KAAK,GAAI,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB;qBAClE,KAAK,CAAC;gBACT,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACvB,SAAS,EACT,gBAAgB,EAChB,QAAQ,CAAC,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,CACpC,CAAC;gBACF,kBAAkB;gBAClB,WAAW,CAAC,WAAW,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;YAClD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,8BAA8B;QAC9B,sDAAsD;QACtD,oCAAoC;QACpC,qBAAqB;QACrB,iCAAiC;QACjC,qBAAqB;QACrB,iEAAiE;QACjE,oEAAoE;QACpE,8CAA8C;QAC9C,iEAAiE;QACjE,SAAS;QACT,QAAQ;QACR,wBAAwB;QACxB,qBAAqB;QACrB,yBAAyB;QACzB,sBAAsB;QACtB,eAAe;QACf,wCAAwC;QACxC,SAAS;QACT,QAAQ;QAER,8CAA8C;QAC9C,4EAA4E;QAC5E,gBAAgB;QAChB,iCAAiC;QACjC,mBAAmB;QACnB,0BAA0B;QAC1B,4CAA4C;QAC5C,SAAS;QACT,yBAAyB;QACzB,uDAAuD;QACvD,QAAQ;QACR,MAAM;QACN,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACvB,iDAAiD;YACjD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE,kCAAkC;gBACvC,WAAW,EAAE;oBACX,CAAE,SAAS,EAAE,SAAS,CAAC;oBACvB,CAAE,SAAS,EAAE,SAAS,CAAC;oBACvB,CAAE,SAAS,EAAE,SAAS,CAAC;oBACvB,CAAE,SAAS,EAAE,SAAS,CAAC;iBACxB;aACF,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAChB,EAAE,EAAE,MAAM;gBACV,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE;oBACL,gBAAgB,EAAE,IAAI,CAAC,OAAO;iBAC/B;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACrC,MAAM,KAAK,GAAI,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB;qBAClE,KAAK,CAAC;gBACT,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACvB,MAAM,EACN,gBAAgB,EAChB,QAAQ,CAAC,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,CACpC,CAAC;gBACF,kBAAkB;gBAClB,WAAW,CAAC,WAAW,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;YAClD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACvB,iDAAiD;YACjD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzB,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE,kCAAkC;gBACvC,WAAW,EAAE;oBACX,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;iBACvB;aACF,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAChB,EAAE,EAAE,MAAM;gBACV,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE;oBACL,gBAAgB,EAAE,IAAI,CAAC,OAAO;iBAC/B;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACrC,MAAM,KAAK,GAAI,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB;qBAClE,KAAK,CAAC;gBACT,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACvB,MAAM,EACN,gBAAgB,EAChB,QAAQ,CAAC,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,CACpC,CAAC;gBACF,kBAAkB;gBAClB,WAAW,CAAC,WAAW,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;YAClD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACvB,iDAAiD;YACjD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC5B,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE,6BAA6B;gBAClC,WAAW,EAAE;oBACX,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;oBACtB,CAAC,SAAS,EAAE,SAAS,CAAC;iBACvB;aACF,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAChB,EAAE,EAAE,SAAS;gBACb,MAAM,EAAE,SAAS;gBACjB,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE;oBACL,gBAAgB,EAAE,IAAI,CAAC,OAAO;iBAC/B;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;gBACrC,MAAM,KAAK,GAAI,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAsB;qBAClE,KAAK,CAAC;gBACT,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACvB,SAAS,EACT,gBAAgB,EAChB,QAAQ,CAAC,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,CACpC,CAAC;gBACF,kBAAkB;gBAClB,WAAW,CAAC,WAAW,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;YAClD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;;wEA3YU,YAAY;4FAAZ,YAAY;QCRzB,sEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAyB;QAC7B,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QACA,2EAA+B;QACnC,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAAO;QAAA,2EAAe;QAAA,2EAAwB;QAAA,gEAAI;QAAA,4DAAO;QAAA,4DAAQ;QACjE,uEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;6FDZO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;ICsFtC,qEAEI;IAAA,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC1B,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEACI;IAAA,6EAA6C;IAAA,kEAAM;IAAA,4DAAS;IADhE,4DACI;IACR,4DAAK;;;IAdG,0DAAa;IAAb,2EAAa;IACb,0DAAiB;IAAjB,+EAAiB;IACjB,0DAAkB;IAAlB,gFAAkB;IAClB,0DAAoB;IAApB,kFAAoB;IACpB,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAc;IAAd,6EAAc;IACd,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAiB;IAAjB,+EAAiB;IACjB,0DAAoB;IAApB,kFAAoB;IACpB,0DAAkB;IAAlB,gFAAkB;IAClB,0DAAqB;IAArB,oFAAqB;IACrB,0DAAkB;IAAlB,iFAAkB;;AD5F/B,MAAM,iBAAiB;IAE5B;QAQA,UAAK,GAAU;YACb,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAE,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE;YACtS,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE;YACvR,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE;YACxR,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE;YAC9R,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,EAAE,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE;SACzR,CAAC;IAdc,CAAC;IAejB,QAAQ;IACR,CAAC;;kFAlBU,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEACI;QAAA,gEACA;QAAA,gEACA;QAAA,qEAAI;QAAA,oEAAG;QAAA,yGAA8C;QAAA,4DAAI;QAAA,4DAAK;QAC9D,gEACA;QAAA,yEACI;QAEA,yEACI;QAAA,yEACI;QAAA,mEAAiC;QACrC,4DAAM;QAEN,0EACI;QAAA,4EAEJ;QAFyD,8LAA4B;QAAjF,4DAEJ;QAAA,4DAAM;QAIN,6EAA6C;QAAA,iEAAK;QAAA,4DAAS;QAC3D,6EAA6C;QAAA,iEAAK;QAAA,4DAAS;QAAA,qFAC/D;QAAA,4DAAM;QACV,4DAAM;QACN,iEAAI;QAAA,iEAAI;QAAA,iEACR;QACA,4EACI;QAAA,yEACI;QAAA,sEACI;QAAA,yEAAgB;QAAA,8DAAE;QAAA,4DAAK;QACvB,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,yEAAgB;QAAA,sEAAU;QAAA,4DAAK;QAC/B,yEAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,yEAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,yEAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,yEAAgB;QAAA,uEAAW;QAAA,4DAAK;QAChC,yEAAgB;QAAA,sEAAU;QAAA,4DAAK;QAC/B,yEAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,yEAAgB;QAAA,sEAAU;QAAA,4DAAK;QACnC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,sEACI;QAAA,sEACI;QAAA,6EACJ;QAD4C,yLAAuB;QAA/D,4DACJ;QAAA,4DAAK;QACL,sEACI;QAAA,6EACJ;QAD4C,6LAA2B;QAAnE,4DACJ;QAAA,4DAAK;QACL,sEACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,6EACJ;QAD4C,2LAAyB;QAAjE,4DACJ;QAAA,4DAAK;QACL,sEACI;QAAA,6EACJ;QAD4C,+LAA6B;QAArE,4DACJ;QAAA,4DAAK;QACL,sEACI;QAAA,6EACJ;QAD4C,6LAA2B;QAAnE,4DACJ;QAAA,4DAAK;QACL,sEACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,wEACJ;QAAA,4DAAK;QACL,sEACI;QAAA,mEAAiC;QACrC,4DAAK;QACT,4DAAK;QACL,gHAEI;;;;;;;;QAeR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;;QA3F+D,2DAA4B;QAA5B,uFAA4B;QAiCrC,2DAAuB;QAAvB,kFAAuB;QAGvB,0DAA2B;QAA3B,sFAA2B;QAY3B,0DAAyB;QAAzB,oFAAyB;QAGzB,0DAA6B;QAA7B,wFAA6B;QAG7B,0DAA2B;QAA3B,sFAA2B;QAmBvE,2DAAqO;QAArO,kqBAAqO;;6FDhFxO,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;;;;;;;;;AENiD;;;;;AAU3C,MAAM,eAAe;IAG1B,YACS,WAAkC,EAAS,MAAc;QAAzD,gBAAW,GAAX,WAAW,CAAuB;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvE,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACC,oCAAoC;IAC9B,YAAY;;YAEhB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAChD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC;QACrC,CAAC;KAAA;IAEH,oCAAoC;IACpC,OAAO;QAEL,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC1C,sBAAsB;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,oCAAoC;IACpC,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;;8EA7BU,eAAe;+FAAf,eAAe;QCV5B,yEACI;QAAA,uEACI;QAAA,oEACA;QACJ,4DAAI;QAMJ,oEA0BM;QAEV,4DAAM;;6FD5BO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;6FDOP,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;IC0FV,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,iIAAoC;IACxC,4DAAM;;;IADG,0DAA8B;IAA9B,gGAA8B;;;;;IAL/C,0EACI;IAAA,0EACI;IAAA,gFACY;IADsJ,iVAA6B;IAC/L,4DAAY;IACZ,2HACI;IAER,4DAAM;IACV,4DAAM;;;IAN+B,0DAAgB;IAAhB,gFAAgB;IAExC,0DAAkC;IAAlC,0GAAkC;;;IAUnC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,iIAAoC;IACxC,4DAAM;;;IADG,0DAA8B;IAA9B,gGAA8B;;;;;IAL/C,0EACI;IAAA,0EACI;IAAA,gFACY;IADD,oVAA6B,CAAC,mBAAO;IAChD,4DAAY;IACZ,2HACI;IAER,4DAAM;IACV,4DAAM;;;IANa,0DAAqC;IAArC,8FAAqC;IAE3C,0DAAkC;IAAlC,0GAAkC;;;;IAO/C,0EACI;IAAA,0EACI;IAAA,gFACY;IADD,2WAAmC;IAC9C,4DAAY;IAChB,4DAAM;IACV,4DAAM;;;IAHa,0DAAmC;IAAnC,iGAAmC;;;;IAItD,0EACI;IAAA,0EACI;IAAA,gFACY;IAD+H,qVAAiC;IAC5K,4DAAY;IAChB,4DAAM;IACV,4DAAM;;;IAH+B,0DAAiB;IAAjB,0EAAiB;;;IAY9C,uEAA2D;IAAA,gFAAqB;IAAA,4DAAO;;;IACvF,uEAA0D;IAAA,uDAAgD;IAAA,4DAAO;;;IAAvD,0DAAgD;IAAhD,6HAAgD;;;IA4ItH,0EAA2D;IAAA,yFAA8B;IAAA,4DAAM;;;;IAFnG,sEAEI;IAAA,4HAA2D;IAC3D,yEACI;IAAA,gEACA;IAAA,gEAAK;IAAA,wEAAiB;IAAA,sEAAW;IAAA,4DAAI;IACzC,4DAAM;IACN,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,6EACA;IADgH,oWAA8B;IAA9I,4DACA;IAIJ,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,2EACI;IACA,6EACA;IAD6G,iWAA2B;IAAxI,4DACA;IAAA,wEAEJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA5BuC,0DAAiB;IAAjB,kFAAiB;IASsE,2DAA8B;IAA9B,4FAA8B;IAYjC,0DAA2B;IAA3B,yFAA2B;;;IAS5J,sEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,gEAAK;IAAA,oEAAG;IAAA,kEAAO;IAAA,4DAAI;IACnB,uEAEJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAGF,0EAA4D;IAAA,wFAA6B;IAAA,4DAAM;;;;IADnG,sEACI;IAAA,4HAA4D;IAC5D,yEACI;IAAA,gEAAK;IAAA,wEAAiB;IAAA,qEAAU;IAAA,4DAAI;IACxC,4DAAM;IACN,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,6EACA;IADgH,qWAA+B;IAA/I,4DACA;IAEJ,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,2EACI;IAEA,6EAEJ;IAF6I,kWAA4B;IAArK,4DAEJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAEI;IACA,2EACI;IAAA,2EACI;IAAA,6EACV;IAAA,wEAA8F;IAAA,sEAChG;IAAA,4DAAQ;IACI,6EACV;IAAA,wEAAyF;IAAA,sEAC3F;IAAA,4DAAQ;IACI,6EACV;IAAA,wEAAuF;IAAA,mEACzF;IAAA,4DAAQ;IACI,6EACd;IAAA,wEAAsF;IAAA,mEACxF;IAAA,4DAAQ;IACI,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA7CuC,0DAAkB;IAAlB,mFAAkB;IAQqE,0DAA+B;IAA/B,6FAA+B;IAWN,0DAA4B;IAA5B,0FAA4B;IAUpI,0DAAuE;IAAvE,kIAAuE;IAGvE,0DAAuE;IAAvE,kIAAuE;IAGvE,0DAAoE;IAApE,+HAAoE;IAGpE,0DAAoE;IAApE,+HAAoE;;;IAoBzH,sEACI;IAAA,yEACI;IAAA,0EACI;IAAA,0EACI;IAAA,sEACI;IAAA,oEAAG;IAAA,sEAAW;IAAA,4DAAI;IAClB,uEACA;IAGJ,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,0EAEI;IAAA,0EACI;IAAA,2EACI;IAAA,6EACV;IAAA,wEAA8F;IAAA,sEAChG;IAAA,4DAAQ;IACI,6EACV;IAAA,wEAAyF;IAAA,sEAC3F;IAAA,4DAAQ;IACI,6EACV;IAAA,wEAAuF;IAAA,mEACzF;IAAA,4DAAQ;IACI,6EACd;IAAA,wEAAsF;IAAA,mEACxF;IAAA,4DAAQ;IACI,4DAAM;IACV,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAjB+C,2DAAuE;IAAvE,kIAAuE;IAGvE,0DAAuE;IAAvE,kIAAuE;IAGvE,0DAAoE;IAApE,+HAAoE;IAGpE,0DAAoE;IAApE,+HAAoE;;;;IAmCzH,yEACI;IAAA,0EAEI;IAAA,0EACI;IAAA,0EACI;IAAA,4EACI;IAAA,4EACI;IADG,4TAAqB,MAAM,KAAE;IAApC,4DACI;IAAA,iEACR;IAAA,4DAAQ;IAER,4EACI;IAAA,uEACI;IAAA,mEACR;IAAA,4DAAQ;IAER,6EACI;IAAA,wEACI;IAAA,oEACR;IAAA,4DAAQ;IAEZ,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAlByC,0DAAsE;IAAtE,kIAAsE;IAKtE,0DAAuE;IAAvE,mIAAuE;IAKvE,0DAAwE;IAAxE,oIAAwE;;;;IAWvH,yEAEI;IACA,iFACY;IADgH,oVAA+B;IAC3J,4DAAY;IAEhB,4DAAM;;;IAHmC,0DAAqB;IAArB,sFAAqB;;;;IAM9D,yEAII;IAGA,iFACY;IADiH,qVAAgC;IAC7J,4DAAY;IAEhB,4DAAM;;;IAHmC,0DAAkB;IAAlB,mFAAkB;;ADld/E,sEAAsE;AAO/D,MAAM,uBAAuB;IA4BlC,kCAAkC;IAElC,YACU,WAAwB,EACxB,WAAkC,EAClC,MAAc,EACd,MAAqB;QAHrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAhC/B,sBAAiB,GAAG,SAAS,CAAC;QAO9B,gBAAW,GAAG;YACZ,EAAE,MAAM,EAAE,aAAa,EAAE;YACzB,EAAE,MAAM,EAAE,OAAO,EAAE;YACnB,EAAE,MAAM,EAAE,YAAY,EAAE;SACzB,CAAC;QACF,iBAAY,GAAG;YACb,EAAE,MAAM,EAAE,YAAY,EAAE;SACzB,CAAC;QAGF,cAAS,GAAY,KAAK,CAAC,CAAC,2CAA2C;QACvE,eAAU,GAAY,KAAK,CAAC,CAAC,0CAA0C;QAIvE,sBAAiB,GAAQ,EAAE,CAAC;QAE5B,0BAAqB,GAAQ,EAAE,CAAC;QAkBhC,+CAA+C;QAC/C,YAAO,GAAG,CAAC,CAAC;QAEZ,UAAK,GAAG,oCAAoC,CAAC;QAC7C,QAAG,GAAG,SAAS,CAAC;QAChB,QAAG,GAAG,SAAS,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAGlB,SAAI,GAAG,EAAE,CAAC;QAGV,iBAAY,GAAS,IAAI,CAAC;QAG1B,WAAM,GAAG,IAAI,CAAC;IAxBV,CAAC;IACL,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC;IACD,oDAAoD;IACpD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;IACxC,CAAC;IAmBD,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QACxC,IAAI,IAAI,CAAC,KAAK;YACd,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAC9B,2BAA2B;QAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;QACzD,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,2BAA2B;QAC3B,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,mCAAmC;IACnC,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CACnC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,gDAAgD;IACzC,aAAa,CAAC,KAAU;QAC7B,qCAAqC;QAErC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC;IAC9D,CAAC;IACD,+CAA+C;IACxC,YAAY,CAAC,KAAU;QAC5B,oCAAoC;QACpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC;IACjE,CAAC;IAED,6CAA6C;IAC7C,YAAY,CAAC,MAAM;QACjB,8BAA8B;QAC9B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,WAAW,EAAE,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC;QAC/D,4CAA4C;IAC9C,CAAC;IACD,6CAA6C;IAC7C,aAAa,CAAC,MAAM;QAClB,gCAAgC;QAChC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,WAAW,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;QACjE,4CAA4C;IAC9C,CAAC;IACD,sDAAsD;IACtD,WAAW,CAAC,IAAI;QACd,qBAAqB;QACrB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1D,CAAC;IACC,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC;IACD,YAAY;QACZ,iEAAiE;QACjE,IAAI,CAAC,iBAAiB,GAAG,MAAM;QAC/B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;QAC1D,uEAAuE;QACvE,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;QAC9E,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;QAC5E,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACpF,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;QAC9E,+DAA+D;QAE/D,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACtB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC7C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACjE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aAC9D;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACzC;QAED,IAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1C,oEAAoE;YACpE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAErC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAEjC,CAAC;IAED,8BAA8B;IAC9B,eAAe,CAAC,KAAe;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,4CAA4C;IAC5C,WAAW;QACT,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,aAAa;YACb,YAAY,EAAC,EAAE;YACf,WAAW,EAAE;gBACX;oBACE,MAAM,EAAE,EAAE;oBACV,IAAI,EAAE,EAAE;iBACT;aACF;YACD,KAAK,EAAE;gBACL;oBACE,MAAM,EAAE,EAAE;oBACV,IAAI,EAAE,EAAE;iBACT;aACF;YACD,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,aAAa,EAAE,CAAC,EAAE,CAAC;YACnB,IAAI,EAAE;gBACJ;oBACE,EAAE,EAAE,EAAE;oBACN,IAAI,EAAE,IAAI,CAAC,UAAU;oBACrB,MAAM,EAAE,EAAE;iBACX;aACF;YACD,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE;gBACZ;oBACE,EAAE,EAAE,EAAE;oBACN,IAAI,EAAE,EAAE;oBACR,cAAc,EAAE,EAAE;iBACnB;aACF;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,aAAa,EAAE,EAAE;YACjB,WAAW,EAAE,CAAC,EAAE,CAAC;SAClB,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,MAAM;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5C,OAAO,IAAI,CAAC,GAAG,KAAK,MAAM,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;YACX,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACrB;aAAM;YACL,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,WAAW,CAAC,KAAK;QACf,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAa,EAAE,EAAE;YACvD,OAAO,QAAQ,CAAC,GAAG,KAAK,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;YACf,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;SAC7B;aAAM;YACL,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,IAAG,IAAI,CAAC,IAAI,EAAC;YACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAE/B,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,EAClC;gBACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aACzC;;gBAED,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;SACjC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAG,IAAI,EAAC;YACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACxC;IACH,CAAC;IACD,cAAc,CAAC,QAAQ;QACrB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,oCAAoC;IACpC,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CACpC,CAAC,MAAM,EAAE,EAAE;YACT,kCAAkC;YAClC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,iBAAiB,EAAE;gBAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;aACzB;iBAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,kBAAkB,EAAE;gBAClD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;aACzB;iBAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,gBAAgB,EAAE;gBAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,YAAa;QACxB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACvC,CAAC,SAAS,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAErC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,+CAA+C;YAC/C,kDAAkD;YAClD,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;oBACxC,OAAO,GAAG,CAAC,MAAM,IAAI,YAAY,CAAC;gBACpC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,aAAa;IAEb,yBAAyB;IACzB,6BAA6B;IAC7B,IAAI;IAEJ,+CAA+C;IAC/C,oCAAoC;IACpC,uBAAuB;IACvB,kCAAkC;IAClC,mBAAmB;IACnB,4GAA4G;IAC5G,wBAAwB;IACxB,mDAAmD;IACnD,sCAAsC;IACtC,gBAAgB;IAChB,QAAQ;IACR,2DAA2D;IAC3D,2DAA2D;IAC3D,yBAAyB;IACzB,sCAAsC;IACtC,2BAA2B;IAC3B,oCAAoC;IACpC,WAAW;IACX,iCAAiC;IACjC,SAAS;IACT,OAAO;IACP,IAAI;IAEJ,+BAA+B;IAC/B,oDAAoD;IACpD,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IACD,eAAe,CAAC,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,oEAAoE;QACpE,yBAAyB;IAC3B,CAAC;IAED,iCAAiC;IACjC,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,+BAA+B;QACtD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACzD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAEvE,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW;iBACb,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;iBAC5D,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;gBACtD,gCAAgC;gBAChC,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC;gBAChD,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;gBACzB,8BAA8B;gBAC9B,6BAA6B;gBAC7B,IAAI,GAAG,IAAI,gCAAgC,EAAE;oBAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,EAAE;wBAClC,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;oBACH,IAAK,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,KAAK,WAAW,EAAG;wBACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;qBACpC;yBACI,IAAK,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,KAAK,MAAM,EAAG;wBACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;qBAChC;yBACI,IAAK,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,KAAK,MAAM,EAAG;wBACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC/B;iBACN;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE;wBAC9B,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACN;aAAM;YACL,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW;iBACb,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;iBAC5C,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;gBACnC,gCAAgC;gBAChC,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC;gBAChD,4BAA4B;gBAC5B,8BAA8B;gBAC9B,6BAA6B;gBAC7B,IAAI,IAAI,KAAK,WAAW,EAAE;oBACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,SAAS,EAAE;wBAChD,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBACtC;qBACI,IAAI,IAAI,KAAK,MAAM,EAAC;oBAEvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE;wBAC3C,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAClC;qBACI,IAAI,IAAI,KAAK,MAAM,EAAC;oBAEvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE;wBAC3C,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;gBACD,SAAS;gBACT,wCAAwC;gBACxC,qBAAqB;gBACrB,QAAQ;gBAER,IAAI;YACN,CAAC,CAAC,CAAC;SACN;IACH,CAAC;;8FApbU,uBAAuB;uGAAvB,uBAAuB;QCdpC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAAyB;QAC7B,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QACA,2EAA+B;QACnC,4DAAM;QACN,yEACI;QAAA,0EAEI;QAAA,yEAA6B;QAAA,yEAAa;QAAA,4DAAK;QAE/C,0EACI;QAEA,2EAEI;QAAA,2EACI;QAAA,2EACI;QAAA,6EACA;QAAA,wEACmB;QAAA,kEACvB;QAAA,4DAAQ;QAEJ,6EACA;QAAA,wEAEI;QAAA,uEACR;QAAA,4DAAQ;QAEJ,6EACA;QAAA,wEAEI;QAAA,kEACR;QAAA,4DAAQ;QAER,4DAAM;QACV,4DAAM;QACN,yEAAiB;QAAA,qFAAyB;QAAA,4DAAI;QAClD,4DAAM;QACV,4DAAM;QAEN,uEACI;QACA,0EACI;QAAA,2EAA+B;QAAA,iEAAI;QAAA,iEAC/B;QAAA,2EACI;QAAA,2EACI;QAAA,6EACd;QAAA,wEAAgG;QAAA,iEAClG;QAAA,4DAAQ;QACQ,6EACd;QAAA,wEAA4F;QAAA,kEAC9F;QAAA,4DAAQ;QACQ,6EACd;QAAA,wEAA6F;QAAA,kEAC/F;QAAA,4DAAQ;QACQ,6EAClB;QAAA,wEAAgG;QAAA,sEAClG;QAAA,4DAAQ;QACQ,4DAAM;QACV,4DAAM;QACN,yEAAiB;QAAA,kFAAsB;QAAA,4DAAI;QAC/C,4DAAM;QAEV,4DAAM;QACN,iEAAI;QAAA,iEACJ;QAAA,0EACI;QAaA,sHACI;QAQJ,sHACI;QAQJ,kGACA;QACA,sHACI;QAKJ,sHACI;QASJ,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,8EACJ;QAAA,wHAA2D;QAC3D,wHAA0D;QAC1D,4DAAS;QAEL,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EAEI;QAAA,0EACI;QAAA,0EACI;QAAA,yEAAkD;QAAA,kEAAK;QAAA,4DAAI;QAC/D,4DAAK;QACL,0EACI;QAAA,yEAAmC;QAAA,kEAAK;QAAA,4DAAI;QAChD,4DAAK;QACL,0EACI;QAAA,yEAAyC;QAAA,wEAAW;QAAA,4DAAI;QAC5D,4DAAK;QACT,4DAAK;QAEL,8EACtC;QAAA,4EAAyB;QAAA,kEAAO;QAAA,4DAAO;QACzC,4DAAS;QAC2B,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EAEI;QAAA,2EAEI;QAAA,6EACA;QAAA,wEACoB;QAAA,mEACxB;QAAA,4DAAQ;QAEJ,6EACA;QAAA,wEAEI;QAAA,uEACR;QAAA,4DAAQ;QAEJ,6EACA;QAAA,wEAEI;QAAA,2EACR;QAAA,4DAAQ;QACR,4DAAM;QACN,2EAEI;QAAA,6EACA;QAAA,wEAC4B;QAAA,2EAChC;QAAA,4DAAQ;QAEJ,6EACA;QAAA,wEAEI;QAAA,wEACR;QAAA,4DAAQ;QAEJ,6EACA;QAAA,yEAEI;QAAA,wEACR;QAAA,4DAAQ;QAER,4DAAM;QAEV,4DAAM;QACN,4EACI;QAAA,4EAEI;QAAA,8EACA;QAAA,yEAC+B;QAAA,+EACnC;QAAA,4DAAQ;QAEJ,8EACA;QAAA,yEAEI;QAAA,8EACR;QAAA,4DAAQ;QAEJ,8EACpE;QAAA,yEAEwE;QAAA,8EACR;QAAA,4DAAQ;QACR,4DAAM;QACV,4DAAM;QACN,4EAEI;QAAA,4EACI;QAAA,8EACA;QAAA,yEACqB;QAAA,qEACzB;QAAA,4DAAQ;QAEJ,8EACA;QAAA,yEAEI;QAAA,mEACR;QAAA,4DAAQ;QAEJ,8EACA;QAAA,yEAEI;QAAA,oEACR;QAAA,4DAAQ;QAEJ,8EACA;QAAA,yEACoB;QAAA,oEACxB;QAAA,4DAAQ;QACR,4DAAM;QAGV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,+EACI;QAAA,mEACJ;QAAA,4DAAS;QAIb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAAA,0EAAiB;QAAA,yFAA4B;QAAA,4DAAI;QAC3D,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,yHAEI;QA8BJ,wHACI;QAaJ,0HACI;QAgDJ,2EACI;QAAA,4EACI;QAAA,4EACI;QAAA,wEAAM;QAAA,sEAAG;QAAA,wEAAW;QAAA,4DAAI;QACpB,yEACJ;QAAA,4DAAM;QAAA,0EAAiB;QAAA,gFAAmB;QAAA,4DAAI;QAClD,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,yHACI;QAmCJ,2EAGI;QAAA,4EACI;QAAA,4EAAe;QAAA,sEAAG;QAAA,wEAAW;QAAA,4DAAI;QAC7B,yEACJ;QAAA,4DAAM;QAAA,0EAAiB;QAAA,uFAA0B;QAAA,4DAAI;QACzD,4DAAM;QACN,4EACI;QAAA,4EAAe;QAAA,sEAAG;QAAA,0EAAa;QAAA,4DAAI;QAC/B,yEACJ;QAAA,4DAAM;QAAA,0EAAiB;QAAA,yFAA4B;QAAA,4DAAI;QAC3D,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,4EAAe;QAAA,sEAAG;QAAA,wEAAW;QAAA,4DAAI;QAC7B,yEACJ;QAAA,4DAAM;QAAA,0EAAiB;QAAA,wFAA2B;QAAA,4DAAI;QAC1D,4DAAM;QAEV,4DAAM;QAGN,kEACA;QAAA,yHACI;QAwBJ,kEAAI;QAAA,kEACJ;QAAA,wHAEI;QAOJ,wHAII;QAOR,4DAAO;QAGP,2EACI;QAAA,4EACI;QAAA,kEAAI;QAAA,kEACJ;QAAA,4EACI;QAAA,+EAA4D;QAApD,iJAAS,gBAAY,IAAC;QAA8B,yDAAqB;QAAA,4DAAS;QAC1F,kEAAI;QAAA,kEAAI;QAAA,kEACZ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA/dyB,0DAA8B;QAA9B,2FAA8B;QAWM,0DAAoE;QAApE,4HAAoE;QAC/E,0DAAqE;QAArE,8HAAqE;QAI1D,0DAAyE;QAAzE,iIAAyE;QACnF,0DAA0E;QAA1E,mIAA0E;QAKhE,0DAAoE;QAApE,4HAAoE;QAC9E,0DAAqE;QAArE,8HAAqE;QAiBrD,2DAAyE;QAAzE,iIAAyE;QAGzE,0DAA0E;QAA1E,kIAA0E;QAG1E,0DAA0E;QAA1E,kIAA0E;QAG1E,0DAA8E;QAA9E,sIAA8E;QAwBnG,0DAAc;QAAd,4EAAc;QASd,0DAAa;QAAb,2EAAa;QAWb,0DAAa;QAAb,2EAAa;QAMb,0DAAc;QAAd,4EAAc;QAcxB,0DAAoD;QAApD,kHAAoD;QACpD,0DAAmD;QAAnD,iHAAmD;QA8BY,2DAAwE;QAAxE,gIAAwE;QAKxE,0DAA4E;QAA5E,oIAA4E;QAM5E,0DAAgF;QAAhF,wIAAgF;QAQjF,0DAAgF;QAAhF,wIAAgF;QAK/E,0DAA6E;QAA7E,qIAA6E;QAM7E,0DAA4E;QAA5E,oIAA4E;QAY5E,0DAAmF;QAAnF,2IAAmF;QAKnF,0DAAkF;QAAlF,0IAAkF;QAMlF,0DAAkF;QAAlF,0IAAkF;QAUlF,0DAAyE;QAAzE,iIAAyE;QAKzE,0DAAuE;QAAvE,+HAAuE;QAMvE,0DAAwE;QAAxE,gIAAwE;QAMxE,0DAAwE;QAAxE,gIAAwE;QA4BxJ,0DAA8H;QAA9H,+LAA8H;QAgC9H,0DAAmI;QAAnI,oMAAmI;QAcnI,0DAA8H;QAA9H,+LAA8H;QA2D9H,2DAAkE;QAAlE,+HAAkE;QA6D7C,2DAAwH;QAAxH,yLAAwH;QA0BxH,0DAA8D;QAA9D,2HAA8D;QAS9D,0DAAiE;QAAjE,6HAAiE;QAkBvB,0DAAqB;QAArB,sFAAqB;;6FDtdhG,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEXD;AAAA;AAAO,MAAM,MAAM,GAAgB;IACjC;QACE,IAAI,EAAE,EAAE;QACR,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,yBAAyB;QAC/B,KAAK,EAAE,eAAe;QACtB,SAAS,EAAE,IAAI;QACf,OAAO,EAAE,EAAE;KACZ;IACD;QACE,IAAI,EAAE,UAAU;QAChB,KAAK,EAAE,cAAc;QACrB,IAAI,EAAE,iBAAiB;QACvB,KAAK,EAAE,EAAE;QACT,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,EAAE;KACZ;IACD;QACE,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,EAAE;QACT,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,EAAE;KACZ;IACD;QACE,IAAI,EAAE,YAAY;QAClB,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,iBAAiB;QACvB,KAAK,EAAE,EAAE;QACT,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,EAAE;KACZ;IACD;QACE,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,qBAAqB;QAC3B,KAAK,EAAE,EAAE;QACT,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,EAAE;KACZ;CACF,CAAC;;;;;;;;;;;;;AC3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGkB;;;;;;;;;;;;ICyBpC,sEAAwC;IAAA,2EAAgB;IAAA,4DAAM;;;IADlE,0EACI;IAAA,mHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IASvC,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC5D,sEAAkC;IAAA,8FAAmC;IAAA,4DAAM;;;IAF/E,0EACI;IAAA,mHAAqC;IACrC,mHAAkC;IACtC,4DAAM;;;IAFG,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAA4B;IAA5B,6FAA4B;;;IAUjC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEAAyC;IAAA,iGAAsC;IAAA,4DAAM;;;IAFzF,0EACI;IAAA,yHAAwC;IACxC,yHAAyC;IAC7C,4DAAM;;;IAFG,0DAAkC;IAAlC,oGAAkC;IAClC,0DAAmC;IAAnC,qGAAmC;;;;;IANpD,yEACI;IAAA,yEACI;IAAA,mEAA6B;IAC7B,4EACA;IADuB,2UAAuC,MAAM,KAAE;IAAtE,4DACA;IAAA,mHACI;IAGR,4DAAM;IACV,4DAAM;;;IAN0K,0DAA4D;IAA5D,wLAA4D;IAC/N,0DAAsC;IAAtC,8GAAsC;;;IAYvC,sEAAgD;IAAA,+EAAoB;IAAA,4DAAM;;;IAC1E,sEAAiD;IAAA,yGAA8C;IAAA,4DAAM;;;IAFzG,0EACI;IAAA,yHAAgD;IAChD,yHAAiD;IACrD,4DAAM;;;IAFG,0DAA0C;IAA1C,4GAA0C;IAC1C,0DAA2C;IAA3C,6GAA2C;;;IAGxD,0EAAsC;IAAA,uDAAO;IAAA,4DAAM;;;IAAb,0DAAO;IAAP,4EAAO;;;IAC7C,0EAAmE;IAAA,uDAAO;IAAA,4DAAM;;;IAAb,0DAAO;IAAP,4EAAO;;;;IAX9E,yEACI;IAAA,yEACI;IAAA,mEAA6B;IAC7B,4EAEA;IAFuB,2UAAuC,MAAM,KAAE;IAAtE,4DAEA;IAAA,mHACI;IAGR,4DAAM;IACN,mHAAsC;IACtC,mHAAmE;IACvE,4DAAM;;;IAT0L,0DAAoE;IAApE,gMAAoE;IAEvP,0DAA8C;IAA9C,sHAA8C;IAKlD,0DAAkB;IAAlB,mFAAkB;IAClB,0DAA+C;IAA/C,uHAA+C;;;IAQ5C,sEAAuC;IAAA,8EAAmB;IAAA,4DAAM;;;IADpE,0EACI;IAAA,mHAAuC;IAC3C,4DAAM;;;IADG,0DAAiC;IAAjC,kGAAiC;;;IAatC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,yHAAoC;IACxC,4DAAM;;;IADG,0DAA8B;IAA9B,gGAA8B;;;;IAP/C,yEACI;IAAA,yEACI;IACA,mEAA+B;IAC/B,gFACY;IAD8J,yUAA6B;IACvM,4DAAY;IACZ,mHACI;IAER,4DAAM;IACV,4DAAM;;;IANuC,0DAAgB;IAAhB,gFAAgB;IAEhD,0DAAkC;IAAlC,0GAAkC;;;IAanC,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,yHAAoC;IACxC,4DAAM;;;IADG,0DAA8B;IAA9B,gGAA8B;;;;;IAR/C,yEACI;IAAA,yEACI;IACA,mEAA+B;IAC/B,gFACY;IADD,4VAA4B;IACvC,4DAAY;IAEZ,mHACI;IAER,4DAAM;IACV,4DAAM;;;IAPa,0DAA4B;IAA5B,0FAA4B;IAGlC,0DAAkC;IAAlC,0GAAkC;;;;IAM/C,yEACI;IAAA,yEACI;IACA,mEAAkC;IAClC,gFACY;IADD,mWAAmC;IAC9C,4DAAY;IAEhB,4DAAM;IACV,4DAAM;;;IAJa,0DAAmC;IAAnC,iGAAmC;;;;IAKtD,yEACI;IAAA,yEACI;IACA,mEAAkC;IAClC,gFACY;IADuI,6UAAiC;IACpL,4DAAY;IAChB,4DAAM;IACV,4DAAM;;;IAHuC,0DAAiB;IAAjB,0EAAiB;;;;IAK9D,yEACI;IAAA,yEACI;IACA,mEAAuC;IACvC,gFAGY;IAHqH,2UAA+B;IAGhK,4DAAY;IAChB,4DAAM;IACV,4DAAM;;;IALuC,0DAAoB;IAApB,oFAAoB;;;;IAMjE,yEACI;IAAA,yEACI;IACA,mEAAuC;IACvC,gFAGY;IAHD,yVAAyB;IAGpC,4DAAY;IAEhB,4DAAM;IACV,4DAAM;;;IANa,0DAAyB;IAAzB,wFAAyB;;;IASpC,uEAAoB;IAAA,mEAAQ;IAAA,4DAAO;;;IACnC,uEAAmB;IAAA,+DAAI;IAAA,4DAAO;;ADrInD,MAAM,eAAe;IAgB1B,YACS,WAAwB,EACxB,WAAkC,EAClC,MAAc,EACb,MAAqB;QAHtB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QAnB/B,cAAS,GAAG,KAAK,CAAC;QAOlB,eAAU,GAAG;YACX,EAAE,MAAM,EAAE,OAAO,EAAE;YACnB,EAAE,MAAM,EAAE,YAAY,EAAE;SACzB,CAAC;QACF,sBAAiB,GAAQ,EAAE,CAAC;QAE5B,0BAAqB,GAAQ,EAAE,CAAC;IAO7B,CAAC;IACJ,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IACD,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IAChC,CAAC;IACD,OAAO;QACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC;IACD,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,oDAAoD;QACpD,wDAAwD;QACxD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/D,kEAAkE;QAClE,0DAA0D;QAC1D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE/B,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC5C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAChE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aAC7D;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACzC;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACtC,0DAA0D;YAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxC,+CAA+C;QAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAEtC,CAAC;IACD,UAAU;QACR,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACzC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBACnC,KAAK,EAAE;oBACL,EAAE;oBACF;wBACE,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,KAAK;wBAChB,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC;qBAChE;iBACF;gBACD,QAAQ,EAAE,EAAE;gBACZ,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAClC,MAAM,EAAE,EAAE;gBACV,IAAI,EAAE,CAAC,EAAE,CAAC;aAEX,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACxC;gBACE,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBACnC,KAAK,EAAE;oBACL,EAAE;oBACF;wBACE,yDAAU,CAAC,QAAQ;wBACnB,yDAAU,CAAC,KAAK;wBAChB,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC;qBAChE;iBACF;gBACD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,CAAC,EAAE,CAAC;gBACV,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAClC,MAAM,EAAE,CAAC,EAAE,CAAC;gBACZ,gBAAgB,EAAE;oBAChB,EAAE;oBACF,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC/C;aAEF;YACD,IAAI;YACJ,0CAA0C;YAC1C,IAAI;aACL,CAAC;SACH;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,QAAQ,CAAC,KAAK,EAAE,KAAK;QACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACnD,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACnE,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,gBAAgB,CAAC,KAAK,EAAE;YACxD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;SACf;aAAM,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;YACvD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;SACf;aAAM;YACL,IAAI,CAAC,GAAG,GAAG,sBAAsB,CAAC;SACnC;IACH,CAAC;IAED,gCAAgC;IAChC,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CACpC,CAAC,IAAI,EAAE,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,mCAAmC;IACnC,YAAY,CAAC,YAAa;QACxB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACvC,CAAC,SAAS,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;oBACxC,OAAO,GAAG,CAAC,MAAM,IAAI,YAAY,CAAC;gBACpC,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mDAAmD;IACnD,UAAU,CAAC,IAAI;QAEb,6DAA6D;QAC7D,sDAAsD;QACtD,uDAAuD;QACvD,6DAA6D;QAE7D,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAG,IAAI,CAAC,IAAI,EAAC;YACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAE/B,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,EAClC;gBACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aACzC;;gBAED,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;SACjC;QACC,0CAA0C;QAC1C,iDAAiD;QACjD,8BAA8B;QAC9B,4DAA4D;QAC5D,yEAAyE;QACzE,QAAQ;QACR,MAAM;QACN,IAAI;QAEJ,IAAI,IAAI;YAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,2DAA2D;IAC3D,cAAc,CAAC,QAAQ;QACrB,qCAAqC;QACrC,uCAAuC;QACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,4DAA4D;IAC5D,YAAY,CAAC,MAAM;QACjB,8BAA8B;QAC9B,IAAI,MAAM;YAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,sDAAsD;IACtD,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,OAAO,EAAE;gBAC/C,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,OAAO;SACR;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,wCAAwC;YACxC,IAAI,CAAC,WAAW;iBACb,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;iBAClD,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;gBACnC,gCAAgC;gBAChC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;gBAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;gBACzB,8BAA8B;gBAC9B,6BAA6B;gBAC7B,IAAI,GAAG,KAAK,wCAAwC,EAAE;oBACpD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,EAAE;wBAClC,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE;wBAC9B,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACN;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;gBACnC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;gBACzB,0DAA0D;gBAC1D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,EAAE;oBAClC,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChC,IAAI;YACN,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE;oBAC9C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;YACL,CAAC,CACF,CAAC;SACH;IACH,CAAC;IACD,oDAAoD;IACpD,IAAI,CAAC;QACH,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IACpC,CAAC;;8EA7QU,eAAe;+FAAf,eAAe;QCN5B,yEACI;QAAA,yEACI;QAAA,wEAAyB;QAC7B,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QACA,2EAA+B;QACnC,4DAAM;QACV,4DAAM;QACN,yEAEI;QAAA,yEACI;QAAA,yEACI;QAAA,yEAAwB;QAAA,+EAAmB;QAAA,4DAAK;QAChD,2EACI;QADmD,4IAAY,kBAAc,IAAC;QAC9E,0EACI;QAAA,0EACI;QAAA,mEAAgD;QAChD,wEACA;QAAA,8GACI;QAER,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,oEAAiD;QACjD,wEACA;QAAA,8GACI;QAGR,4DAAM;QACV,4DAAM;QAEN,8GACI;QASJ,8GACI;QAaJ,0EACI;QAAA,0EACI;QAAA,oEAA4B;QAC5B,wEACA;QAAA,8GACI;QAER,4DAAM;QACN,sEAAwB;QAC5B,4DAAM;QAEN,8GACI;QAUJ,8GACI;QAYJ,8GACI;QAQJ,8GACI;QAQJ,8GACI;QASJ,8GACI;QAUJ,0EACI;QAAA,8EACI;QAAA,gHAAoB;QACpB,gHAAmB;QACvB,4DAAS;QACb,4DAAM;QACV,4DAAO;QAEX,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGV,4DAAM;;QApIsC,2DAA0B;QAA1B,uFAA0B;QAI2E,0DAA4D;QAA5D,mLAA4D;QAC5K,0DAAsC;QAAtC,wGAAsC;QAQwF,0DAAyD;QAAzD,gLAAyD;QACvL,0DAAmC;QAAnC,qGAAmC;QAOxB,0DAAa;QAAb,2EAAa;QAUb,0DAAa;QAAb,2EAAa;QAiB4F,0DAA2D;QAA3D,kLAA2D;QAC/K,0DAAqC;QAArC,uGAAqC;QAO1B,0DAAa;QAAb,2EAAa;QAWb,0DAAY;QAAZ,0EAAY;QAaZ,0DAAY;QAAZ,0EAAY;QASZ,0DAAa;QAAb,2EAAa;QASb,0DAAa;QAAb,2EAAa;QAUb,0DAAY;QAAZ,0EAAY;QAatB,0DAAa;QAAb,2EAAa;QACb,0DAAY;QAAZ,0EAAY;;6FDrIjC,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,iBAAiB;IAE5B,SAAS,CACP,IAAY,EACZ,aAAqB;QAGrB,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3B,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CACxB,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3E,CAAC;;kFAbU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;ICgF6B,2EAAkE;IAAA,uDAAqB;IAAA,4DAAO;;;IAA5B,0DAAqB;IAArB,2FAAqB;;;;IAnBlJ,qEACI;IACA,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IAEvB,qEAAI;IAAA,oEAAG;IAAA,kEAAO;IAAA,4DAAI;IAAA,uDAAwB;IAAA,gEAAK;IAAA,oEAAG;IAAA,oEAAS;IAAA,4DAAI;IAAA,wDAAwB;IAAA,4DAAK;IAE5F,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA4B;IAAA,4DAAK;IACrC,sEAAI;IAAA,wDAAyB;IAAA,4DAAK;IAClC,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC7B,sEAAI;IAAA,wDAAe;IAAA,4DAAK;IAQxB,sEACI;IAAA,wDAAsB;IAAA,wEAAM;IAAA,wEAAY;IAAA,4DAAO;IAAA,iEAAI;IAAA,oHAAkE;IACzH,4DAAK;IAEL,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAA2B;IAAA,4DAAK;IACpC,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAuC;;IAAA,4DAAK;IAChD,sEAAI;IAAA,yEAAuD;IAA5B,iVAAuB;IAAC,4DAAI;IAAA,yEAAyC;IAAtC,iVAAuB;IAAe,gEAAI;IAAA,4DAAI;IAExG,yEAA+G;IAAnF,uVAA6B;IAAkD,4DAAI;IAEnH,4DAAK;IACL,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,2EACI;IAAA,0EAA+C;IAAA,+EAAmB;IAAA,4DAAK;IACvE,8EAC9B;IAAA,4EAAyB;IAAA,kEAAO;IAAA,4DAAO;IACzC,4DAAS;IACmB,4DAAM;IACN,2EACI;IAAA,iGACJ;IAAA,4DAAM;IACN,2EACI;IAAA,8EAC9B;IAAA,mEACF;IAAA,4DAAS;IACuB,8EAC9B;IADgG,mTAAsB;IACtH,oEACF;IAAA,4DAAS;IACmB,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IAxDG,0DAAc;IAAd,4EAAc;IAEA,0DAAwB;IAAxB,uHAAwB;IAAqB,0DAAwB;IAAxB,+GAAwB;IAEnF,0DAAuB;IAAvB,6GAAuB;IACvB,0DAA4B;IAA5B,kHAA4B;IAC5B,0DAAyB;IAAzB,+GAAyB;IACzB,0DAAoB;IAApB,0GAAoB;IACpB,0DAAe;IAAf,sGAAe;IASf,0DAAsB;IAAtB,gIAAsB;IAA6D,0DAAiC;IAAjC,qFAAiC;IAGpH,0DAAwB;IAAxB,8GAAwB;IACxB,0DAAuB;IAAvB,6GAAuB;IACvB,0DAAqB;IAArB,2GAAqB;IACrB,0DAAmB;IAAnB,yGAAmB;IACnB,0DAA2B;IAA3B,8HAA2B;IAC3B,0DAAwB;IAAxB,8GAAwB;IACxB,0DAAwB;IAAxB,8GAAwB;IACxB,0DAAuC;IAAvC,0LAAuC;;ADhF5D,MAAM,aAAa;IAQxB,YACU,MAAc,EACd,WAAkC,EAClC,MAAqB;QAFrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAe;QAP/B,kBAAa,GAAG;oDACkC,CAAC;IAO7C,CAAC;IAgBP,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,OAAO,CAAC,IAAS;QACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,yCAAyC;QACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IAC9C,CAAC;IAED,YAAY,CAAC,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEH,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CACjC,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACzC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAEC,0CAA0C;IAC5C,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE;oBACzC,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC;gBACtB,iDAAiD;gBACjD,gFAAgF;aAC/E;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEhB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;;0EA7EU,aAAa;6FAAb,aAAa;QCV1B,yEACI;QAAA,yEACI;QAAA,wEAAyB;QAC7B,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QACA,2EAA+B;QACnC,4DAAM;QAEN,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,oEAAG;QAAA,8GAAkD;QAAA,4DAAI;QAAA,4DAAK;QAClE,iEACA;QAAA,uEACI;QAAA,6EAA4E;QAA/B,sIAAS,iBAAa,MAAM,CAAC,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAChG,4DAAM;QACN,0EACI;QAEA,0EACI;QAAA,0EACI;QAAA,mEAAiC;QACrC,4DAAM;QAEN,2EACI;QAAA,6EACJ;QADyD,0LAA4B;QAAjF,4DACJ;QAAA,4DAAM;QAIN,8EAAsE;QAAA,iEAAK;QAAA,4DAAS;QACpF,8EAA6C;QAAA,iEAAK;QAAA,4DAAS;QAAA,qFAC/D;QAAA,4DAAM;QACV,4DAAM;QACN,iEAAI;QAAA,iEAAI;QAAA,iEACR;QACA,6EACI;QAAA,yEACI;QAAA,sEACI;QAAA,0EAAgB;QAAA,8DAAE;QAAA,4DAAK;QACvB,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,sEAAU;QAAA,4DAAK;QAC/B,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,0EAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,0EAAgB;QAAA,uEAAW;QAAA,4DAAK;QAChC,0EAAgB;QAAA,wEAAY;QAAA,4DAAK;QACjC,0EAAgB;QAAA,wEAAY;QAAA,4DAAK;QACjC,0EAAgB;QAAA,oEAAQ;QAAA,4DAAK;QAC7B,0EAAgB;QAAA,sEAAU;QAAA,4DAAK;QACnC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,4GACI;;QA0DR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAjGuE,2DAA4B;QAA5B,uFAA4B;QAkCjF,2DAAkD;QAAlD,mKAAkD;;6FDnD7D,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;;;;;;;;AEN0C;;;;AAOpC,MAAM,kBAAkB;IAC7B,YAAoB,MAAc,EAAU,WAAkC;QAA1D,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAuB;IAAG,CAAC;IAE5E,WAAW;;YACf,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAChD,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;aACzC;iBAAM;gBACH,OAAO,IAAI,CAAC;aACb;QACH,CAAC;KAAA;;oFAVU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAoD;;AAM7C,MAAM,iBAAiB;IAE5B,SAAS,CACP,IAAY,EACZ,WAAmB;QAGnB,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;YACzB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CACxB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvE,CAAC;;kFAbU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACJ;AACM;AACG;AACY;AACkB;AAC3B;AACM;AACA;AACI;AACM;AACf;AACG;AACA;AACS;AACH;AACW;AACA;AACsB;AAC/B;AACZ;;;AAE/D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,KAAK;QACX,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,+DAAY;KACrD;IACD;QACE,IAAI,EAAE,EAAE;QACR,WAAW,EAAE,CAAC,wFAAkB,CAAC;QACjC,SAAS,EAAE,qEAAc;KAC1B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,wEAAe;KACxD;IACD,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,oFAAmB,EAAE;IAChE,EAAE,IAAI,EAAE,mCAAmC,EAAE,SAAS,EAAE,sGAAyB,EAAE;IACnF,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,2EAAgB,EAAE;IACjE,EAAE,IAAI,EAAE,4BAA4B,EAAE,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,iFAAkB,EAAE;IAClG;QACE,IAAI,EAAE,WAAW;QACjB,WAAW,EAAE,CAAC,4EAAY,CAAC;QAC3B,SAAS,EAAE,iFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,iFAAkB;KAC3D;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,sFAAgB;KACzD;IACD;QACE,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,CAAC,4EAAY,CAAC;QAC1B,SAAS,EAAE,sFAAgB;KAC7B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,4FAAkB;KAC3D;IACD;QACE,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,gFAAc;KACvD;IACD;QACE,IAAI,EAAE,MAAM;QACZ,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,6EAAa;KACtD;IACD;QACE,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,gFAAc;KACvD;IACD;QACE,IAAI,EAAE,UAAU;QAChB,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,yFAAiB;KAC1D;IACD;QACE,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,sFAAgB;KACzD;IACD;QACE,IAAI,EAAE,WAAW;QACjB,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,iGAAiB;KAC1D;IACD;QACE,IAAI,EAAE,WAAW;QACjB,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,iGAAiB;KAC1D;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,WAAW,EAAE,CAAC,4EAAY,CAAC,EAAE,SAAS,EAAE,uHAAuB;KAChE;CAEF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGkB;;;;;;;;;ICuBhC,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC5D,sEAAkC;IAAA,8FAAmC;IAAA,4DAAM;;;IAF/E,0EACI;IAAA,kHAAqC;IACrC,kHAAkC;IACtC,4DAAM;;;IAFG,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAA4B;IAA5B,6FAA4B;;;IAYjC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IAClE,sEAAyC;IAAA,kGACzC;IAAA,4DAAM;;;IAHV,0EACI;IAAA,kHAAwC;IACxC,kHAAyC;IAE7C,4DAAM;;;IAHG,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAmC;IAAnC,oGAAmC;;;AD9BrE,MAAM,cAAc;IAWzB,YACS,WAAwB,EAAE,sCAAsC;IAChE,WAAkC,EAAE,2DAA2D;IAC/F,MAAc,EACb,KAAqB,EACrB,MAAqB;QAJtB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACb,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAe;QAb/B,2BAA2B;QAC3B,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;IAYlB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;YACrH,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE5D,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;YACvC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,EAAE;gBAClC,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;QAE3C,CAAC,EACC,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE;gBAC9C,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IAEJ,CAAC;IACD,yDAAyD;IACzD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;4EA7DhC,cAAc;8FAAd,cAAc;QCJ3B,yEACI;QAAA,yEACI;QAAA,oEACA;QAAA,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,0EACI;QADgD,0IAAY,eAAW,IAAC;QACxE,oEACA;QAAA,sEAAI;QAAA,sFAA0B;QAAA,4DAAK;QACnC,0EACI;QAAA,2EACI;QAAA,oEAA0B;QAC9B,4DAAM;QACN,2EACI;QACA,wEACA;QAAA,6GACI;QAGR,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,oEAA0B;QAC9B,4DAAM;QACN,2EACI;QACA,wEACA;QAAA,6GACI;QAIR,4DAAM;QACV,4DAAM;QAEN,wEACA;QAAA,qEACC;QAQL,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QAsDV,4DAAM;QACV,4DAAM;QACN,uEACA;;QArGgD,0DAAuB;QAAvB,oFAAuB;QASN,0DAAyD;QAAzD,+KAAyD;QACrF,0DAAmC;QAAnC,qGAAmC;QAYwG,0DAA4D;QAA5D,kLAA4D;QACvM,0DAAsC;QAAtC,wGAAsC;;6FD5B9D,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;;;;;;;;IC4BrD,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC5D,sEAAkC;IAAA,+FAClC;IAAA,4DAAM;;;IAHV,0EACI;IAAA,uHAAqC;IACrC,uHAAkC;IAEtC,4DAAM;;;IAHG,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAA4B;IAA5B,6FAA4B;;;ADpBtD,MAAM,mBAAmB;IAG9B,YACU,QAA+B,EAChC,WAAwB,EACxB,MAAc;QAFb,aAAQ,GAAR,QAAQ,CAAuB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAJvB,cAAS,GAAG,KAAK,CAAC;IAIS,CAAC;IAE5B,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;SACtH,CAAC,CAAC;IACL,CAAC;IACD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC/B,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtE,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK;SACvC;QACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;YAC9C,IAAI,MAAM,EAAE;gBACV,KAAK,CAAC,GAAG,CAAC;gBAEV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC,CAAC;aAC7D;iBAED;gBACE,KAAK,CAAC,GAAG,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;IAGL,CAAC;;sFA1CU,mBAAmB;mGAAnB,mBAAmB;QCVhC,qEACA;QAAA,qEACA;QAIA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAEI;QAAA,oEACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,oEAAsB;QACtB,4EACA;QAAA,qEAAsB;QAC1B,4DAAM;QAEN,0EACI;QAAA,sEAAI;QAAA,+EAAmB;QAAA,4DAAK;QAC5B,2EACI;QADqD,gJAAY,cAAU,IAAC;QAC5E,2EACI;QAAA,2EACI;QAAA,oEAA+B;QAC/B,wEACA;QAAA,kHACI;QAIR,4DAAM;QACV,4DAAM;QAEN,wEACA;QAAA,2EACI;QAAA,8EAAwD;QAAA,oEAAQ;QAAA,4DAAS;QAC7E,4DAAM;QACN,8EAAyD;QAAA,gEAAI;QAAA,4DAAS;QAG1E,4DAAO;QACX,4DAAM;QAEV,4DAAM;QACV,4DAAM;;QAxBkC,2DAA4B;QAA5B,yFAA4B;QAII,0DAAyD;QAAzD,+KAAyD;QACpG,0DAAmC;QAAnC,qGAAmC;;6FDlBnD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkD;;;;;;;;;ICgBhE,sEAAsC;IAAA,yEAAc;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,qHAAsC;IAC1C,4DAAM;;;IADG,0DAAgC;IAAhC,iGAAgC;;;IAarC,sEAAwC;IAAA,2EAAgB;IAAA,4DAAM;;;IADlE,0EACI;IAAA,qHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IAWvC,sEAAuC;IAAA,8EAAmB;IAAA,4DAAM;;;IADpE,0EACI;IAAA,qHAAuC;IAC3C,4DAAM;;;IADG,0DAAiC;IAAjC,kGAAiC;;;IAWtC,sEAAwC;IAAA,+EAAoB;IAAA,4DAAM;;;IADtE,0EACI;IAAA,qHAAwC;IAC5C,4DAAM;;;IADG,0DAAkC;IAAlC,mGAAkC;;;IAWvC,sEAAqC;IAAA,4EAAiB;IAAA,4DAAM;;;IADhE,0EACI;IAAA,qHAAqC;IACzC,4DAAM;;;IADG,0DAA+B;IAA/B,gGAA+B;;;IAcpC,sEAAsC;IAAA,6EAAkB;IAAA,4DAAM;;;IADlE,0EACI;IAAA,qHAAsC;IAC1C,4DAAM;;;IADG,0DAAgC;IAAhC,iGAAgC;;;IAiBrC,sEAAsC;IAAA,6EAAkB;IAAA,4DAAM;;;IADlE,0EACI;IAAA,qHAAsC;IAC1C,4DAAM;;;IADG,0DAAgC;IAAhC,iGAAgC;;;ADlFlE,MAAM,iBAAiB;IAM5B,YACU,WAAwB,EACxB,WAAkC,EAClC,MAAc,EACd,MAAqB;QAHrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAT/B,cAAS,GAAG,KAAK,CAAC;IAUlB,CAAC;IAED,oCAAoC;IACpC,WAAW;QACT,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IACD,oDAAoD;IACpD,oCAAoC;IACpC,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7C,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,oCAAoC;IACpC,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oCAAoC;IACpC,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAI,+BAA+B;QACzD,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,OAAO,EAAE;gBACzC,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,2BAA2B;YAC3B,OAAO;SACR;aACI;YACH,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACrE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,EAAE;oBAC3C,OAAO,EAAE,IAAI;iBACd,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;;kFA1DU,iBAAiB;iGAAjB,iBAAiB;QCb9B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACA;QAAA,qEAAI;QAAA,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;QAAA,4DAAK;QACrC,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,wEAA6B;QAAA,oEAAQ;QAAA,4DAAK;QAC1C,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,2EACI;QACA,qEACA;QAAA,wEACA;QACA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EAEI;QAAA,uEACA;QAAA,wEACA;QACA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,iEAAK;QAAA,uEACL;QAAA,wEACA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,iEAAK;QAAA,sEACL;QAAA,wEACA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QAAA,iEAAI;QAAA,iEAAK;QAAA,2EACT;QAAA,wEACA;QAAA,gHACI;QAER,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QACA,iEAAI;QAAA,iEACJ;QAAA,0EACI;QAAA,2EACI;QAAA,oEACA;QAAA,wEACA;QAAA,gHACI;QAEJ,gFACI;QAAA,8EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,iEAAI;QAAA,iEACJ;QAAA,0EACI;QAAA,2EACI;QAAA,oEACA;QAAA,wEACA;QAAA,gHACI;QAEJ,gFACI;QAAA,8EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACxC,4DAAW;QACf,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,iEAAI;QAAA,iEACJ;QAAA,2EACI;QAAA,8EAAuD;QAA/C,0IAAS,gBAAY,IAAC;QAAyB,+DAAG;QAAA,4DAAS;QACvE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA5GkC,0DAAyB;QAAzB,sFAAyB;QAQ0E,0DAA0D;QAA1D,iLAA0D;QAEhK,0DAAoC;QAApC,sGAAoC;QAWoE,0DAA4D;QAA5D,mLAA4D;QAEpK,0DAAsC;QAAtC,wGAAsC;QAUkE,0DAA2D;QAA3D,kLAA2D;QACnK,0DAAqC;QAArC,uGAAqC;QAUqD,0DAA4D;QAA5D,mLAA4D;QACtJ,0DAAsC;QAAtC,wGAAsC;QAUkD,0DAAyD;QAAzD,gLAAyD;QACjJ,0DAAmC;QAAnC,qGAAmC;QAa4C,0DAA0D;QAA1D,iLAA0D;QACzI,0DAAoC;QAApC,sGAAoC;QAgB4C,2DAA0D;QAA1D,iLAA0D;QAC1I,0DAAoC;QAApC,sGAAoC;;6FDjF5D,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;IC+B5C,sEAAoC;IAAA,2EAAgB;IAAA,4DAAM;;;IAC1D,sEAAqC;IAAA,6FAAkC;IAAA,4DAAM;;;IAC7E,sEAAqC;IAAA,uGAA4C;IAAA,4DAAM;;;IACvF,sEAAmC;IAAA,+FAAoC;IAAA,4DAAM;;;IAJjF,0EACI;IAAA,6HAAoC;IACpC,6HAAqC;IACrC,6HAAqC;IACrC,6HAAmC;IACvC,4DAAM;;;IAJG,0DAA8B;IAA9B,+FAA8B;IAC9B,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAA+B;IAA/B,gGAA+B;IAC/B,0DAA6B;IAA7B,8FAA6B;;;ADzBnD,MAAM,yBAAyB;IAKpC,YACU,QAA+B,EAC/B,WAAwB,EACxB,MAAc,EACd,KAAqB;QAHrB,aAAQ,GAAR,QAAQ,CAAuB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAP/B,cAAS,GAAG,KAAK,CAAC;IAOiB,CAAC;IAEpC,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACzB,2BAA2B;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SACpH,CAAC,CAAC;IACL,CAAC;IACD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC/B,OAAO;SACR;QACD,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI;SACxC,CAAC;QAEF,yDAAyD;QACzD,uBAAuB;QACvB,MAAM;QACN,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACxB,IAAI,MAAM,EAAE;gBAEV,KAAK,CAAC,GAAG,CAAC;gBACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACzD;iBAAM;gBACL,KAAK,CAAC,GAAG,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kGAnDU,yBAAyB;yGAAzB,yBAAyB;QCVtC,qEACA;QAAA,qEACA;QAIA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAEI;QAAA,oEACJ;QAAA,4DAAM;QACV,4DAAM;QAEN,yEACI;QAAA,oEAAsB;QACtB,yEACA;QAAA,qEAAsB;QAC1B,4DAAM;QAEN,0EACI;QAAA,sEAAI;QAAA,+EAAmB;QAAA,4DAAK;QAE5B,2EACR;QADiE,sJAAY,cAAU,IAAC;QACxF,2EACY;QAAA,2EACI;QAAA,oEAA+B;QAC/B,wEAGA;QAAA,wHACI;QAKR,4DAAM;QACN,4DAAM;QAEN,2EACX;QAAA,8EACsC;QAAA,kEAAM;QAAA,4DAAS;QACtD,4DAAM;QACM,8EAAgF;QAAA,gEAAI;QAAA,4DAAS;QAOjG,4DAAO;QACX,4DAAM;QACV,4DAAM;QAEV,4DAAM;;QA/BkC,2DAA4B;QAA5B,yFAA4B;QAM5C,0DAAwD;QAAxD,8KAAwD;QACvD,0DAAkC;QAAlC,oGAAkC;;6FDrB9C,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n\n@Pipe({\n    name: 'tableFilter'\n\n})\nexport class TableFilterPipe implements PipeTransform {\n    transform(\n        user: any,\n        search_id: string\n    ): User[] {\n\n        if (!user || !search_id) {\n            return user;\n        }\n        return user.filter(user =>\n            user.userId.toLowerCase().indexOf(search_id.toLowerCase()) !== -1);\n\n    }\n\n}\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-signupotp',\n  templateUrl: './signupotp.component.html',\n  styleUrls: ['./signupotp.component.css']\n})\nexport class SignupotpComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  signupotpForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.signupotpForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.signupotpForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.signupotpForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.signupotpForm.value.code\n    };\n\n    this.authServ.verifyOTPEmail(user).subscribe(data => {\n      console.log(data);\n      const status = data.status;\n      const msg = data.msg;\n      if (status) {\n\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status)\n        this.router.navigate(['profile', this.email]);\n      } else {\n        alert(msg);\n      }\n    });\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"signupotpForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/register-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","// import { Observable, throwError } from 'rxjs';\n// import { catchError, retry } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,HttpEvent, HttpErrorResponse, HttpEventType  } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { Map } from './map';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapserviceService {\n  constructor(private http: HttpClient) { \n}\n\nprivate  apiurl = \"https://asasa.com/api/property\";\nreadData(): Observable<any> {\n  return this.http.get(this.apiurl);\n}\n\n}","import { Component, AfterViewInit, OnInit } from '@angular/core';\nimport { ROUTES } from './menu-items';\nimport { RouteInfo } from './sidebar.metadata';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n//declare var $: any;\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html'\n})\nexport class SidebarComponent implements OnInit {\n  showMenu = '';\n  showSubMenu = '';\n  public sidebarnavItems:RouteInfo[]=[];\n  // this is for the open close\n  addExpandClass(element: string) {\n    if (element === this.showMenu) {\n      this.showMenu = '0';\n    } else {\n      this.showMenu = element;\n    }\n  }\n\n  constructor(\n    private modalService: NgbModal,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  // End open close\n  ngOnInit() {\n    this.sidebarnavItems = ROUTES.filter(sidebarnavItem => sidebarnavItem);\n  }\n}\n","<nav class=\"sidebar-nav\">\n    <ul id=\"sidebarnav\">\n        <!-- First level menu -->\n        <li class=\"sidebar-item\" [class.active]=\"showMenu === sidebarnavItem.title\" *ngFor=\"let sidebarnavItem of sidebarnavItems\"\n            [routerLinkActive]=\"sidebarnavItem.submenu.length != 0 ? '' : 'active'\">\n            <div class=\"nav-small-cap\" *ngIf=\"sidebarnavItem.extralink === true\">{{sidebarnavItem.title}}</div>\n            <a class=\"sidebar-link waves-effect waves-dark\" [routerLink]=\"sidebarnavItem.class === '' ? [sidebarnavItem.path] : null\"\n                [ngClass]=\"[sidebarnavItem.class]\" *ngIf=\"!sidebarnavItem.extralink;\" (click)=\"addExpandClass(sidebarnavItem.title)\"\n                [routerLinkActive]=\"sidebarnavItem.submenu.length != 0 ? '' : 'active'\">\n                <i [ngClass]=\"[sidebarnavItem.icon]\"></i>\n                <span class=\"hide-menu\">{{sidebarnavItem.title}}</span>\n            </a>\n        </li>\n    </ul>\n</nav>\n","import { Component, EventEmitter, Output } from '@angular/core';\n//declare var $: any;\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html'\n})\nexport class NavigationComponent {\n  @Output()\n  toggleSidebar = new EventEmitter<void>();\n\n  public showSearch = false;\n\n  constructor() {}\n}\n","<!-- ============================================================== -->\n<!-- toggle and nav items -->\n<!-- ============================================================== -->\n<ul class=\"navbar-nav float-left mr-auto\">\n  <li class=\"nav-item d-none d-md-block d-lg-none\">\n    <a\n      (click)=\"toggleSidebar.emit()\"\n      class=\"nav-link sidebartoggler waves-effect waves-light\"\n      href=\"javascript:void(0)\"\n    >\n      <i class=\"mdi mdi-menu font-24\"></i>\n    </a>\n  </li>\n  <!-- ============================================================== -->\n  <!-- Search -->\n  <!-- ============================================================== -->\n  <li class=\"nav-item search-box\">\n    <a\n      (click)=\"showSearch = !showSearch\"\n      class=\"nav-link waves-effect waves-dark\"\n      href=\"javascript:void(0)\"\n    >\n      <i class=\"ti-search\"></i>\n    </a>\n    <form\n      class=\"app-search position-absolute\"\n      [ngClass]=\"{ 'show-search': showSearch }\"\n    >\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search &amp; enter\"\n      />\n      <a class=\"srh-btn\" (click)=\"showSearch = !showSearch\">\n        <i class=\"ti-close\"></i>\n      </a>\n    </form>\n  </li>\n</ul>\n<!-- ============================================================== -->\n<!-- Right side toggle and nav items -->\n<!-- ============================================================== -->\n<ul class=\"navbar-nav float-right\">\n  <!-- ============================================================== -->\n  <!-- User profile and search -->\n  <!-- ============================================================== -->\n  <li class=\"nav-item dropdown\" ngbDropdown placement=\"bottom-right\">\n    <a\n      ngbDropdownToggle\n      class=\"nav-link dropdown-toggle text-muted waves-effect waves-dark pro-pic\"\n      href=\"javascript:void(0)\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n    >\n      <img\n        src=\"assets/1.jpg\"\n        alt=\"user\"\n        class=\"rounded-circle\"\n        width=\"31\"\n      />\n    </a>\n    <div class=\"dropdown-menu user-dd\" ngbDropdownMenu>\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"ti-user m-r-5 m-l-5\"></i> My Profile</a\n      >\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"ti-wallet m-r-5 m-l-5\"></i> My Balance</a\n      >\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"ti-email m-r-5 m-l-5\"></i> Inbox</a\n      >\n      <div class=\"dropdown-divider\"></div>\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"ti-settings m-r-5 m-l-5\"></i> Account Setting</a\n      >\n      <div class=\"dropdown-divider\"></div>\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n        <i class=\"fa fa-power-off m-r-5 m-l-5\"></i> Logout</a\n      >\n      <div class=\"dropdown-divider\"></div>\n      <div class=\"p-l-30 p-10\">\n        <a href=\"javascript:void(0)\" class=\"btn btn-sm btn-success btn-rounded\"\n          >View Profile</a\n        >\n      </div>\n    </div>\n  </li>\n  <!-- ============================================================== -->\n  <!-- User profile and search -->\n  <!-- ============================================================== -->\n</ul>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import { User } from '../login/User';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport jwt_decode from 'jwt-decode';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  private readonly url = 'https://my-asasa.herokuapp.com';\n  user: any;\n  form_title: any;\n  genericId: any;\n\n  constructor(private httpClient: HttpClient, public router: Router) {\n  }\n\n  //////////// Send data to inventory using inventory form /////////////\n  createInventory(user: any) {\n    console.log('Create user func');\n    return this.httpClient\n      .post(`${this.url}/inventory/add`, user)\n      .pipe(catchError(this.handleError));\n  }\n  // Set inventory form title\n  setFormTitle(name) {\n    this.form_title = name;\n  }\n  // Get inventory form title\n  getFormTitle() {\n    return this.form_title;\n  }\n  removeFormTitle(){\n    this.form_title = null;\n  }\n  /////////////// Get data from inventory to the inventory table ////////////\n  getInventory() {\n    return this.httpClient.get<any>(`${this.url}/inventory`);\n  }\n  ///////// Getting user table data //////////////\n  getUsers() {\n    return this.httpClient.get<any>(`${this.url}/users`);\n  }\n\n  getLeads() {\n    return this.httpClient.get<any>(`${this.url}/leads`);\n  }\n\n  // Function to get all data from Leads, Inventory i.e; both\n  getAll(){\n    \n    return this.httpClient.get<any>(`${this.url}/inventory/all`);\n  }\n  // Function to call delete api for the user data table\n  deleteUser(id) {\n    console.log('Calling deleteUser', id);\n    return this.httpClient.delete<any>(\n      `https://my-asasa.herokuapp.com/users/${id}`\n    );\n  }\n  ////////////// Send new row table data /////////////\n  createUsers(user: any) {\n    console.log('Create user func', user);\n    if(user instanceof File) {\n      const formData = new FormData();\n      formData.append('images', user);\n      return this.httpClient\n      .post(`${this.url}/users/save`, formData);\n    } else {\n      return this.httpClient\n      .post(`${this.url}/users/save`, user)\n      .pipe(catchError(this.handleError));\n    }\n  }\n  // create service to get and set the token to local storage\n\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getDecodedToken(token: string): any {\n    try {\n      // console.log(token);\n      return jwt_decode(token);\n    } catch (Error) {\n      console.log(Error);\n      return null;\n    }\n  }\n  getToken() {\n    return localStorage.getItem('token');\n    // console.log('token:\\t', token);\n    // return token;\n  }\n\n  // Function to delete the single inventory\n  deleteInventory(id) {\n    console.log('Calling deleteInventory', id);\n    return this.httpClient.delete<any>(\n      `https://my-asasa.herokuapp.com/inventory/${id}`\n    );\n  }\n\n  // Getting cities names from api\n  getCities() {\n    return this.httpClient.get<any>(`https://asasa.com/api/get_cities`);\n  }\n\n  // Getting Locations names\n  getLocations() {\n    return this.httpClient.get<any>(`https://asasa.com/api/get_locations`);\n  }\n\n  // Function to set user from user/inventory table to update\n  setUser(user: any) {\n    this.user = user;\n  }\n  // Function to get user from user/inventory table to update\n  getUser() {\n    return this.user;\n  }\n  removeUser() {\n    this.user = null;\n  }\n\n  // Api call to Update the already existed user/agent in the user component\n  updateUser(id, data) {\n    return this.httpClient.put(\n      `https://my-asasa.herokuapp.com/users/${id}`,\n      data\n    );\n  }\n  // Update a single Inventory\n  updateInventory(id, data) {\n    console.log('Calling updateInventory', id);\n    return this.httpClient.put(\n      `https://my-asasa.herokuapp.com/inventory/${id}`,\n      data\n    );\n  }\n  ///////// Function to Register the new user /////////////\n  register(user: any): Observable<any> {\n    return this.httpClient\n      .post(`${this.url}/users/register`, user);\n  }\n  /* API Call to verify otp code */\n  ////// Verifying the email address while signing the user up ///////////////////\n  verifyOTPEmail(user: any): Observable<any> {\n    return this.httpClient\n      .post(`${this.url}/users/verifyemail`, user)\n      .pipe(catchError(this.handleError));\n  }\n  ///////// Verifying the user using otp code to his gmail to change his/her password /////////////\n  verifyOTPCode(user: any): Observable<any> {\n    return this.httpClient\n      .post(`${this.url}/users/verifyotpcode`, user)\n      .pipe(catchError(this.handleError));\n  }\n  ///////////// Adding new password after forgetting the old password ////////\n  newpassword(user: any): Observable<any> {\n    return this.httpClient\n      .post(`${this.url}/users/newpassword`, user)\n      .pipe(catchError(this.handleError));\n  }\n\n  /////////// Function to Login the already existed user /////////////\n  public login(user: any): Observable<any> {\n    return this.httpClient.post(`${this.url}/users/login`, user);\n  }\n\n  ///////////// Verify User Email ////////////////\n  verifyEmail(body: any): Observable<any> {\n    return this.httpClient.post(`${this.url}/users/verifyemail`, body);\n  }\n\n  /////////////// Get Users Token //////////////////////////\n  getAccessToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  get isLoggedIn(): boolean {\n    const authToken = localStorage.getItem('access_token');\n    return authToken !== null ? true : false;\n  }\n  ////////// Logout Function ////////////////\n  logout() {\n    if (localStorage.removeItem('access_token') == null) {\n      this.router.navigate(['users/login']);\n    }\n  }\n  ///////////////////////////////////////////\n\n  ///////// Get Profile Function ////////////\n  getUserProfile(id): Observable<any> {\n    return this.httpClient\n      .get(`${this.url}/user/profile/${id}`, { headers: this.headers })\n      .pipe(\n        map((res: Response) => {\n          return res || {};\n        }),\n        catchError(this.handleError)\n      );\n  }\n  ///////////////////////////////////////////\n\n  ///////// Error Handling /////////////////\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n  // ////////////////////////////////////////\n\n  setGenericId(id) {\n    this.genericId = id;\n  }\n\n  getGenericId() {\n    return this.genericId;\n  }\n  // ////////////////////////////////////////\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\n\nclass ImageSnippet {\n  constructor(public src: string, public file: File) {}\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n\n  email: string;\n  tokendata: any;\n  url: string | ArrayBuffer;\n  selectedFile: ImageSnippet;\n\n  constructor(public router: Router, private route: ActivatedRoute, public authService: AuthenticationService) { }\n  username = this.router.url;\n\n  ngOnInit(){\n    this.tokenization();\n  }\n\n  async tokenization()\n  {\n    const token = await this.authService.getToken();\n    const decodedToken = await this.authService.getDecodedToken(token);\n    this.tokendata = decodedToken.data;\n    // console.log(this.tokendata);\n  }\n\n  onSelectFile(event) {\n    if (event.target.files && event.target.files[0]) {\n      const file: File = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (event: any) => {\n        this.selectedFile = new ImageSnippet(event.target.result, file);\n      });\n      reader.readAsDataURL(file);\n    }\n  }\n\n  // Function to Update Profile Image\n  updateImage() {\n    console.log('Save Image', this.selectedFile);\n    console.log(this.tokendata._id);\n    this.authService.updateUser(this.tokendata._id, this.selectedFile.file).subscribe((res) => {\n      console.log('Subscribed data: ', res);\n    });\n\n  }\n}\n","<!-- <div id=\"main-wrapper\" [ngClass]=\"{ 'show-sidebar': showMobileMenu }\" dir=\"ltr\" data-theme=\"light\"\n  data-layout=\"vertical\" [attr.data-sidebartype]=\"sidebartype\" data-sidebar-position=\"absolute\"\n  data-header-position=\"fixed\" data-boxed-layout=\"full\">\n  <header class=\"topbar\" data-navbarbg=\"skin6\">\n    <nav class=\"d-flex top-navbar navbar-expand-md navbar-light\">\n      <div class=\"navbar-header\" [ngClass]=\"expandLogo ? 'expand-logo' : ''\" data-logobg=\"skin6\">\n        <a (click)=\"showMobileMenu = !showMobileMenu\"\n          class=\"nav-link sidebartoggler waves-effect waves-light d-block d-md-none\" href=\"javascript:void(0)\">\n          <i class=\"mdi mdi-menu font-24 text-dark\" [ngClass]=\"showMobileMenu ? 'ti-close' : 'ti-menu'\"></i>\n        </a>\n        <a class=\"navbar-brand\" href=\"/\">\n          <b class=\"logo-icon d-block d-md-none d-lg-block\">\n            <img src=\"assets/asasa/asasa_logo.png\" alt=\"homepage\" class=\"dark-logo\"\n              style=\"width: 150px; height: 40px;\" />\n          </b>\n          <span class=\"logo-text d-none d-md-block d-lg-none\">\n            <img src=\"assets/asasa/asasa.gif\" class=\"dark-logo\" alt=\"homepage\"\n              style=\"width: 40px; height: 40px;\" />\n          </span>\n        </a>\n        <a class=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"javascript:void(0)\"\n          data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <i class=\"ti-more\"></i>\n        </a>\n      </div>\n      <div class=\"navbar-collapse collapse\" id=\"navbarSupportedContent\" data-navbarbg=\"skin6\">\n        <app-navigation (toggleSidebar)=\"toggleSidebarType()\" class=\"w-100\"></app-navigation>\n      </div>\n    </nav>\n  </header>\n  <aside class=\"left-sidebar\" data-sidebarbg=\"skin1\" (mouseover)=\"Logo()\" (mouseout)=\"Logo()\">\n    <div class=\"scroll-sidebar\" [perfectScrollbar]=\"config\">\n      <app-sidebar></app-sidebar>\n    </div>\n  </aside>\n  <div class=\"page-wrapper\">\n    <div class=\"container-fluid\">\n      <div class=\"row mt-5\">\n        <div class=\"col-md-8 col-lg-10 col-xl-6\">\n          <div class=\"content\">\n            <div class=\"card\">\n                <div class=\"firstinfo\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" />\n                    <div class=\"profileinfo\">\n                        <h1>John Doe</h1>\n                        <h3>Swift developer</h3>\n                        <p class=\"bio\">Lived all my life on the top of mount Fuji, learning the way to be a Ninja Dev.</p>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mt-5\">\n        <div class=\"col-md-8 col-lg-10 col-xl-6 offset-md-4 offset-lg-2 col offset-xl-6\">\n          <div class=\"content\">\n            <div class=\"card\">\n                <div class=\"firstinfo\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" />\n                    <div class=\"profileinfo\">\n                        <h1>John Doe</h1>\n                        <h3>Swift developer</h3>\n                        <p class=\"bio\">Lived all my life on the top of mount Fuji, learning the way to be a Ninja Dev.</p>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<div>\n    <app-header></app-header>\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <app-dashboard></app-dashboard>\n        </div>\n\n        <div class=\"col-md-10\">\n            <div class=\"main main-raised\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"content\">\n                            <div class=\"card\">\n                                <div class=\"firstinfo\">\n                                    <img *ngIf=\"!selectedFile\" src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" />\n                                    <img *ngIf=\"selectedFile\" [src]=\"selectedFile.src\" />\n                                    <div class=\"profileinfo\">\n                                        <h1>{{tokendata?.fullname}}</h1>\n                                        <span class=\" badge badge-warning\">{{tokendata?.access}}</span>\n\n                                        <p class=\"bio\">Lived all my life on the top of mount Fuji, learning the way to be a Ninja Dev.</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-8 col-lg-6\">\n                        <div class=\"profile\">\n\n                            <div class=\"upload-btn-wrapper  text-center input-container\" style=\"float: left;\">\n                                <button (click)=\"file.click()\" class=\"btn text-center mr-2\" style=\"width: 100px;\">\n                    <i class=\"fa fa-camera\" aria-hidden=\"true\">&nbsp;</i>\n                    <span class=\"upload\"><b>Upload</b></span>\n                  </button>\n                                <input #file type='file' class=\"fileField\" (change)=\"onSelectFile($event)\"><br><br>\n                            </div>\n                            <div class=\"upload-btn-wrapper  text-center\" style=\" float: left; margin-top: 15px;\">\n                                <button (click)=\"updateImage()\" class=\"btn text-center mr-2\" style=\"width: 100px;\">\n                    <i class=\"fa fa-save\">&nbsp;</i>\n                    <span class=\"upload\"><b>Save</b></span>\n                  </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-10\">\n                        <div class=\"content\">\n                            <div class=\"card1\">\n                                <div class=\"firstinfo\">\n                                    <div class=\"profileinfo mt-4\">\n                                        <h2 class=\"bio d-flex justify-content-center align-item-center text-dark\"><b>Email #:</b> &nbsp;&nbsp;&nbsp;&nbsp;{{tokendata?.email}}</h2>\n                                        <h2 class=\"bio d-flex justify-content-center align-item-center text-dark\"><b>Contact #:</b> &nbsp;&nbsp;&nbsp;+92{{tokendata?.contact}}</h2>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter04'\n})\nexport class TableFilter04Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],,\n    user: any,\n    search_type: string\n  ): User[] {\n\n    if (!user || !search_type) {\n      return user;\n    }\n    return user.filter(user =>\n      user.contact.toLowerCase().indexOf(search_type.toLowerCase()) !== -1);\n\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  mapbox: {\n    accessToken: 'pk.eyJ1IjoiYmFiYXJic2NzMzI2MSIsImEiOiJja2N2dHR2MGUwN21iMnhydXlvcXA2MTlmIn0.gympgF_-zALE5J5MyZH3fQ'\n  },\n  url: 'https://shaisecommercestore.herokuapp.com/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter02'\n})\nexport class TableFilter02Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],\n    user: any,\n    search_location: string\n  ): User[] {\n\n    if (!user || !search_location) {\n      return user;\n    }\n    return user.filter(user =>\n      user.location.toLowerCase().indexOf(search_location.toLowerCase()) !== -1);\n\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter06'\n})\nexport class TableFilter06Pipe implements PipeTransform {\n\n  transform(\n    // user: User[],,\n    user: any,\n    search_client: string\n  ): User[] {\n\n    if (!user || !search_client) {\n      return user;\n    }\n    return user.filter(user =>\n      user.fullname.toLowerCase().indexOf(search_client.toLowerCase()) !== -1);\n\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from './../../login/user';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n  general_search: string;\n  data: any;\n  deleteId: any;\n\n  constructor(\n    // private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {}\n  user: any;\n  ngOnInit(): void {\n    this.getUserList();\n  }\n  setUser(user: any) {\n    this.authService.setUser(user);\n    this.router.navigateByUrl('/register');\n  }\n  \n  // Function to call User data table\n  getUserList() {\n    this.authService.getUsers().subscribe(\n      (data) => {\n        this.data = data;\n        console.log('User Get Response', this.data);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  confirmID(id: any) {\n    console.log(id);\n    this.deleteId = id;\n  }\n\n    // Function to delete the single inventory\n    deleteLead(){\n      console.log(this.deleteId);\n  \n      this.authService.deleteUser(this.deleteId).subscribe(data => {\n        console.log(data);\n        if (data.code === 200) {\n          this.toastr.success(data.message, 'Success', {\n              timeOut: 5000\n            });\n            this.getUserList();\n        //   for ( let i = 0; i < this.user.length; i++){\n        //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\n        }\n  \n      });\n    }\n\n  // deleteUser(id) {\n  //   console.log('Calling deleteInventory', id);\n\n  //   this.authService.deleteUser(id).subscribe((data) => {\n  //     console.log(data);\n  //     if (data.code === 200) {\n  //       this.toastr.success(data.message, 'Success', {\n  //         timeOut: 5000,\n  //       });\n  //       for (let i = 0; i < this.data.length; i++) {\n  //         if (this.data[i]._id === id) {\n  //           this.data.splice(i, 1);\n  //           i--;\n  //         }\n  //       }\n  //     } else {\n  //       this.toastr.error(data.message, 'Error', {\n  //         timeOut: 5000,\n  //       });\n  //     }\n  //   });\n  // }\n  // isLogin() {\n\n  //   const token = this.authService.getToken();\n  //   return token;\n  // }\n  // tslint:disable-next-line: typedef\n  // logout() {\n  //   localStorage.removeItem('token');\n  //   console.log('\\nlogout\\n');\n  //   this.router.navigateByUrl('/');\n  // }\n}\n","<div class=\"\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <app-header></app-header>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-2\">\n            <!-- <app-header></app-header> -->\n            <app-dashboard></app-dashboard>\n        </div>\n        <div class=\"col-10\">\n            <div class=\"user-class\">\n                <br>\n                <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Users</b></h1>\n                <br>\n\n                <div class=\"row\">\n                    <div class=\"col-2\">\n                        <button class=\"btn btn-primary rounded-pill\" routerLink=\"/register\">Add New</button>\n                    </div>\n                    <div class=\"col-4\">\n                        <div class=\"card-body \">\n\n                            <input class=\"form-control\" type=\"search\" [(ngModel)]=\"general_search\" placeholder=\"Search topics or keywords\">\n\n                        </div>\n                    </div>\n                </div>\n                <br><br><br>\n                <!-- Inventory management table is below -->\n                <table class=\"table table-hover\" class=\"table table-hover table-light\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">User ID</th>\n                            <th scope=\"col\">Full Name</th>\n                            <th scope=\"col\">Contact #</th>\n                            <th scope=\"col\">Location Assigned</th>\n                            <th scope=\"col\">Email Address</th>\n                            <th scope=\"col\">Access</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Operations</th>\n\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <!-- <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.userId\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.fullname\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.contact\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"data.location\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td> -->\n\n                        <tr *ngFor=\"let user of data | filter: general_search\">\n                            <!-- | tableFilter06: data.fullname | tableFilter04: data.contact | tableFilter02: data.location | tableFilter: data.userId | filter: general_search\"> -->\n                            <td>{{ user?._id }}</td>\n                            <td>\n                                <span *ngIf=\"user.fullname\">{{ user.fullname | titlecase }}</span>\n                                <span *ngIf=\"!user.fullname\">{{ user.name | titlecase }}</span>\n                            </td>\n                            <td>0{{ user.contact }}</td>\n                            <!-- <td>{{ user.location}}</td> -->\n\n                            <td>\n                                {{user.city?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},  </span>\n                            </td>\n                            <td>{{ user.email }}</td>\n                            <td>{{user?.access}}</td>\n                            <td>{{user?.created | date: \"dd/MM/yyyy\"}}</td>\n\n                            <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i><a (click)=\"setUser(user)\" role=\"button\">Edit</a>\n\n                                <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\n\n                            </td>\n                            <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\" role=\"document\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                                        </div>\n                                        <div class=\"modal-body\">\n                                            Are you sure you want to delete it?\n                                        </div>\n                                        <div class=\"modal-footer\">\n                                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n          Close\n        </button>\n                                            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLead()\">\n          Delete\n        </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </tr>\n                    </tbody>\n                </table>\n                <!-- end of table -->\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-leads',\n  templateUrl: './leads.component.html',\n  styleUrls: ['./leads.component.css']\n})\nexport class LeadsComponent implements OnInit {\n  user: any;\n  savedId: any;\n\n  withAutofocus = `<button type=\"button\" ngbAutofocus class=\"btn btn-danger\"\n      (click)=\"modal.close('Ok click')\">Ok</button>`;\n  deleteId: any;\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    private toastr: ToastrService\n    ) { }\n  search_id: string;\n  search_client: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n  search_area: string;\n\n  ngOnInit(): void {\n    this.getLeadsList();\n  }\n  \n  setUser(user: any){\n    this.authService.setUser(user);\n    this.authService.setFormTitle('Lead');\n    this.router.navigateByUrl('/add-inventories');\n    }\n    \n    setFormTitle(name){\n      this.authService.setFormTitle(name);\n      this.router.navigate(['/add-inventories']);\n    }\n    \n  getLeadsList() {\n    this.authService.getLeads().subscribe(\n      (data) => {\n        this.user = data.leads;\n        console.log('Server response: ', this.user);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n    // Function to delete the single inventory\n  deleteLead(){\n    console.log(this.deleteId);\n\n    this.authService.deleteInventory(this.deleteId).subscribe(data => {\n      console.log(data);\n      if (data.code === 200) {\n        this.toastr.success(data.message, 'Success', {\n            timeOut: 5000\n          });\n          this.getLeadsList();\n      //   for ( let i = 0; i < this.user.length; i++){\n      //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\n      }\n\n    });\n  }\n\n  confirmID(id) {\n    console.log(id);\n\n    this.deleteId = id;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-header></app-header>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-2\">\n        <!-- <app-header></app-header> -->\n        <app-dashboard></app-dashboard>\n    </div>\n    <!-- </div> -->\n    <div class=\"col-md-10 \">\n        <div class=\"leads\">\n            <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Leads Management</b></h1>\n            <br>\n            <div>\n                <button class=\"btn btn-primary rounded-pill\" (click)=\"setFormTitle('Lead')\">Add New</button>\n            </div>\n            <div class=\"pull-right\">\n                <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\n                <div class=\"card-body row\">\n                    <div class=\"col-auto\">\n                        <i class=\"fa fa-search icon\"></i>\n                    </div>\n                    <!--end of col-->\n                    <div class=\"col\">\n                        <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\" placeholder=\"Search topic or keyword\">\n                    </div>\n\n                    <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\n\n                    <button onclick=\"window.print()\" class=\"btn btn-primary rounded-pill\">Print</button>\n                    <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                </div>\n            </div>\n            <br><br><br>\n            <!-- Inventory management table is below -->\n            <table class=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Client</th>\n                        <th scope=\"col\">Type</th>\n                        <th scope=\"col\">Purpose</th>\n                        <th scope=\"col\">Prop. Type</th>\n                        <th scope=\"col\">Prop. #</th>\n                        <th scope=\"col\">Area</th>\n                        <th scope=\"col\">Location</th>\n                        <th scope=\"col\">Demand</th>\n                        <!-- <th scope=\"col\">Phone #</th>\n                        <th scope=\"col\">Comment</th>\n                        <th scope=\"col\">Assigned To</th>\n                        <th scope=\"col\">Admin Status</th>\n                        <th scope=\"col\">Agent Status</th> -->\n                        <th scope=\"col\">Added On</th>\n                        <th scope=\"col\">Operations</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <!-- <tr>\n                <td>    \n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_client\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_type\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td>\n            </tr> -->\n                    <tr *ngFor=\"let user of user | filter: general_search\">\n                        <!-- | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id -->\n                        <td>{{ user._id }}</td>\n\n                        <td><b>Name : </b>{{ user.client_name }} <br> <b>Number : </b>{{ user.client_number}}</td>\n                        <!-- <td>{{ user.client_name }}</td> -->\n                        <td>{{ user.client_type }}</td>\n                        <td>{{ user.property_purpose }}</td>\n                        <td>{{ user.property_type }}</td>\n                        <td>{{ user.Prop_num }}</td>\n                        <td>{{ user.area}}</td>\n                        <!-- <td>{{ user.location.location }}</td> -->\n\n\n                        <td>\n                            {{user.city[0]?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},  </span>\n                        </td>\n\n                        <!-- <td>\n                            <span *ngFor=\"let loc of user.location\">{{ loc.location }}<br></span>\n                        </td> -->\n                        <td>{{ user.demand_price }}</td>\n                        <!-- <td>{{ user.Phone_num }}</td>\n                        <td>{{ user.Comment }}</td>\n                        <td>{{ user.assigned_to.name}}</td>\n                        <td>{{ user.Admin_status }}</td>\n                        <td>{{ user.Agent_status }}</td> -->\n                        <td>{{ user.created | date: \"dd/MM/yyyy\"}}</td>\n                        <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i><a (click)=\"setUser(user)\" role=\"button\">Edit</a>\n\n                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\n\n                        </td>\n                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        Are you sure you want to delete it?\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n          Close\n        </button>\n                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLead()\">\n          Delete\n        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-inventory\",\n  templateUrl: \"./inventory.component.html\",\n  styleUrls: [\"./inventory.component.css\"],\n})\nexport class InventoryComponent implements OnInit {\n  user: any;\n  deleteId: any;\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    private toastr: ToastrService\n  ) {}\n  search_id: string;\n  search_area: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n\n  ngOnInit(): void {\n    this.getInventoryList();\n  }\n\n  getInventoryList() {\n    this.authService.getInventory().subscribe(\n      (data) => {\n        this.user = data.inventories;\n        console.log(\"Server response: \", this.user);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n  setFormTitle(name) {\n    this.authService.setFormTitle(name);\n    this.router.navigate([\"/add-inventories\"]);\n  }\n  // agentChange(e) {\n  //   // console.log(\"e\", this.dataToFilter);\n  //   this.Name = e;\n  //   // console.log(\"Name\", this.Name);\n  //   if (e) {\n  //     this.filteredData = this.dataToFilter.filter((d) => {\n  //       return d.user_id.user_id == e._id;\n  //     });\n  //     this.data = this.filteredData;\n  //   } else if (!e) {\n  //     this.data = this.dataToFilter;\n  //   }\n  // }\n\n  //////////\n  // Function to delete the single inventory\n  // tslint:disable-next-line: typedef\n  // deleteInventory(id){\n  //   console.log('Calling deleteInventory');\n\n  //   this.authService.deleteInventory(id).subscribe(data => {\n  //     console.log(data);\n  //     if (data.code === 200) {\n  //       this.toastr.success(data.message, 'Success', {\n  //           timeOut: 5000\n  //         });\n  //       for ( let i = 0; i < this.user.length; i++){\n  //          if ( this.user[i]._id === id) { this.user.splice(i, 1); i--; }}\n  //     }\n\n  //   });\n  // }\n  confirmID(id) {\n    console.log(id);\n\n    this.deleteId = id;\n  }\n\n  // Function to delete the single inventory\n  deleteInventory() {\n    console.log(this.deleteId);\n\n    this.authService.deleteInventory(this.deleteId).subscribe((data) => {\n      console.log(data);\n      if (data.code === 200) {\n        this.toastr.success(data.message, \"Success\", {\n          timeOut: 5000,\n        });\n        this.getInventoryList();\n        //   for ( let i = 0; i < this.user.length; i++){\n        //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\n      }\n    });\n  }\n  setUser(user: any) {\n    this.authService.setUser(user);\n    this.authService.setFormTitle(\"Inventory\");\n    this.router.navigateByUrl(\"/add-inventories\");\n  }\n\n  // myFunction() {\n  //   let input, filter, table, tr, td, i, txtValue;\n  //   input = document.getElementById(\"myInput\");\n  //   filter = input.value.toUpperCase();\n  //   table = document.getElementById(\"myTable\");\n  //   tr = table.getElementsByTagName(\"tr\");\n  //   for (i = 0; i < tr.length; i++) {\n  //     td = tr[i].getElementsByTagName(\"td\")[0];\n  //     if (td) {\n  //       txtValue = td.textContent || td.innerText;\n  //       if (txtValue.toUpperCase().indexOf(filter) > -1) {\n  //         tr[i].style.display = \"\";\n  //       } else {\n  //         tr[i].style.display = \"none\";\n  //       }\n  //     }\n  //   }\n  // }\n}\n\n\n","<!-- <div class=\"\"> -->\n<div class=\"row\">\n    <div class=\"col-12\">\n        <app-header></app-header>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-2\">\n        <!-- <app-header></app-header> -->\n        <app-dashboard></app-dashboard>\n    </div>\n\n\n    <div class=\"col-9\">\n        <div class=\"inventory\"><br>\n            <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Inventory Management</b></h1>\n            <br>\n            <div>\n                <button class=\"btn btn-primary rounded-pill\" (click)=\"setFormTitle('Inventory')\">Add New</button>\n                <!-- <button class=\"btn btn-primary rounded-pill\">Filters</button> -->\n                <!-- <div class=\"dropdown\">\n                        <button class=\"dropbtn\" class=\"btn btn-primary rounded-pill\">Select Agent</button>\n                        <div class=\"dropdown-content\">\n                            <a href=\"#\">Agent 1</a>\n                            <a href=\"#\">Agent 2</a>\n                            <a href=\"#\">Agent 3</a>\n                        </div>\n                    </div> -->\n            </div>\n\n            <div class=\"pull-right\">\n                <div class=\"card-body row\">\n                    <div class=\"col-auto\">\n                        <i class=\"fa fa-search icon\"></i>\n                    </div>\n                    <!--end of col-->\n                    <div class=\"col\">\n                        <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\" placeholder=\"Search topic or keyword\">\n                    </div>\n\n                    <button onclick=\"window.print()\" class=\"btn btn-primary rounded-pill\">Print</button>\n                    <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                </div>\n            </div>\n            <br><br><br>\n            <!-- Inventory management table is below -->\n\n            <table class=\"table table-hover\">\n                <thead>\n                    <th scope=\"col\">ID</th>\n                    <th scope=\"col\">Location</th>\n                    <th scope=\"col\">Area</th>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Demand</th>\n                    <th scope=\"col\">Purpose</th>\n                    <th scope=\"col\">Beds</th>\n                    <th scope=\"col\">Client Details</th>\n                    <th scope=\"col\">Agent Assigned</th>\n                    <th scope=\"col\">Operations</th>\n                </thead>\n\n                <tbody>\n                    <!-- <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"Search ID\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_type\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"Search\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td> -->\n                    <tr *ngFor=\"let user of user | filter: general_search\">\n                        <!-- | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id | filter: general_search\"> -->\n                        <td>{{ user.referenceId }}</td>\n                        <!-- <td>\n                                <span *ngFor=\"let loc of user.location\">{{ loc.location }}<br></span>\n                            </td> -->\n\n\n\n                        <td>\n                            {{user.city[0]?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},  </span>\n                        </td>\n\n                        <td>{{ user.area }}</td>\n                        <td>{{ user.client_type }}</td>\n                        <td>{{ user.demand_price }}</td>\n                        <td>{{ user.property_purpose }}</td>\n                        <td>{{ user.beds_number }}</td>\n                        <td><b>Name : </b>{{ user.client_name }} <br> <b>Number : </b>{{ user.client_number}}</td>\n                        <td>{{ user.assigned_to }}</td>\n                        <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i><a (click)=\"setUser(user)\" role=\"button\">Edit</a>\n\n                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\n\n                        </td>\n                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        Are you sure you want to delete it?\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n              Close\n            </button>\n                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteInventory()\">\n              Delete\n            </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-newpass',\n  templateUrl: './newpass.component.html',\n  styleUrls: ['./newpass.component.css']\n})\nexport class NewpassComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  newpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n    });\n    this.initialize();\n  }\n  // tslint:disable-next-line: typedef\n  initialize() {\n    this.newpassForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  // tslint:disable-next-line: typedef\n  get f() { return this.newpassForm.controls; }\n\n  // tslint:disable-next-line: typedef\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.newpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      newpassword: this.newpassForm.value.password\n    };\n\n    this.authServ.newpassword(user).subscribe(data => {\n      console.log('server response: ');\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      if (status) {\n        alert(msg);\n        this.router.navigate(['/']);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Password change\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"newpassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\" id=\"password\" type=\"password\" placeholder=\"Enter new password\" formControlName=\"password\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" id=\"inputPass\" type=\"password\" placeholder=\"Confirm new password\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\">Change</button>\n                </div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/\">Login</button>\n\n                <!-- </div> -->\n            </form>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  tokendata: any;\n\n  constructor(\n    public authService: AuthenticationService,\n    public router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.tokenization();\n  }\n    // tslint:disable-next-line: typedef\n  async tokenization()\n  {\n    const token = await this.authService.getToken();\n    const decodedToken = await this.authService.getDecodedToken(token);\n    this.tokendata = decodedToken.data;\n    // console.log(this.tokendata);\n  }\n\n  // tslint:disable-next-line: typedef\n  isLogin() {\n\n    const token = this.authService.getToken();\n    // console.log(token);\n    return token;\n  }\n  // tslint:disable-next-line: typedef\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.success('Logged Out', 'Success', {\n      timeOut: 5000\n    });\n    console.log('\\nlogout\\n');\n    this.router.navigateByUrl('/');\n  }\n\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<head>\n\n\n    <meta name=\"description\" content=\"Responsive sidebar template with sliding effect and dropdown menu based on bootstrap 3\">\n    <title>Sidebar template</title>\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n    <link href=\"https://use.fontawesome.com/releases/v5.0.6/css/all.css\" rel=\"stylesheet\">\n\n\n</head>\n<!-- <div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-header></app-header>\n    </div>\n</div> -->\n\n<!-- <nav class=\"navbar justify-content-between\">\n\n    <a class=\"navbar-brand\"> My Asasa</a>\n    <form class=\"form-inline\" style=\"    margin-right: 56px;\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n\n        <ul>\n            <li>\n\n                <a class=\"nav-link\" *ngIf=\"isLogin()\" (click)=\"logout()\">Logout</a>\n            </li>\n            <li>\n                <a routerLink=\"/inventory\">\n                    <i class=\"fas fa-file-alt\"></i>\n                    <span></span>\n                </a>\n            </li>\n            <li>\n                <a routerLink=\"/inventory\">\n                    <i class=\"fas fa-users\"></i>\n                    <span></span>\n                </a>\n            </li>\n        </ul>\n    </form>\n\n</nav> -->\n\n\n\n<div class=\"page-wrapper chiller-theme toggled\">\n    <a id=\"show-sidebar\" class=\"btn btn-sm btn-dark\" href=\"#\">\n        <i class=\"fas fa-bars\"></i>\n    </a>\n    <nav id=\"sidebar\" class=\"sidebar-wrapper\" style=\"padding-top: 100px;\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-brand\">\n                <a routerLink=\"/\">AGENT DASHBOARD</a>\n            </div>\n            <div class=\"sidebar-header\">\n                <div class=\"user-pic\">\n                    <img class=\"img-responsive img-rounded\" src=\"https://bootdey.com/img/Content/avatar/avatar6.png\">\n                </div>\n                <div class=\"user-info\">\n                    <span class=\"user-name\">{{tokendata?.fullname}}\n          </span>\n                    <span class=\"user-role\">{{tokendata?.access}}</span>\n                    <span class=\"user-status\">\n            <i class=\"fa fa-circle\"></i>\n            <span>Online</span>\n                    </span>\n                </div>\n            </div>\n            <div class=\"sidebar-search\">\n                <div>\n                    <div class=\"input-group\">\n                        <input type=\"text\" class=\"form-control search-menu\" placeholder=\"Search...\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\">\n                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"sidebar-menu\">\n                <ul>\n                    <li class=\"header-menu\">\n                        <span>Dashboard</span>\n                    </li>\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/profile\">\n                            <i class=\"fa fa-user\"></i>\n                            <span>User Profile</span>\n                        </a>\n\n                    </li>\n\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/users\">\n                            <i class=\"fa fa-users\"></i>\n                            <span> Agent</span>\n                        </a>\n\n                    </li>\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/inventory\">\n                            <i class=\"fas fa-file-alt\"></i>\n                            <span>Inventory</span>\n                        </a>\n\n                    </li>\n                    <li>\n                        <a routerLink=\"/leads\">\n                            <i class=\"fas fa-phone-volume\"></i>\n                            <span>Lead</span>\n                        </a>\n\n                    </li>\n\n                    <li>\n                        <a routerLink=\"/both\">\n                            <i class=\"fas fa-phone-volume\"></i>\n                            <span>Both</span>\n                        </a>\n\n                    </li>\n\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/register\">\n                            <i class=\"fa fa-tachometer-alt\"></i>\n                            <span>Register</span>\n                        </a>\n\n                    </li>\n                    <li class=\"sidebar\">\n                        <a routerLink=\"/map\">\n                            <i class=\"fas fa-map\"></i>\n                            <span>Maps</span>\n                            <span class=\"badge badge-pill badge-info\">New</span>\n                        </a>\n\n                    </li>\n\n                    <!-- <li class=\"sidebar\">\n                        <a routerLink=\"/both\">\n                            <i class=\"fas fa-phone-volume\"></i>\n                            <span>Both</span>\n                        </a>\n                    </li> -->\n                </ul>\n            </div>\n            <div class=\"sidebar-footer\">\n                <a routerLink=\"/\" *ngIf=\"isLogin()\" (click)=\"logout()\">\n                    <i class=\"fa fa-lock\"></i>\n                    <span class=\"badge badge-pill badge-warning notification\">Log out</span>\n                </a>\n                <a routerLink=\"/profile\">\n                    <i class=\"fa fa-bell\"></i>\n                    <span class=\"badge badge-pill badge-success notification\">3</span>\n                </a>\n                <a href=\"#\">\n                    <i class=\"fa fa-cog\"></i>\n                    <span class=\"badge-sonar\"></span>\n                </a>\n            </div>\n        </div>\n    </nav>\n</div>","// import { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from './services/Authentication/authentication.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isShown = false;\n  title = 'MyAsasa AGENT DASHBOARD Real Estate';\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router) {\n  }\n\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnInit(): void {\n\n    this.initialize();\n    // this.router.navigate(['profile']);\n\n  }\n  // tslint:disable-next-line: typedef\n  isLogin() {\n\n    const token = this.authService.getToken();\n    // console.log(token);\n    return token;\n    // if (token) {\n    //   return true;\n    // }\n    // else {\n    //   return false;\n    // }\n  }\n  // tslint:disable-next-line: typedef\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('/');\n  }\n\n  // tslint:disable-next-line: typedef\n  initialize() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n  }\n  // tslint:disable-next-line: typedef\n  get email() {\n    return this.loginForm.get('email');\n  }\n  // tslint:disable-next-line: typedef\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    // console.log('user login data: ',this.loginForm.value);\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log(data);\n      const status = data.status;\n      const msg: string = data.msg;\n      console.log('Status: ' + status);\n      console.log('Message: ' + msg);\n      if (status) {\n\n      } else {\n        alert('Invalid email or password!');\n      }\n    });\n  }\n  // getting input labels values from user end (login.html)\n  // tslint:disable-next-line: typedef\n  get f() { return this.loginForm.controls; }\n}\n","<!-- NG-ZORRO -->\n<!-- <a href=\"https://github.com/NG-ZORRO/ng-zorro-antd\" target=\"_blank\" style=\"display: flex;align-items: center;justify-content: center;height: 100%;width: 100%;\">\n  <img height=\"300\" src=\"https://img.alicdn.com/tfs/TB1X.qJJgHqK1RjSZFgXXa7JXXa-89-131.svg\">\n</a> -->\n<!-- <nav class=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n    <div class=\"container-fluid px-0\">\n        <div class=\"row w-100\">\n            <div class=\"col-5\">\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isShown = !isShown\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n                <ul class=\"navbar-nav \">\n                    <li class=\"nav-item\">\n                        <h3 class=\"head\"> Asasa Real Estate</h3>\n                    </li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <li class=\"nav-item more-items\">\n                        <a class=\"nav-link\" routerLink=\"/users\" (click)=\"isShown = false\">Users</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/leads\" (click)=\"isShown = false\">Leads</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/inventory\" (click)=\"isShown = false\">Inventory</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/inactive\" (click)=\"isShown = false\">Inactive Leads</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/options\" (click)=\"isShown = false\">Options</a>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"col-md-3\">\n            </div>\n            <div class=\"col-4\">\n                <div class=\"collapse justify-content-end navbar-collapse\" [ngClass]=\"{ 'show': isShown }\" id=\"navbarTogglerDemo03\">\n                    <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n                        <li class=\"nav-item\">\n\n                            <a class=\"nav-link\" *ngIf=\"isLogin()\" (click)=\"logout()\">Logout</a>\n                            <a class=\"nav-link\" *ngIf=\"!isLogin()\" routerLink=\"/login-component\">Login</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" routerLink=\"/map\">Maps</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" data-toggle=\"modal\" data-target=\"#exampleModal\">Login Modal</a>\n                        </li>\n                        <li class=\"nav-item dropdown\">\n\n                            <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fa fa-users\"></i>\n                            </a>\n                            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\n                                <a class=\"dropdown-item\" routerLink=\"/profile\">Profile</a>\n                                <a class=\"dropdown-item\" routerLink=\"\">Settings</a>\n                                <div class=\"dropdown-divider\"></div>\n                                <a class=\"dropdown-item\" routerLink=\"\">Advanced Settings</a>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</nav> -->\n\n<!-- Modal -->\n<!-- <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n\n                <button type=\"button\" class=\"close pull-right\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                <div class=\"row\">\n                    <div class=\"col-sm-6 col-md-6 left\">\n                        <div>\n                            <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n                        </div>\n                    </div>\n\n                    <div class=\"col-1 v2\">\n                        <div class=\"vl\"></div>\n                        Log - in\n                        <div class=\"vl\"></div>\n                    </div>\n\n                    <div class=\"col-sm-5 col-md-5 right\">\n                        <h2>Welcome to my asasa</h2>\n                        <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n\n                            <div class=\"form-group\" class='input-container'>\n                                <div class=\"input-group\">\n                                    <i class=\"fa fa-user icon\"></i>\n                                    <input class=\"form-control\" class=\"input-field\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                        <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"input-group\">\n                                    <i class=\"fa fa-lock icon\"></i>\n                                    <input id=\"password\" type=\"password\" formControlName=\"password\" placeholder=\"Password\" required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <br>\n                                <button type=\"submit\" class='btn' class=\"btn btn-primary rounded-pill\">Login</button>\n                            </div>\n                            <div class=\"custom-control custom-checkbox mb-3\">\n                                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                                <a routerLink=\"forgetpass-component\"> <b>Forget Password</b></a>\n                                <br> Not Registered?\n                                <a routerLink=\"register-component\"> <b>Sign up!</b></a>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n<router-outlet></router-outlet>","import { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../Authentication/authentication.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoginGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthenticationService) {}\n\n  async canActivate() {\n    const token = await this.authService.getToken();\n    if (!token) {\n      this.router.navigateByUrl('/');\n    } else {\n      return true;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.css']\n})\nexport class OptionsComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  addoptionForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService) { }\n  formDeclare() {\n    this.addoptionForm = this.formBuilder.group({\n      add_newcity: ['', Validators.required],\n      added_cities: ['', Validators.required],\n      add_newloc: ['', Validators.required],\n      added_loc: ['', Validators.required],\n      enter_newloc: ['', Validators.required],\n      add_newtype: ['', Validators.required],\n      added_type: ['', Validators.required],\n      add_newstatus: ['', Validators.required],\n      added_status: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.addoptionForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n  }\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.addoptionForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      console.log('Erroneous')\n      return;\n    }\n    this.addoptionForm.reset();\n    this.toastr.success('Lead Added', 'Success', {\n      timeOut: 9000\n    });\n  }\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"addoptionForm\">\n                <h2 class=\"register-heading\">Cities</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newcity\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Cities\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_cities\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add City</button>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Locations -->\n\n                <h2 class=\"register-heading\">Locations</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <h3>Add New Location</h3>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\"><br>\n                                Select City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newloc\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <h3>Added Locations</h3>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\"><br>\n                                Select City\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_loc\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Enter New Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"enter_newloc\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Right side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Select Location\n                                <input type=\"text\" class=\"form-control\" list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Left side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Select Added Locations\n                                <input type=\"text\" class=\"form-control\" list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Location</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Property Types -->\n\n                <h2 class=\"register-heading\">Property Types</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New Type\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newtype\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Types\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_type\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                        <br><br>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Property Type</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Status Types -->\n\n                <h2 class=\"register-heading\">Status Types</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Add New Status\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newstatus\" required\n                                    autocomplete=\"off\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Added Status\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_status\"\n                                    list=\"productName\" />\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-12 col-sm-12\"><br><br>\n                        <div class=\"form-group\" class=\"pull-left\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Status Type</button>\n\n                        </div>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { MatButtonModule } from '@angular/material/button';\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n// import { ButtonsModule } from 'ngx-bootstrap/buttons';\n// import {MaterialModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n// import { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\n// import { NgZorroAntdModule, NZ_I18N } from 'ng-zorro-antd';\n// import { en_US } from 'ng-zorro-antd';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './dashboard/profile/profile.component';\nimport { InventoryComponent } from './dashboard/inventory/inventory.component';\nimport { UsersComponent } from './dashboard/users/users.component';\nimport { LeadsComponent } from './dashboard/leads/leads.component';\nimport { TableFilterPipe } from './Pipes/Non-Utilized_Pipes/table-filter.pipe';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { TableFilter02Pipe } from './Pipes/Non-Utilized_Pipes/table-filter02.pipe';\nimport { TableFilter03Pipe } from './Pipes/Non-Utilized_Pipes/table-filter03.pipe';\nimport { TableFilter04Pipe } from './Pipes/Non-Utilized_Pipes/table-filter04.pipe';\nimport { TableFilter05Pipe } from './Pipes/Non-Utilized_Pipes/table-filter05.pipe';\nimport { TableFilter06Pipe } from './Pipes/Non-Utilized_Pipes/table-filter06.pipe';\nimport { InactiveComponent } from './dashboard/inactive/inactive.component';\nimport { OptionsComponent } from './dashboard/options/options.component';\nimport { AddUsersComponent } from './dashboard/users/add-users/add-users.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AddLeadsComponent } from './dashboard/leads/add-leads/add-leads.component';\nimport { AddInventoriesComponent } from './dashboard/inventory/add-inventories/add-inventories.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HeaderComponent } from './dashboard/header/header.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SidebarComponent } from './sidebar/sidebar.component';\n\n// import { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n// import { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\n// import { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { NavigationComponent } from './header-navigation/navigation.component';\nimport { BothComponent } from './dashboard/both/both.component';\n\n// const DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n//   suppressScrollX: true,\n//   wheelSpeed: 1,\n//   wheelPropagation: true,\n//   minScrollbarLength: 20\n// };   \n\n\n\n// import { HighlightDirective } from './directives/highlight.directive';\n// import { FilterPipe } from './pipes/filter.pipe';\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    LoginComponent,\n    SignupComponent,\n    ForgetpassComponent,\n    ForgetpassverifyComponent,\n    NewpassComponent,\n    SignupotpComponent,\n    DashboardComponent,\n    ProfileComponent,\n    InventoryComponent,\n    UsersComponent,\n    LeadsComponent,\n    // FilterPipe,\n    // HighlightDirective\n    TableFilterPipe,\n    TableFilter02Pipe,\n    TableFilter03Pipe,\n    TableFilter04Pipe,\n    TableFilter05Pipe,\n    TableFilter06Pipe,\n    InactiveComponent,\n    OptionsComponent,\n    AddUsersComponent,\n    AddLeadsComponent,\n    AddInventoriesComponent,\n    NavbarComponent,\n    HeaderComponent,\n    SidebarComponent,\n    NavigationComponent,\n    BothComponent\n  ],\n  imports: [\n    HttpClientModule,\n    // MDBBootstrapModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(), // ToastrModule added\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    FormsModule,\n    NgbModule,\n    // PerfectScrollbarModule,\n    Ng2SearchPipeModule,\n    NgSelectModule,\n    NgbModule\n    // MaterialModule\n  ],\n  providers: [\n    // {\n    //   provide: PERFECT_SCROLLBAR_CONFIG,\n    //   useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n    // }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms';\nimport { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-leads',\n  templateUrl: './add-leads.component.html',\n  styleUrls: ['./add-leads.component.css']\n})\nexport class AddLeadsComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  addleadForm: FormGroup;\n  cities: any;\n  locations: any;\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthenticationService,\n              private router: Router,\n              private toastr: ToastrService) { }\n  formDeclare() {\n    this.addleadForm = this.formBuilder.group({\n      location: ['', Validators.required],\n      client: ['', Validators.required],\n      id: ['', Validators.required],\n      agent_status: ['', Validators.required],\n      admin_status: ['', Validators.required],\n      phone_no: ['', Validators.required],\n      added_on: ['', Validators.required],\n      area: ['', Validators.required],\n      type: ['', Validators.required],\n      purpose: ['', Validators.required],\n      prop_type: ['', Validators.required],\n      prop_no: ['', Validators.required],\n      demand: ['', Validators.required],\n      comment: ['', Validators.required],\n      assigned_to: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.addleadForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n    this.getCities();\n    this.getLocations();\n  }\n    getCities() {\n      this.authService.getCities().subscribe(\n        (data) => {\n          this.cities = data;\n          console.log('Cities: ', this.cities);\n        },\n        (err) => {\n          console.error(err);\n        }\n      );\n    }\n        getLocations() {\n          this.authService.getLocations().subscribe(\n            (data) => {\n              this.locations = data;\n              console.log('Locations: ', this.locations);\n            },\n            (err) => {\n              console.error(err);\n            }\n          );\n        }\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.addleadForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      // console.log('Erroneous')\n      return;\n    }\n    this.addleadForm.reset();\n    this.toastr.success('Lead Added', 'Success', {\n      timeOut: 9000\n    });\n  }\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"addleadForm\">\n                <h2 class=\"register-heading\">Add Lead</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                ID\n                                <input type=\"number\" class=\"form-control\" formControlName=\"id\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.id.errors }\" />\n                                <div *ngIf=\"submitted && f.id.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.id.errors.required\">Id is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Client\n                                <input type=\"text\" class=\"form-control\" formControlName=\"client\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.client.errors }\" />\n                                <div *ngIf=\"submitted && f.client.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.client.errors.required\">Client is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Type\n                                <input formControlName=\"type\" class=\"form-control\" type=\"text\" list=\"productName2\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.type.errors }\" />\n                                <div *ngIf=\"submitted && f.type.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.type.errors.required\">Type is required</div>\n                                </div>\n                                <datalist id=\"productName2\">\n                                    <option value=\"Buyer\">Buyer</option>\n                                    <option value=\"Seller\">Seller</option>\n                                    <option value=\"Else\">Else</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Purpose\n                                <input formControlName=\"purpose\" class=\"form-control\" type=\"text\" list=\"productName3\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.purpose.errors }\" />\n                                <div *ngIf=\"submitted && f.purpose.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.purpose.errors.required\">Purpose is required</div>\n                                </div>\n                                <datalist id=\"productName3\">\n                                    <option value=\"Buy\">Buy</option>\n                                    <option value=\"Sale\">Sale</option>\n                                    <option value=\"Rent\">Rent</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Property Type\n                                <input formControlName=\"prop_type\" class=\"form-control\" type=\"text\" list=\"productName4\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.prop_type.errors }\" />\n                                <div *ngIf=\"submitted && f.prop_type.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.prop_type.errors.required\">Property Type is required</div>\n                                </div>\n                                <datalist id=\"productName4\">\n                                    <option value=\"Apartment\">Apartment</option>\n                                    <option value=\"House\">House</option>\n                                    <option value=\"Residential Plot\">Residential Plot</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Property Number\n                                <input type=\"number\" class=\"form-control\" formControlName=\"prop_no\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.prop_no.errors }\" />\n                                <div *ngIf=\"submitted && f.prop_no.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.prop_no.errors.required\">Property Number is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Area\n                                <input type=\"text\" class=\"form-control\" formControlName=\"area\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.area.errors }\" />\n                                <div *ngIf=\"submitted && f.area.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.area.errors.required\">Area is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"location\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Demand\n                                <input type=\"number\" class=\"form-control\" formControlName=\"demand\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.demand.errors }\" />\n                                <div *ngIf=\"submitted && f.demand.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.demand.errors.required\">Demand is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br>\n                                Phone number\n                                <input type=\"number\" class=\"form-control\" formControlName=\"phone_no\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.phone_no.errors }\" />\n                                <div *ngIf=\"submitted && f.phone_no.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.phone_no.errors.required\">Phone number is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Comment\n                                <input type=\"text\" class=\"form-control\" formControlName=\"comment\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.comment.errors }\" />\n                                <div *ngIf=\"submitted && f.comment.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.comment.errors.required\">Comment is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Assigned To\n                                <input type=\"text\" class=\"form-control\" formControlName=\"assigned_to\" required\n                                    autocomplete=\"off\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.assigned_to.errors }\" />\n                                <div *ngIf=\"submitted && f.assigned_to.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.assigned_to.errors.required\">Assigned To is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Admin Status\n                                <input formControlName=\"admin_status\" class=\"form-control\" type=\"text\"\n                                    list=\"productName\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.admin_status.errors }\" />\n                                <div *ngIf=\"submitted && f.admin_status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.admin_status.errors.required\">Admin status is required</div>\n                                </div>\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                Agent Status\n                                <input formControlName=\"agent_status\" class=\"form-control\" type=\"text\"\n                                    list=\"productName1\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.agent_status.errors }\" />\n                                <div *ngIf=\"submitted && f.agent_status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.agent_status.errors.required\">Agent Status is required</div>\n                                </div>\n                                <datalist id=\"productName1\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <br><br>\n                                Added On\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_on\" required\n                                    autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.added_on.errors }\" />\n                                <div *ngIf=\"submitted && f.added_on.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.added_on.errors.required\">Added On is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button (click)=\"submitForm()\" class=\"btn btn-primary\">Add</button>\n\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as mapboxgl from 'mapbox-gl';\nimport { MapserviceService } from \"../services/Map/mapservice.service\";\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  opacity = 1;\n  map: mapboxgl.Map;\n  style = 'mapbox://styles/mapbox/streets-v11';\n  lat = 33.628463;\n  lng = 73.087581;\n geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Foo',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 62.324462890625, lng: 33.024695711685304 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Bar',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 73.2158203125, lng: 33.97189158092897 },\n        },\n      },\n      {\n        type: 'Feature',\n        properties: {\n          message: 'Baz',\n          iconSize: [24, 24],\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: { lat: 51.29223632812498, lng: 34.28151823530889 },\n        },\n      },\n    ],\n  };\n\n  mapArray = [\n    {\n      lat: 72.99641,\n      lng: 33.645992,\n      tag: 'Islamabad',\n      size: [51, 22],\n    },\n    {\n      lat: 73.0169,\n      lng: 33.5651,\n      tag: 'Rawalpindi',\n      size: [51, 22],\n    },\n    {\n      lat: 71.5249,\n      lng: 34.0151,\n      tag: 'Peshawar',\n      size: [51, 22],\n    },\n    {\n      lat: 67.0011,\n      lng: 24.8607,\n      tag: 'Karachi',\n      size: [51, 22],\n    },\n  ];\n  constructor(private mapservice: MapserviceService) { }\n\n  ngOnInit() {\n    this.initializemapbox();\n\n    ///////////////// This is the data coming from url into our frontend map //////////////////////\n    \n    // this.mapservice.readData()\n    // .subscribe\n    // (data=> {\n    //     data.property.forEach(( data ) => {\n    //       // create a DOM element for the marker\n    //       const el = document.createElement('div');\n    //       el.className = 'data';\n    //       el.style.backgroundImage = 'url(/assets/asasamarker.png)';\n    //       el.innerHTML = data.demand;\n    //       el.style.fontStyle = 'bold';\n    //       el.style.textAlign = 'center';\n    //       el.style.color = 'white';\n    //       el.style.width = '51px';\n    //       el.style.height = '22px';\n    //       el.style.fontSize = '10px';\n    //       el.style.fontWeight = '700';\n    //       el.style.fontFamily = 'Jersey M54';\n    //       // el.style.fontSizeAdjust = '5px';\n    //       new mapboxgl.Marker(el)\n    //         .setLngLat([\n    //           data.location_data.marker_data.mlongitude,\n    //           data.location_data.marker_data.mlatitide\n    //         ])\n    //         //.setPopup(new mapboxgl.Popup().setHTML(data.tag))\n    //         .addTo(this.map);\n    //     });\n    \n    // })\n\n  }\n  initializemapbox() {\n    this.map = new mapboxgl.Map({\n      accessToken:\n        'pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg',\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [73.024955 , 33.650753], // starting position [lng, lat]\n      zoom: 10, // starting zoom\n    });\n    this.mapArray.forEach((marker) => {\n      // create a DOM element for the marker\n      const el = document.createElement('div');\n      el.className = 'marker';\n      el.style.backgroundImage = 'url(/assets/icons/asasamarker.png)';\n      el.innerHTML = marker.tag;\n      el.style.fontStyle = 'bold';\n      el.style.textAlign = 'center';\n      el.style.color = 'white';\n      el.style.width = marker.size[0] + 'px';\n      el.style.height = marker.size[1] + 'px';\n      el.style.fontSize = '10px';\n      el.style.fontWeight = '700';\n      el.style.fontFamily = 'quartzo';\n      new mapboxgl.Marker(el)\n        .setLngLat([\n          marker.lat,\n          marker.lng,\n        ])\n        .setPopup(new mapboxgl.Popup().setHTML(marker.tag))\n        .addTo(this.map);\n    });\n    // this.map.addSource\n    this.mapboxOverlay();\n    this.map.addControl(new mapboxgl.FullscreenControl());\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: true,\n      })\n    );\n  }\n\n  mapboxOverlay() {\n    const slider = document.getElementById('slider');\n    const sliderValue = document.getElementById('slider-value');\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('myImageSource', {\n        type: 'image',\n        url: 'assets/i-10-islamabad.jpg',\n        coordinates: [\n          [73.024955 , 33.650753], // cda kashmir highway\n          [73.041134, 33.659291 ], // rizvi road kashmir highway:\n          [73.051520, 33.645466], // Service Rd West I-10 Islamabad,\n          [73.035384, 33.636927], // I-10/3 I 10/3 I-10, Islamabad, Islamabad\n        ],\n      });\n      this.map.addLayer({\n        id: 'myImageSource',\n        source: 'myImageSource',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        // Adjust the layers opacity. layer here is arbitrary - this could\n        // be another layer name found in your style or a custom layer\n        // added on the fly using `addSource`.\n        // e.target;\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'myImageSource',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    \n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('f-7', {\n        type: 'image',\n        url: 'assets/f-7.png',\n        coordinates: [\n          [73.042912, 33.722351 ],\n          [73.061492 , 33.731482],\n          [73.070957, 33.719287], \n          [73.052850, 33.709633], \n        ],\n      });\n      this.map.addLayer({\n        id: 'f-7',\n        source: 'f-7',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'f-7',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('phase-2', {\n        type: 'image',\n        url: 'assets/phase 2.png',\n        coordinates: [\n          [73.114200, 33.565860], // Phase 4 Gulrez Housing Scheme\n          [73.126250, 33.565800], // Police Foundation, Rawalpindi \n          [73.125652, 33.552467], // Bahria Town Phase V Phase 5 \n          [73.112955, 33.552230] // Bahria Town Phase III Phase 3  \n        ],\n      });\n      this.map.addLayer({\n        id: 'phase-2',\n        source: 'phase-2',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'phase-2',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n    // this.map.on('load', () => {\n    //   // tslint:disable-next-line: no-unused-expression\n    //   this.map.addSource('phase-3', {\n    //     type: 'image',\n    //     url: 'assets/phase 3.png',\n    //     coordinates: [\n    //       [73.104769, 33.563229], // Phase 2 Gulrez Housing Scheme\n    //       [73.127969, 33.560081], // Phase 2 Bahria Town, Rawalpindi \n    //       [73.121127, 33.544900], // Soan River\n    //       [73.093428, 33.550266] // Golden Jubilee Residential CHS\n    //     ],\n    //   });\n    //   this.map.addLayer({\n    //     id: 'phase-3',\n    //     source: 'phase-3',\n    //     type: 'raster',\n    //     paint: {\n    //       'raster-opacity': this.opacity,\n    //     },\n    //   });\n\n    //   slider.addEventListener('input', (e) => {\n    //     const input = (document.getElementById('slider') as HTMLInputElement)\n    //       .value;\n    //     this.map.setPaintProperty(\n    //       'phase-3',\n    //       'raster-opacity',\n    //       parseInt('' + input + '', 10) / 100\n    //     );\n    //     // Value indicator\n    //     sliderValue.textContent = '' + input + '' + '%';\n    //   });\n    // });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-16', {\n        type: 'image',\n        url: 'assets/maps_images/E-16-crop.png',\n        coordinates: [\n          [ 72.877392, 33.652982],\n          [ 72.898120, 33.652946],\n          [ 72.898034, 33.637977],\n          [ 72.877349, 33.638049]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-16',\n        source: 'e-16',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-16',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('e-18', {\n        type: 'image',\n        url: 'assets/maps_images/E-18-crop.png',\n        coordinates: [\n          [72.834467, 33.635597],\n          [72.858070, 33.647030],\n          [72.877725, 33.620232],\n          [72.854551, 33.609438]\n        ],\n      });\n      this.map.addLayer({\n        id: 'e-18',\n        source: 'e-18',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'e-18',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n\n    this.map.on('load', () => {\n      // tslint:disable-next-line: no-unused-expression\n      this.map.addSource('enclave', {\n        type: 'image',\n        url: 'assets/enclave_map-crop.png',\n        coordinates: [\n          [33.701923, 73.200201],\n          [33.703352, 73.264891],\n          [33.674785, 73.264236],\n          [33.674999, 73.196210]\n        ],\n      });\n      this.map.addLayer({\n        id: 'enclave',\n        source: 'enclave',\n        type: 'raster',\n        paint: {\n          'raster-opacity': this.opacity,\n        },\n      });\n\n      slider.addEventListener('input', (e) => {\n        const input = (document.getElementById('slider') as HTMLInputElement)\n          .value;\n        this.map.setPaintProperty(\n          'enclave',\n          'raster-opacity',\n          parseInt('' + input + '', 10) / 100\n        );\n        // Value indicator\n        sliderValue.textContent = '' + input + '' + '%';\n      });\n    });\n \n  }\n}","<div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <app-header></app-header>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- <app-header></app-header> -->\n            <app-dashboard></app-dashboard>\n        </div>\n    </div>\n    <div id=\"map\" class=\"match-parent\">\n        <div class=\"map-overlay top\">\n            <div class=\"map-overlay-inner\">\n                <label>Layer opacity: <span id=\"slider-value\">100%</span></label>\n                <input id=\"slider\" type=\"range\" min=\"0\" max=\"100\" step=\"0\" value=\"100\" />\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inactive',\n  templateUrl: './inactive.component.html',\n  styleUrls: ['./inactive.component.css']\n})\nexport class InactiveComponent implements OnInit {\n\n  constructor() { }\n  search_id: string;\n  search_client: string;\n  general_search: string;\n  search_location: string;\n  search_type: string;\n  search_demand: string;\n  search_area: string;\n  users: any[] = [\n    { Id: '1', Client: 'Aftab Nabi', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 4 bed apartment', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '2', Client: 'Awais', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '12', Area: '1 Kanal', Location: 'F-6/4', Demand: '450,000', Phone_num: '090078601', Comment: 'Want 4 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '3', Client: 'Usama Gull', Purpose: 'Buy', Prop_type: 'House', Prop_num: '14', Area: '2 Kanal', Location: 'G-15/2', Demand: '150,000', Phone_num: '090078601', Comment: 'Want 3 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '4', Client: 'Usman', Purpose: 'Rent', Prop_type: 'Residential Plot', Prop_num: '72', Area: '2 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 1 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n    { Id: '5', Client: 'Zakria', Purpose: 'Buy', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 5 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\n  ];\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"inactive\">\n    <br>\n    <br>\n    <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Inactive/Deleted Leads</b></h1>\n    <br>\n    <div class=\"pull-right\">\n        <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\n        <div class=\"card-body row\">\n            <div class=\"col-auto\">\n                <i class=\"fa fa-search icon\"></i>\n            </div>\n            <!--end of col-->\n            <div class=\"col\">\n                <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\"\n                    placeholder=\"Search topic or keyword\">\n            </div>\n\n            <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\n\n            <button class=\"btn btn-primary rounded-pill\">Print</button>\n            <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n        </div>\n    </div>\n    <br><br><br>\n    <!-- Inventory management table is below -->\n    <table class=\"table table-hover\" class=\"table table-hover table-dark\">\n        <thead>\n            <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">Client</th>\n                <th scope=\"col\">Purpose</th>\n                <th scope=\"col\">Prop. Type</th>\n                <th scope=\"col\">Prop. #</th>\n                <th scope=\"col\">Area</th>\n                <th scope=\"col\">Location</th>\n                <th scope=\"col\">Demand</th>\n                <th scope=\"col\">Phone #</th>\n                <th scope=\"col\">Lead Status</th>\n                <th scope=\"col\">Deleted by</th>\n                <th scope=\"col\">Added On</th>\n                <th scope=\"col\">Operations</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_client\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\n                </td>\n                <td>\n                    <i class=\"fa fa-search icon\"></i>\n                </td>\n            </tr>\n            <tr\n                *ngFor=\"let user of users | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id | filter: general_search\">\n                <td>{{ user.Id }}</td>\n                <td>{{ user.Client }}</td>\n                <td>{{ user.Purpose }}</td>\n                <td>{{ user.Prop_type }}</td>\n                <td>{{ user.Prop_num }}</td>\n                <td>{{ user.Area}}</td>\n                <td>{{ user.Location }}</td>\n                <td>{{ user.Demand }}</td>\n                <td>{{ user.Phone_num }}</td>\n                <td>{{ user.Comment }}</td>\n                <td>{{ user.Assigned_to}}</td>\n                <td>{{ user.Added_on}}</td>\n                <td>\n                    <button class=\"btn btn-primary rounded-pill\">Delete</button>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  tokendata: any;\n\n  constructor(\n    public authService: AuthenticationService, public router: Router) { }\n\n  ngOnInit(): void {\n    this.tokenization();\n  }\n    // tslint:disable-next-line: typedef\n    async tokenization()\n    {\n      const token = await this.authService.getToken();\n      const decodedToken = await this.authService.getDecodedToken(token);\n      this.tokendata = decodedToken.data;\n    }\n\n  // tslint:disable-next-line: typedef\n  isLogin() {\n\n    const token = this.authService.getToken();\n    // console.log(token);\n    return token;\n  }\n  // tslint:disable-next-line: typedef\n  logout() {\n    localStorage.removeItem('token');\n    console.log('\\nlogout\\n');\n    this.router.navigateByUrl('/');\n  }\n\n}","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"border-bottom: 1px solid #39bba4; padding: 0 15px;\">\n    <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"assets/icons/Asasa-Logo.png\">\n        <!-- <span class=\"lead\">Asasa Real State</span> -->\n    </a>\n    <!-- <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button> -->\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n        <!-- <ul class=\"navbar-nav ml-auto mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/inventory\">Leads\n                    <i class=\"fas fa-phone-volume\"></i>\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/inventory\">Users\n                    <i class=\"fas fa-users\"></i>\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/inventory\">Inventory\n                    <i class=\"fas fa-file-alt\"></i>\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" *ngIf=\"isLogin()\" (click)=\"logout()\">Logout</a>\n            </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0 d-none d-xl-block\">\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form> -->\n    </div>\n\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbar works!</p>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as mapboxgl from 'mapbox-gl';\n// import { MapserviceService } from \"../services/mapservice.service\";\n\n@Component({\n  selector: 'app-add-inventories',\n  templateUrl: './add-inventories.component.html',\n  styleUrls: ['./add-inventories.component.css'],\n})\nexport class AddInventoriesComponent implements OnInit {\n  cities: any;\n  formSendingStatus = 'Post Ad';\n  locations: any;\n  subsLocations: any;\n  // selectedLocations: any;\n  city: any;\n  user: any;\n  user1: any;  \n  access_type = [\n    { access: 'super_admin' },\n    { access: 'agent' },\n    { access: 'city_admin' },\n  ];\n  access_type1 = [\n    { access: \"all_agents\" }\n  ];\n  greaterThanValue ;\n  lessThanValue;\n  isInvalid: boolean = false; //Contains the valid status of PRICE ranges\n  isInvalid1: boolean = false; //Contains the valid status of AREA ranges\n  greaterThanValue1; //Variable stores max area\n  lessThanValue1; //Variable stores min area\n  userList: any;\n  selectedLocations: any = [];\n  selectedCity: any;\n  selectStringLocations: any = [];\n\n  //////////////////////////////////\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  get Property_typename() {\n    return this.addinventoryForm.get('prop_typename');\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.addinventoryForm.controls;\n  }\n\n  // Requirements for Map on the template, below;\n  opacity = 1;\n  map: mapboxgl.Map;\n  style = 'mapbox://styles/mapbox/streets-v11';\n  lat = 33.628463;\n  lng = 73.087581;\n  submitted = false;\n  location_value: any;\n  city_value: any;\n  urls = [];\n  optionValue;\n  optionValue1;\n  fileToUpload: File = null;\n  addinventoryForm: FormGroup;\n  typeCheckValue: any;\n  isRent = true;\n  \n  ngOnInit(): void {\n    this.user1 = this.authService.getUser();\n    if (this.user1)\n    console.log('User1: ', this.user1);\n    \n    this.authService.removeUser();\n    // this.initializemapbox();\n    const token = this.authService.getToken();\n    this.user = this.authService.getDecodedToken(token).data;\n    const form_title = this.authService.getFormTitle();\n    this.authService.removeFormTitle();\n    this.formDeclare();\n\n    this.addinventoryForm.patchValue({ form_title });\n    this.getCities();\n    // console.log(this.user1);\n    if (this.user1) {\n      this.updatefields();\n    }\n    this.getUserList();\n  }\n  // Function to call User data table\n  getUserList() {\n    this.authService.getUsers().subscribe(\n      (data) => {\n        this.userList = data;\n        console.log('User Get Response', this.userList);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n\n  //Function that is working on price filter/check\n  public onChangePrice(event: any): void {\n    // console.log('\\nonchange price\\n');\n    \n    this.isInvalid = this.greaterThanValue > this.lessThanValue;\n  }\n  //Function that is working on AREA filter/check\n  public onChangeArea(event: any): void {\n    // console.log('\\nonchange area\\n');\n    this.isInvalid1 = this.greaterThanValue1 > this.lessThanValue1;\n  }\n\n  // Function to patch the value from ng select\n  changeAccess(access){\n    // console.log(access.access);\n    this.addinventoryForm.patchValue({assigned_to: access.access});\n    // console.log(this.addinventoryForm.value);\n  }\n  // Function to patch the value from ng select\n  changeAccess2(access){\n    // console.log(access.fullname);\n    this.addinventoryForm.patchValue({assigned_to: access.fullname});\n    // console.log(this.addinventoryForm.value);\n  }\n  // Function to patch the value from form radio button \n  assigned_To(name){\n    // console.log(name);\n    this.addinventoryForm.patchValue({ assigned_to: name });\n  }\n    setFormTitle(name){\n      this.authService.setFormTitle(name);\n      this.router.navigate(['/add-inventories']);\n    }\n    updatefields() {\n    // this.addinventoryForm.patchValue({ form_title: 'Inventory' });\n    this.formSendingStatus = 'Save'\n    this.addinventoryForm.patchValue({ form_title: this.user1.form_title });\n    this.addinventoryForm.patchValue({ _id: this.user1._id });\n    // this.addinventoryForm.patchValue({ location: this.user1.location });\n    this.addinventoryForm.patchValue({ assigned_to: this.user1.assigned_to });    \n    this.addinventoryForm.patchValue({ property_type: this.user1.property_type });\n    this.addinventoryForm.patchValue({ area: this.user1.area });\n    this.addinventoryForm.patchValue({ client_type: this.user1.client_type });\n    this.addinventoryForm.patchValue({ demand_price: this.user1.demand_price });\n    this.addinventoryForm.patchValue({ property_purpose: this.user1.property_purpose });\n    this.addinventoryForm.patchValue({ beds_number: this.user1.beds_number });\n    this.addinventoryForm.patchValue({ client_name: this.user1.client_name });\n    this.addinventoryForm.patchValue({ client_number: this.user1.client_number });\n    // this.addinventoryForm.patchValue({ city: this.user1.city });\n    \n    if(this.user1.location) {\n      for(let i=0; i< this.user1.location.length; i++) {\n        console.log(this.user1.location[i].location);\n        this.selectStringLocations.push(this.user1.location[i].location);\n        this.selectedLocations.push(this.user1.location[i].location);\n      }\n      console.log(this.selectStringLocations);\n    }\n    \n    if(this.user1.city) {\n      this.getLocations(this.user1.city[0]._id);\n      // this.addinventoryForm.patchValue({ city: this.user1.city.city });\n      console.log(this.user1.city[0]._id);\n      \n    }\n    console.log(this.addinventoryForm.value);\n    \n    this.selectedCity = this.user1.city[0].city;\n    console.log(this.selectedLocations);\n    console.log(this.selectedCity);\n    \n  }\n\n  // File Upload Functions below\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  // Form Declaration, and Validation Function\n  formDeclare() {\n    this.addinventoryForm = this.formBuilder.group({\n      // _id: [''],\n      assigned_to1:[],\n      assigned_to: [\n        {\n          userId: '',\n          name: '',\n        },\n      ],\n      admin: [\n        {\n          userId: '',\n          name: '',\n        },\n      ],\n      form_title: [''],\n      property_purpose: [''],\n      property_type: [''],\n      city: [\n        {\n          id: '',\n          name: this.city_value,\n          cityId: '',\n        },\n      ],\n      location: [],\n      sub_location: [\n        {\n          id: '',\n          name: '',\n          sub_locationId: '',\n        },\n      ],\n      min_price: [],\n      max_price: [],\n      demand_price: [],\n      min_area: [],\n      max_area: [],\n      beds_number: [],\n      area: [],\n      area_unit: [''],\n      client_name: [''],\n      client_number: [],\n      client_type: [''],\n    });\n  }\n\n  getCity(cityId) {\n    const city = this.cities.filter((city: any) => {\n      return city._id === cityId;\n    });\n    if (city[0]) {\n      return city[0].city;\n    } else {\n      return '';\n    }\n  }\n\n  getLocation(locId) {\n    const location = this.locations.filter((location: any) => {\n      return location._id === locId;\n    });\n    if (location[0]) {\n      return location[0].location;\n    } else {\n      return '';\n    }\n  }\n\n  changeCity(city) {\n    console.log(this.locations);\n    \n    this.locations = '';\n      \n    if(this.user){\n      console.log(city.city);\n      \n      console.log(this.selectedCity);\n  \n      if (this.selectedCity == city.city)\n      {\n        this.selectStringLocations = this.selectedLocations;\n        console.log(this.selectStringLocations);\n      }\n      else\n      this.selectStringLocations = [];\n    }\n    console.log(this.locations);\n    if(city){\n    this.getLocations(city._id);\n    this.addinventoryForm.patchValue({ city });\n    console.log(this.addinventoryForm.value);\n    }\n  }\n  changeLocation(location) {\n    console.log(location);\n    this.selectedLocations = location;\n    console.log(this.addinventoryForm.value);\n  }\n\n  // Getting cities from backend Api's\n  getCities() {\n    this.authService.getCities().subscribe(\n      (cities) => {\n        // console.log('Curr', this.user);\n        if (this.user.access === 'islamabad_admin') {\n          this.city.push(cities[2]);\n          this.cities = this.city;\n        } else if (this.user.access === 'rawalpindi_admin') {\n          this.city.push(cities[1]);\n          this.cities = this.city;\n        } else if (this.user.access === 'peshawar_admin') {\n          this.city.push(cities[0]);\n          this.cities = this.city;\n        } else {\n          this.cities = cities;\n        }\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  getLocations(selectedCity?) {\n    console.log(selectedCity);\n    this.authService.getLocations().subscribe(\n      (locations) => {\n        console.log(locations, selectedCity);\n\n        this.locations = locations;\n        // this.subsLocations = locations.subLocations;\n        // console.log(\" this.locations\", this.locations);\n        if (selectedCity) {\n          this.locations = locations.filter((loc) => {\n            return loc.cityId == selectedCity;\n          });\n        }\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n  // //////////\n\n  //   changeValue(value) {\n  //     this.checked = !value;\n  // }\n\n  // Function to initialize Map; used in template\n  // tslint:disable-next-line: typedef\n  // initializemapbox() {\n  //   this.map = new mapboxgl.Map({\n  //     accessToken:\n  //       'pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg',\n  //     container: 'map',\n  //     style: 'mapbox://styles/mapbox/streets-v11',\n  //     center: [73.024955, 33.650753],\n  //     zoom: 10,\n  //   });\n  //   this.map.addControl(new mapboxgl.FullscreenControl());\n  //   this.map.addControl(new mapboxgl.NavigationControl());\n  //   this.map.addControl(\n  //     new mapboxgl.GeolocateControl({\n  //       positionOptions: {\n  //         enableHighAccuracy: true,\n  //       },\n  //       trackUserLocation: true,\n  //     })\n  //   );\n  // }\n\n  ///////////////////////////////\n  // Check whether user pressed 'buy' or 'rent' button\n  setValue(value: string) {\n    this.optionValue1 = value;\n  }\n  assignFormTitle(e) {\n    console.log(e.target.value);\n    // return this.addinventoryForm.patchValue({form_title: formTitle});\n    // this.addinventoryForm.\n  }\n\n  // Submit form to backend service\n  submitForm() {\n    this.submitted = true; // stop here if form is invalid\n    console.log('\\n\\n', this.addinventoryForm.value, '\\n\\n');\n    this.addinventoryForm.patchValue({ location: this.selectedLocations });\n\n    if (this.user1) {\n      console.log(this.addinventoryForm.value);\n      this.authService\n        .updateInventory(this.user1._id, this.addinventoryForm.value)\n        .subscribe((data: any) => {\n          console.log('Update inventory response data: ', data);\n          // this.registerresponse = data;\n          const email = this.addinventoryForm.value.email;\n          const msg = data.message;\n          // const status = data.status;\n          // this.registerForm.reset();\n          if (msg == 'Inventory updated successfully') {\n            this.toastr.success(msg, 'Success', {\n              timeOut: 5000,\n            });\n            if ( this.addinventoryForm.get('form_title').value === 'Inventory' ) {\n            this.router.navigate(['/inventory']);\n            }\n            else if ( this.addinventoryForm.get('form_title').value === 'Lead' ) {\n              this.router.navigate(['/leads']);\n              }\n              else if ( this.addinventoryForm.get('form_title').value === 'Both' ) {\n                this.router.navigate(['/both']);\n                }\n          } else {\n            this.toastr.error(msg, 'Error', {\n              timeOut: 5000,\n            });\n          }\n        });\n    } else {\n      const user = this.addinventoryForm.get('form_title').value;\n      console.log(this.addinventoryForm.value);\n      this.authService\n        .createInventory(this.addinventoryForm.value)\n        .subscribe((data) => {\n          console.log('signup data: ', data);\n          // this.registerresponse = data;\n          const email = this.addinventoryForm.value.email;\n          // const msg = data.message;\n          // const status = data.status;\n          // this.registerForm.reset();\n          if (user === 'Inventory') {\n            this.toastr.success('Inventory Added', 'Success', {\n              timeOut: 5000,\n            });\n            this.router.navigate(['/inventory']);\n          }\n          else if (user === 'Lead'){\n\n            this.toastr.success('Lead Added', 'Success', {\n              timeOut: 5000,\n            });\n            this.router.navigate(['/leads']);\n          }\n          else if (user === 'Both'){\n\n            this.toastr.success('Both Added', 'Success', {\n              timeOut: 5000,\n            });\n            this.router.navigate(['/both']);\n          }\n          // else {\n          //   this.toastr.error('msg', 'Error', {\n          //     timeOut: 5000,\n          //   });\n\n          // }\n        });\n    }\n  }\n}\n\n//   console.log('\\n\\n', this.addinventoryForm.value, '\\n\\n');\n//   this.authService.createInventory(this.addinventoryForm.value).subscribe((data) => {\n//     const user = this.addinventoryForm.get('form_title').value;\n//     if (user === 'Lead'){\n//     this.addinventoryForm.reset();\n//     this.toastr.success('User Added', 'Success', {\n//       timeOut: 9000\n//     });\n//     console.log('Subscribed data: ', data);\n//     this.router.navigate(['/leads']);\n//   }\n//   else if (user === 'Inventory'){\n//     this.addinventoryForm.reset();\n//     this.toastr.success('User Added', 'Success', {\n//       timeOut: 9000\n//     });\n//     console.log('Subscribed data: ', data);\n//     this.router.navigate(['/inventory']);\n//   }\n// },\n//     (error: HttpErrorResponse) => {\n//       console.log(error);\n//       this.toastr.error('Fields Empty', 'Error', {\n//         timeOut: 5000\n//       });\n//     });\n\n// Form upload function\n\n// onSelectFile(event) {\n//   if (event.target.files && event.target.files[0]) {\n//     const filesAmount = event.target.files.length;\n//     for (let i = 0; i < filesAmount; i++) {\n//       const reader = new FileReader();\n\n//       // tslint:disable-next-line: no-shadowed-variable\n//       reader.onload = (event: any) => {\n//         // console.log(event.target.result);\n//         this.urls.push(event.target.result);\n//       };\n\n//       reader.readAsDataURL(event.target.files[i]);\n//     }\n//   }\n// }\n// removeMultipleSelectedFile(index) {\n//   this.urls.splice(index, 1);\n// }\n","<div class=\"container-fluid\">\n    <div class=\" register\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <app-header></app-header>\n            </div>\n        </div>\n        <div class=\"row inventory\">\n            <div class=\"col-md-3\">\n                <!-- <app-header></app-header> -->\n                <app-dashboard></app-dashboard>\n            </div>\n            <div class=\"col-md-9 col-sm-10 register-right\">\n                <form class=\"\" [formGroup]=\"addinventoryForm\">\n\n                    <h2 class=\"register-heading\">Add Inventory</h2>\n                    <!-- Form Title -->\n                    <div class=\"row  offset-1\">\n                        <!-- <div class=\"form-group\"> -->\n\n                        <div class=\"col-md-5 col-sm-5 radio-mid\">\n\n                            <div class=\"radio\">\n                                <div class=\"btn-group btn-group-toggle\">\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Lead'\"> \n                                    <input type=\"radio\" [attr.disabled]=\"addinventoryForm.get('form_title').value !== 'Lead'\" formControlName=\"form_title\"\n                                        value=\"Lead\" > Lead \n                                </label>\n\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Inventory'\"> \n                                    <input type=\"radio\"  [attr.disabled]=\"addinventoryForm.get('form_title').value !== 'Inventory'\"   formControlName=\"form_title\"\n                                        value=\"Inventory\">  \n                                        Inventory\n                                </label>\n\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Both'\"> \n                                    <input type=\"radio\"  [attr.disabled]=\"addinventoryForm.get('form_title').value !== 'Both'\"  formControlName=\"form_title\"\n                                        value=\"Both\">  \n                                        Both\n                                </label>\n\n                                </div>\n                            </div>\n                            <b class=\"steps\">Step 1: Select Form Title</b>\n                        </div>\n                    </div>\n                    <!--  *ngIf=\"addinventoryForm.get('form_title').value === 'Lead' || addinventoryForm.get('form_title').value === 'Inventory' \" -->\n                    <div>\n                        <!-- Property Purpose -->\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-5 col-sm-5\"><br><br>\n                                <div class=\"radio\">\n                                    <div class=\"btn-group btn-group-toggle\">\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Buy'\">\n                          <input type=\"radio\" formControlName=\"property_purpose\"  value=\"Buy\" autocomplete=\"off\" checked> Buy\n                        </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Sell'\">\n                          <input type=\"radio\"    formControlName=\"property_purpose\"  value=\"Sell\" autocomplete=\"off\"> Sell\n                        </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Rent'\">\n                          <input type=\"radio\"    formControlName=\"property_purpose\"   value=\"Rent\" autocomplete=\"off\"> Rent\n                        </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Rent-Out'\">\n                      <input type=\"radio\"    formControlName=\"property_purpose\"  value=\"Rent-Out\" autocomplete=\"off\"> Rent-Out\n                    </label>\n                                    </div>\n                                </div>\n                                <b class=\"steps\">Step 2: Select Purpose</b>\n                            </div>\n                            <!-- <p>step-2: select the button</p> -->\n                        </div>\n                        <br><br>\n                        <div class=\"row  offset-1\">\n                            <!-- City and Location Select -->\n\n                            <!-- <ng-select class=\"ng-select\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\n                            </ng-select>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <ng-select class=\"ng-select\" [items]=\"locations\" [multiple]=\"true\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                            </ng-select> -->\n\n\n\n                            <!--  -->\n\n                            <!-- City -->\n                            <div class=\"form-group\" *ngIf=\"!user1\">\n                                <div class=\"input-group\">\n                                    <ng-select class=\"ng-select\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"_id\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\n                                    </ng-select>\n                                    <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.city.errors.required\">City is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" *ngIf=\"user1\">\n                                <div class=\"input-group\">\n                                    <ng-select [(ngModel)]=\"this.user1.city[0].city\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\n                                    </ng-select>\n                                    <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.city.errors.required\">City is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <!-- Location -->\n                            <div class=\"form-group\" *ngIf=\"user1\">\n                                <div class=\"input-group\">\n                                    <ng-select [(ngModel)]=\"selectStringLocations\" [multiple]=\"true\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                                    </ng-select>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" *ngIf=\"!user1\">\n                                <div class=\"input-group\">\n                                    <ng-select class=\"ng-select\" [multiple]=\"true\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                                    </ng-select>\n                                </div>\n                            </div>\n\n                            <!--  -->\n\n                            <!-- Sub Property Type  -->\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"dropdown ml-2 mr-2 dropdown\">\n                                        <button data-toggle=\"modal\" data-target=\"#exampleModal2\" style=\"width: 160px;\" class=\"btn btn-outline-secondary \" type=\"button\">\n                                    <span *ngIf=\"!addinventoryForm.get('property_type').value\">Select Property Type </span>\n                                    <span *ngIf=\"addinventoryForm.get('property_type').value\">{{addinventoryForm.get('property_type').value}} </span>\n                                    </button>\n                                        <!-- Modal -->\n                                        <div class=\"modal fade\" id=\"exampleModal2\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                            <div class=\"modal-dialog\" role=\"document\">\n                                                <div class=\"modal-content\">\n                                                    <div class=\"modal-header\">\n\n                                                        <ul class=\"nav nav-tabs\">\n                                                            <li style=\"margin-left: 21px;\">\n                                                                <a href=\"#home\" data-toggle=\"tab\" class=\"active\"> Home </a>\n                                                            </li>\n                                                            <li style=\"margin-left: 21px;\">\n                                                                <a href=\"#plot\" data-toggle=\"tab\"> Plot </a>\n                                                            </li>\n                                                            <li style=\"margin-left: 21px;\">\n                                                                <a href=\"#commercial\" data-toggle=\"tab\"> Commercial </a>\n                                                            </li>\n                                                        </ul>\n\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n                                                    </div>\n                                                    <div class=\"modal-body\">\n                                                        <div class=\"tab-content\">\n                                                            <div class=\"tab-pane active\" id=\"home\">\n\n                                                                <div class=\"btn-group btn-group-toggle\" style=\"\n                                                                padding: 4px 45px;\">\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'House'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"House\" > House \n                                                                </label>\n\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Apartment'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Apartment\">  \n                                                                        Apartment\n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Upper Portion'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Upper Portion\">  \n                                                                        Upper Portion\n                                                                </label>\n                                                                </div>\n                                                                <div class=\"btn-group btn-group-toggle\" style=\"\n                                                                padding: 4px 45px;\">\n                                                                    <label class=\"btn btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Lower Portion'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"Lower Portion\" > Lower Portion \n                                                                </label>\n\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Farm House'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Farm House\">  \n                                                                        Farm House\n                                                                </label>\n\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Penthouse'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Penthouse\">  \n                                                                        Penthouse\n                                                                </label>\n\n                                                                </div>\n\n                                                            </div>\n                                                            <div class=\"tab-pane\" id=\"plot\">\n                                                                <div class=\"btn-group btn-group-toggle\" style=\"\n                                                                padding: 4px 45px;\">\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Residential Plot'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"Residential Plot\" > Residential Plot \n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Commercial Plot'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Commercial Plot\">  \n                                                                        Commercial Plot\n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Farm House Plot'\"> \n<input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Farm House Plot\">  \n                                                                        Farm House Plot\n                                                                </label>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"tab-pane\" id=\"commercial\">\n\n                                                                <div class=\"btn-group btn-group-toggle\">\n                                                                    <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Office'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"Office\" > Office \n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Shop'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Shop\">  \n                                                                        Shop\n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Plaza'\"> \n                                                                    <input type=\"radio\"  formControlName=\"property_type\"\n                                                                        value=\"Plaza\">  \n                                                                        Plaza\n                                                                </label>\n\n                                                                    <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Floor'\"> \n                                                                    <input type=\"radio\" formControlName=\"property_type\"\n                                                                        value=\"Floor\" > Floor \n                                                                </label>\n                                                                </div>\n\n\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"modal-footer\">\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n                                                            Okay\n                                                        </button>\n                                                        <!-- <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">\n                                                            Delete\n                                                        </button> -->\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <!-- Ending Modal -->\n                                    </div><b class=\"steps\">Step 4: Select Property Type</b>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Price Range -->\n                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Rent' \">\n\n                        <div class=\"offset-1\" style=\"color: red\" *ngIf=\"isInvalid\">Please check your PRICE ranges</div>\n                        <div class=\"row offset-1\">\n                            <br>\n                            <br> <b class=\"price\">Price Range</b>\n                        </div>\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <input type=\"number\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_price\" name=\"greaterThanValue\" [(ngModel)]=\"greaterThanValue\" (ngModelChange)=\"onChangePrice($event)\" required autocomplete=\"off\" />\n                                        <!-- <input type=\"number\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_price\" required autocomplete=\"off\" /> -->\n                                        <!-- <div *ngIf=\"submitted && f.demand.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.demand.errors.required\">Demand is required</div>\n                                </div> -->\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <!-- <input type=\"number\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_price\" required autocomplete=\"off\" /> -->\n                                        <input type=\"number\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_price\" name=\"lessThanValue\" [(ngModel)]=\"lessThanValue\" (ngModelChange)=\"onChangePrice($event)\">\n                                        <input type=\"submit\" required autocomplete=\"off\" />\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Demand -->\n                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Sell' || addinventoryForm.get('property_purpose').value === 'Rent-Out' \">\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <br> <b>Demand </b>\n                                        <input type=\"number\" placeholder=\"\" class=\"form-control\" formControlName=\"demand_price\" required autocomplete=\"off\" />\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Area Range -->\n                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Rent' \">\n                        <div class=\"offset-1\" style=\"color: red\" *ngIf=\"isInvalid1\">Please check your AREA ranges</div>\n                        <div class=\"row offset-1\">\n                            <br> <b class=\"price\">Area Range</b>\n                        </div>\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <input type=\"number\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_area\" name=\"greaterThanValue1\" [(ngModel)]=\"greaterThanValue1\" (ngModelChange)=\"onChangeArea($event)\" required autocomplete=\"off\" />\n                                        <!-- <input type=\"number\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_area\" required autocomplete=\"off\" /> -->\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div class=\"\">\n                                        <!-- <br> <b>Area Range</b> -->\n                                        <!-- <input type=\"number\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_area\" required autocomplete=\"off\" /> -->\n                                        <input type=\"number\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_area\" required autocomplete=\"off\" name=\"lessThanValue1\" [(ngModel)]=\"lessThanValue1\" (ngModelChange)=\"onChangeArea($event)\" />\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-8 col-sm-4\">\n\n                                <!-- <div class=\"col-md-5 col-sm-5\"><br><br> -->\n                                <div class=\"radio\">\n                                    <div class=\"btn-group btn-group-toggle\">\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Feet'\">\n                              <input type=\"radio\" formControlName=\"area_unit\"  value=\"Sq. Feet\" autocomplete=\"off\" checked> Sq. Feet\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Yard'\">\n                              <input type=\"radio\"    formControlName=\"area_unit\"  value=\"Sq. Yard\" autocomplete=\"off\"> Sq. Yard\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Marla'\">\n                              <input type=\"radio\"    formControlName=\"area_unit\"   value=\"Marla\" autocomplete=\"off\"> Marla\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Kanal'\">\n                          <input type=\"radio\"    formControlName=\"area_unit\"  value=\"Kanal\" autocomplete=\"off\"> Kanal\n                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Beds -->\n\n                    <div class=\"row offset-1\">\n                        <div class=\"col-md-4 col-sm-4\">\n                            <div class=\"form-group\">\n                                <div> <b>Beds Number</b>\n                                    <input formControlName=\"beds_number\" class=\"form-control\" type=\"number\" />\n                                </div><b class=\"steps\">Step 7: Select Beds</b>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Simple Area -->\n                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Sell' \">\n                        <div class=\"row offset-1\">\n                            <div class=\"col-md-4 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <div>\n                                        <b>Simple Area</b>\n                                        <input type=\"number\" class=\"form-control\" formControlName=\"area\" required autocomplete=\"off\" />\n                                        <!-- <div *ngIf=\"submitted && f.land_area.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.land_area.errors.required\">Land Area is required</div>\n                                </div> -->\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-5 col-sm-2\">\n\n                                <div class=\"radio select-btn\">\n                                    <div class=\"btn-group btn-group-toggle\">\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Feet'\">\n                              <input type=\"radio\" formControlName=\"area_unit\"  value=\"Sq. Feet\" autocomplete=\"off\" checked> Sq. Feet\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Yard'\">\n                              <input type=\"radio\"    formControlName=\"area_unit\"  value=\"Sq. Yard\" autocomplete=\"off\"> Sq. Yard\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Marla'\">\n                              <input type=\"radio\"    formControlName=\"area_unit\"   value=\"Marla\" autocomplete=\"off\"> Marla\n                            </label>\n                                        <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Kanal'\">\n                          <input type=\"radio\"    formControlName=\"area_unit\"  value=\"Kanal\" autocomplete=\"off\"> Kanal\n                        </label>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Client Details -->\n                    <div class=\"row offset-1\">\n\n\n                        <div class=\"col-md-4 col-sm-4 form-group\">\n                            <div class=\"\"> <b>Client Name</b>\n                                <input formControlName=\"client_name\" class=\"form-control\" type=\"text\" />\n                            </div><b class=\"steps\">Step 8: Select Client Name</b>\n                        </div>\n                        <div class=\"col-md-4 col-sm-4 form-group\">\n                            <div class=\"\"> <b>Client Number</b>\n                                <input formControlName=\"client_number\" class=\"form-control\" type=\"number\" />\n                            </div><b class=\"steps\">Step 9: Select Client Number</b>\n                        </div>\n                    </div>\n                    <div class=\"row offset-1\">\n                        <div class=\"col-md-4 col-sm-4 form-group\">\n                            <div class=\"\"> <b>Client Type</b>\n                                <input formControlName=\"client_type\" class=\"form-control\" type=\"text\" />\n                            </div><b class=\"steps\">Step 10: Select Client Type</b>\n                        </div>\n\n                    </div>\n\n                    <!-- Access Type -->\n                    <br>\n                    <div class=\"row offset-1\" *ngIf=\" addinventoryForm.get('form_title').value === 'Inventory' || addinventoryForm.get('form_title').value === 'Both'\">\n                        <div class=\"col-md-5 col-sm-5\">\n\n                            <div class=\"radio\">\n                                <div class=\"btn-group btn-group-toggle\">\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('assigned_to1').value === 'Self'\"> \n                                        <input (click)=\"assigned_To('Self')\" type=\"radio\" formControlName=\"assigned_to1\" value=\"Self\" > \n                                            Self \n                                    </label>\n\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('assigned_to1').value === 'Admin'\"> \n                                        <input  type=\"radio\"  formControlName=\"assigned_to1\" value=\"Admin\">  \n                                            Admins\n                                    </label>\n\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('assigned_to1').value === 'Agents'\"> \n                                        <input  type=\"radio\"  formControlName=\"assigned_to1\" value=\"Agents\">  \n                                            Agents\n                                    </label>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Select Admins  -->\n                    <br><br>\n                    <div class=\"row offset-1\" *ngIf=\" addinventoryForm.get('assigned_to1').value == 'Admin'\">\n\n                        <!-- <br><br> -->\n                        <ng-select class=\"ng-select inputs2\" [items]=\"access_type\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Admin\" (change)=\"changeAccess($event)\">\n                        </ng-select>\n\n                    </div>\n\n                    <!-- Select Agents -->\n                    <div class=\"row offset-1\" *ngIf=\" addinventoryForm.get('assigned_to1').value === 'Agents' \">\n\n\n\n                        <!-- <ng-select class=\"ng-select\" #city [items]=\"cities\" bindLabel=\"city\" bindValue=\"_id\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\n                        </ng-select> -->\n\n                        <ng-select class=\"ng-select inputs2\" [items]=\"userList\" bindLabel=\"fullname\" bindValue=\"fullname\" placeholder=\"Select Agent\" (change)=\"changeAccess2($event)\">\n                        </ng-select>\n\n                    </div>\n                </form>\n\n                <!-- Complete form submission button -->\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button (click)=\"submitForm()\" class=\"btn btn1 btn-primary\">{{formSendingStatus}}</button>\n                            <br><br><br>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { RouteInfo } from \"./sidebar.metadata\";\n\nexport const ROUTES: RouteInfo[] = [\n  {\n    path: \"\",\n    title: \"Dashboard\",\n    icon: \"mdi mdi-dots-horizontal\",\n    class: \"nav-small-cap\",\n    extralink: true,\n    submenu: [],\n  },\n  {\n    path: \"/profile\",\n    title: \"User Profile\",\n    icon: \"mdi mdi-account\",\n    class: \"\",\n    extralink: false,\n    submenu: [],\n  },\n  {\n    path: \"/users\",\n    title: \"Agent\",\n    icon: \"fa fa-users\",\n    class: \"\",\n    extralink: false,\n    submenu: [],\n  },\n  {\n    path: \"/inventory\",\n    title: \"Inventory\",\n    icon: \"fas fa-file-alt\",\n    class: \"\",\n    extralink: false,\n    submenu: [],\n  },\n  {\n    path: \"/leads\",\n    title: \"Leads\",\n    icon: \"fas fa-phone-volume\",\n    class: \"\",\n    extralink: false,\n    submenu: [],\n  }\n];\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticationService } from \"../services/Authentication/authentication.service\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n// import { first } from 'rxjs/operators';\nimport { ToastrService } from \"ngx-toastr\";\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"],\n})\nexport class SignupComponent implements OnInit {\n  submitted = false;\n  registerForm: FormGroup;\n  cities: any;\n  locations: any;\n  // access: ['super_admin', 'agent', 'city_admin'];\n  user: any;\n  abc: any;\n  accessType = [\n    { access: \"agent\" },\n    { access: \"city_admin\" },\n  ];\n  selectedLocations: any = [];\n  selectedCity: any;\n  selectStringLocations: any = [];\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    public router: Router,\n    private toastr: ToastrService\n  ) {}\n  ngOnInit(): void {\n    this.getUser();\n    this.removeUser();\n    this.initialize();\n    if (this.user) {\n      this.updatefields();\n    }\n  }\n  removeUser() {\n    this.authService.removeUser();\n  }\n  getUser() {\n    this.user = this.authService.getUser();\n  }\n  updatefields() {\n    console.log(this.user);\n    // this.registerForm.value[\"city\"] = this.user.city;\n    // this.registerForm.value[\"access\"] = this.user.access;\n    this.registerForm.patchValue({ fullname: this.user.fullname });\n    this.registerForm.patchValue({ email: this.user.email });\n    this.registerForm.patchValue({ password: this.user.password });\n    // this.registerForm.patchValue({ location: this.user.location });\n    // this.registerForm.patchValue({ city: this.user.city });\n    this.registerForm.patchValue({ contact: this.user.contact });\n    this.registerForm.patchValue({ access: this.user.access });\n    console.log(this.registerForm);\n\n    if (this.user.location) {\n      for (let i = 0; i < this.user.location.length; i++) {\n        console.log(this.user.location[i].location);\n        this.selectStringLocations.push(this.user.location[i].location);\n        this.selectedLocations.push(this.user.location[i].location);\n      }\n      console.log(this.selectStringLocations);\n    }\n\n    if (this.user.city) {\n      this.getLocations(this.user.city._id);\n      // this.registerForm.patchValue({ city: this.user.city });\n      console.log(this.user.city.city);\n    }\n    this.selectedCity = this.user.city.city;\n    // this.selectedLocations = this.user.location;\n    console.log(this.selectedLocations);\n    \n  }\n  initialize() {\n    if (this.user) {\n      this.registerForm = this.formBuilder.group({\n        fullname: [\"\", Validators.required],\n        email: [\n          \"\",\n          [\n            Validators.required,\n            Validators.email,\n            Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),\n          ],\n        ],\n        location: [],\n        contact: [\"\", Validators.required],\n        access: [],\n        city: [\"\"],\n        // created: []\n      });\n    } else {\n      this.registerForm = this.formBuilder.group(\n        {\n          fullname: [\"\", Validators.required],\n          email: [\n            \"\",\n            [\n              Validators.required,\n              Validators.email,\n              Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),\n            ],\n          ],\n          password: [\"\", [Validators.required, Validators.minLength(6)]],\n          location: [],\n          city: [\"\"],\n          contact: [\"\", Validators.required],\n          access: [\"\"],\n          confirm_password: [\n            \"\",\n            [Validators.required, Validators.minLength(6)],\n          ],\n          // validators: this.password.bind(this)\n        }\n        // {\n        //   validators: this.password.bind(this),\n        // }\n      );\n    }\n    this.getCities();\n  }\n  password(event, value) {\n    const password = this.registerForm.get(\"password\");\n    const confirm_password = this.registerForm.get(\"confirm_password\");\n    if (value === \"Pass\" && event === confirm_password.value) {\n      this.abc = \"\";\n    } else if (value === \"Conf\" && event === password.value) {\n      this.abc = \"\";\n    } else {\n      this.abc = \"Password not matched\";\n    }\n  }\n\n  // Calling Api to get the Cities\n  getCities() {\n    this.authService.getCities().subscribe(\n      (data) => {\n        console.log(data);\n        this.cities = data;\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n  // Calling Api to get the Locations\n  getLocations(selectedCity?) {\n    this.authService.getLocations().subscribe(\n      (locations) => {\n        console.log(locations);\n        this.locations = locations;\n        if (selectedCity) {\n          this.locations = locations.filter((loc) => {\n            return loc.cityId == selectedCity;\n          });\n        }\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  //Function to change the city of --ng select city--\n  changeCity(city) {\n    \n    // console.log(this.registerForm.controls['location'].value);\n    // this.registerForm.patchValue( {'location':'cdf'} );\n    // this.registerForm.controls.location.setValue('abc');\n    // console.log(this.registerForm.controls['location'].value);\n    \n    this.locations = '';\n    if(this.user){\n    console.log(city.city);\n    \n    console.log(this.selectedCity);\n\n    if (this.selectedCity == city.city)\n    {\n      this.selectStringLocations = this.selectedLocations;\n      console.log(this.selectStringLocations);\n    }\n    else\n    this.selectStringLocations = [];\n  }\n    // if(this.user.city.city === city.city) {\n    //   console.log(this.user.city.city, city.city);\n    //   if (this.user.location) {\n    //     for (let i = 0; i < this.user.location.length; i++) {\n    //       this.selectStringLocations.push(this.user.location[i].location);\n    //     }\n    //   }\n    // }\n\n    if (city) this.getLocations(city._id);\n    this.registerForm.patchValue({ city });\n  }\n\n  //Function to change the location of --ng select location--\n  changeLocation(location) {\n    // this.selectedLocations = location;\n    // console.log(this.selectedLocations);\n    console.log(location);\n    this.registerForm.patchValue({ location: location });\n  }\n\n  // Patch the value of access input using this below function\n  changeAccess(access) {\n    // console.log(access.access);\n    if (access) this.registerForm.patchValue({ access: access.access });\n  }\n\n  // Function to register the user by sending whole form\n  registerUser() {\n    console.log(this.registerForm);\n\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      console.log(\"Erroneous\");\n      this.toastr.error(\"Can not Registered\", \"Error\", {\n        timeOut: 5000,\n      });\n      return;\n    }\n\n    if (this.user) {\n      // console.log(this.registerForm.value);\n      this.authService\n        .updateUser(this.user._id, this.registerForm.value)\n        .subscribe((data: any) => {\n          console.log(\"signup data: \", data);\n          // this.registerresponse = data;\n          const email = this.registerForm.value.email;\n          const msg = data.message;\n          // const status = data.status;\n          // this.registerForm.reset();\n          if (msg !== \"This email has been registered already\") {\n            this.toastr.success(msg, \"Success\", {\n              timeOut: 5000,\n            });\n            this.router.navigate([\"users\"]);\n          } else {\n            this.toastr.error(msg, \"Error\", {\n              timeOut: 5000,\n            });\n          }\n        });\n    } else {\n      console.log(this.registerForm.value);\n      this.authService.register(this.registerForm.value).subscribe(\n        (data) => {\n          console.log(\"signup data: \", data);\n          const msg = data.message;\n          // if (msg !== \"This email has been registered already\") {\n          this.toastr.success(msg, \"Success\", {\n            timeOut: 5000,\n          });\n          this.router.navigate([\"users\"]);\n          // }\n        },\n        (error) => {\n          console.log(error.error.message);\n          this.toastr.error(error.error.message, \"Error\", {\n            timeOut: 5000,\n          });\n        }\n      );\n    }\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registerForm.controls;\n  }\n}\n","<!-- <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script> -->\n\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-header></app-header>\n    </div>\n</div>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- <app-header></app-header> -->\n            <app-dashboard></app-dashboard>\n        </div>\n    </div>\n    <div class=\"row\">\n\n        <div class=\"col-md-11 col-lg-9 col-xl-7 right\">\n            <div class=\"register\">\n                <h2 class=\"text-center\">Welcome to my asasa</h2>\n                <form class=\"form-register\" [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\">\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <i class=\"fa fa-user fa\" aria-hidden=\"true\"></i>\n                            <input type=\"text\" class=\"form-control inputs\" formControlName=\"fullname\" placeholder=\"Full name\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\n                            <div *ngIf=\"submitted && f.fullname.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.fullname.errors.required\">Name is required</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n                            <input type=\"text\" class=\"form-control emailInput\" formControlName=\"email\" id=\"email\" autocomplete=\"off\" placeholder=\"Enter Email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Password -->\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <i class=\"fas fa-unlock\"></i>\n                            <input type=\"password\" (keyup)=\"password($event.target.value, 'Pass')\" class=\"form-control inputs\" formControlName=\"password\" autocomplete=\"off\" placeholder=\"Password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <i class=\"fas fa-unlock\"></i>\n                            <input type=\"password\" (keyup)=\"password($event.target.value, 'Conf')\" class=\"form-control inputs\" formControlName=\"confirm_password\" autocomplete=\"off\" placeholder=\"Confirm Password\" [ngClass]=\"{ 'is-invalid': submitted && f.confirm_password.errors }\"\n                            />\n                            <div *ngIf=\"submitted && f.confirm_password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.confirm_password.errors.required\">Password is required</div>\n                                <div *ngIf=\"f.confirm_password.errors.minlength\">Confirm Password must be at least 6 characters</div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"!submitted\" class=\"texts\">{{abc}}</div>\n                        <div *ngIf=\"submitted && !f.confirm_password.errors\" class=\"texts\">{{abc}}</div>\n                    </div>\n                    <!-- Contact -->\n                    <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <i class=\"fas fa-phone\"></i>\n                            <input formControlName=\"contact\" type=\"number\" class=\"form-control inputs\" autocomplete=\"off\" placeholder=\"Phone Number\" [ngClass]=\"{ 'is-invalid': submitted && f.contact.errors }\" />\n                            <div *ngIf=\"submitted && f.contact.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.contact.errors.required\">Contact is required</div>\n                            </div>\n                        </div>\n                        <div id='message'></div>\n                    </div>\n                    <!-- City -->\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select City</b> -->\n                            <i class=\"fas fa-building\"></i>\n                            <ng-select class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"_id\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\n                            </ng-select>\n                            <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.city.errors.required\">City is required</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select City</b> -->\n                            <i class=\"fas fa-building\"></i>\n                            <ng-select [(ngModel)]=\"user.city.city\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\n                            </ng-select>\n                            <!-- {{user.city.city}} -->\n                            <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.city.errors.required\">City is required</div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Location -->\n                    <div class=\"form-group\" *ngIf=\"user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select Location</b> -->\n                            <i class=\"fas fa-street-view\"></i>\n                            <ng-select [(ngModel)]=\"selectStringLocations\" [multiple]=\"true\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select inputs2\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                            </ng-select>\n                            <!-- {{user.location[0].location}} -->\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select Location</b> -->\n                            <i class=\"fas fa-street-view\"></i>\n                            <ng-select class=\"ng-select inputs2\" [multiple]=\"true\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\n                            </ng-select>\n                        </div>\n                    </div>\n                    <!-- Access Type -->\n                    <div class=\"form-group\" *ngIf=\"!user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select Access</b> -->\n                            <i class=\"fas fa-universal-access\"></i>\n                            <ng-select class=\"ng-select inputs2\" [items]=\"accessType\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\n                                <!-- <ng-select class=\"ng-select inputs2\" [items]=\"access\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\n                            <option>dasdas</option> -->\n                            </ng-select>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"user\">\n                        <div class=\"input-group\">\n                            <!-- <b>Select Access</b> -->\n                            <i class=\"fas fa-universal-access\"></i>\n                            <ng-select [(ngModel)]=\"user.access\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select inputs2\" [items]=\"accessType\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\n                                <!-- <ng-select class=\"ng-select inputs2\" [items]=\"access\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\n                            <option>dasdas</option> -->\n                            </ng-select>\n                            <!-- {{user.access}} -->\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"submit\" class='btn' class=\"btn btn-primary rounded-pill\">\n                            <span *ngIf=\"!user\">Register</span>\n                            <span *ngIf=\"user\">Save</span>\n                        </button>\n                    </div>\n                </form>\n\n            </div>\n        </div>\n    </div>\n\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n@Pipe({\n  name: 'tableFilter05'\n})\nexport class TableFilter05Pipe implements PipeTransform {\n\n  transform(\n    user: User[],\n    search_demand: string\n  ): User[] {\n\n    if (!user || !search_demand) {\n      return user;\n    }\n    return user.filter(user =>\n      user.Demand.toLowerCase().indexOf(search_demand.toLowerCase()) !== -1);\n\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-both',\n  templateUrl: './both.component.html',\n  styleUrls: ['./both.component.css']\n})\nexport class BothComponent implements OnInit {\n  user: any;\n  savedId: any;\n\n  withAutofocus = `<button type=\"button\" ngbAutofocus class=\"btn btn-danger\"\n      (click)=\"modal.close('Ok click')\">Ok</button>`;\n  deleteId: any;\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    private toastr: ToastrService\n    ) { }\n  // tslint:disable-next-line: variable-name\n  search_id: string;\n  // tslint:disable-next-line: variable-name\n  search_client: string;\n  // tslint:disable-next-line: variable-name\n  general_search: string;\n  // tslint:disable-next-line: variable-name\n  search_location: string;\n  // tslint:disable-next-line: variable-name\n  search_type: string;\n  // tslint:disable-next-line: variable-name\n  search_demand: string;\n  // tslint:disable-next-line: variable-name\n  search_area: string;\n\n  ngOnInit(): void {\n    this.getAllList();\n  }\n  \n  setUser(user: any){\n    this.authService.setUser(user);\n    // this.authService.setFormTitle('Both');\n    this.router.navigateByUrl('/add-inventories');\n    }\n    \n    setFormTitle(name){\n      this.authService.setFormTitle(name);\n      this.router.navigate(['/add-inventories']);\n    }\n    \n  getAllList() {\n    this.authService.getAll().subscribe(\n      (data) => {\n        this.user = data.inventories;\n        console.log('Server response: ', data);\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n    // Function to delete the single inventory\n  deleteLead(){\n    console.log(this.deleteId);\n\n    this.authService.deleteInventory(this.deleteId).subscribe(data => {\n      console.log(data);\n      if (data.code === 200) {\n        this.toastr.success(data.message, 'Success', {\n            timeOut: 5000\n          });\n          this.getAllList();\n      //   for ( let i = 0; i < this.user.length; i++){\n      //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\n      }\n\n    });\n  }\n\n  confirmID(id) {\n    console.log(id);\n\n    this.deleteId = id;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <app-header></app-header>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-2\">\n        <!-- <app-header></app-header> -->\n        <app-dashboard></app-dashboard>\n    </div>\n    <!-- </div> -->\n    <div class=\"col-md-9\">\n        <div class=\"both\">\n            <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Both Leads/Inventory Table</b></h1>\n            <br>\n            <div>\n                <button class=\"btn btn-primary rounded-pill\" (click)=\"setFormTitle('Both')\">Add New</button>\n            </div>\n            <div class=\"pull-right\">\n                <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\n                <div class=\"card-body row\">\n                    <div class=\"col-auto\">\n                        <i class=\"fa fa-search icon\"></i>\n                    </div>\n                    <!--end of col-->\n                    <div class=\"col\">\n                        <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\" placeholder=\"Search topic or keyword\">\n                    </div>\n\n                    <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\n\n                    <button onclick=\"window.print()\" class=\"btn btn-primary rounded-pill\">Print</button>\n                    <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                </div>\n            </div>\n            <br><br><br>\n            <!-- Inventory management table is below -->\n            <table class=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Client</th>\n                        <th scope=\"col\">Type</th>\n                        <th scope=\"col\">Purpose</th>\n                        <th scope=\"col\">Prop. Type</th>\n                        <th scope=\"col\">Prop. #</th>\n                        <th scope=\"col\">Area</th>\n                        <th scope=\"col\">Location</th>\n                        <th scope=\"col\">Demand</th>\n                        <th scope=\"col\">Beds</th>\n                        <th scope=\"col\">Phone #</th>\n                        <th scope=\"col\">Comment</th>\n                        <th scope=\"col\">Assigned To</th>\n                        <th scope=\"col\">Admin Status</th>\n                        <th scope=\"col\">Agent Status</th>\n                        <th scope=\"col\">Added On</th>\n                        <th scope=\"col\">Operations</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of user | filter: general_search\">\n                        <!-- | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id -->\n                        <td>{{ user._id }}</td>\n\n                        <td><b>Name : </b>{{ user?.client_name }} <br> <b>Number : </b>{{ user?.client_number}}</td>\n                        <!-- <td>{{ user.client_name }}</td> -->\n                        <td>{{ user?.client_type }}</td>\n                        <td>{{ user?.property_purpose }}</td>\n                        <td>{{ user?.property_type }}</td>\n                        <td>{{ user?.Prop_num }}</td>\n                        <td>{{ user?.area}}</td>\n                        <!-- <td>{{ user.location.location }}</td> -->\n\n                        <!-- <td>\n                            <span *ngFor=\"let loc of user?.location\">{{ loc.location }}<br></span>\n                        </td> -->\n\n\n                        <td>\n                            {{user.city[0]?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},  </span>\n                        </td>\n\n                        <td>{{ user?.demand_price }}</td>\n                        <td>{{ user?.beds_number }}</td>\n                        <td>{{ user?.Phone_num }}</td>\n                        <td>{{ user?.Comment }}</td>\n                        <td>{{ user.assigned_to?.name}}</td>\n                        <td>{{ user?.Admin_status }}</td>\n                        <td>{{ user?.Agent_status }}</td>\n                        <td>{{ user?.created | date: \"dd/MM/yyyy\"}}</td>\n                        <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i><a (click)=\"setUser(user)\" role=\"button\">Edit</a>\n\n                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\n\n                        </td>\n                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\n                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                        Are you sure you want to Delete it?\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n          Close\n        </button>\n                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLead()\">\n          Delete\n        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../Authentication/authentication.service';\nimport { Injectable } from '@angular/core';\n\nimport * as jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RedirectLoginGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthenticationService) {}\n\n  async canActivate() {\n    const token = await this.authService.getToken();\n    if (token) {\n      this.router.navigateByUrl('/profile');\n  } else {\n      return true;\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../../../app/dashboard/inventory/User';\n\n@Pipe({\n  name: 'tableFilter03'\n})\nexport class TableFilter03Pipe implements PipeTransform {\n\n  transform(\n    user: User[],\n    search_area: string\n  ): User[] {\n\n    if (!user || !search_area) {\n      return user;\n    }\n    return user.filter(user =>\n      user.Area.toLowerCase().indexOf(search_area.toLowerCase()) !== -1);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MapComponent } from './map/map.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { ForgetpassverifyComponent } from './forgetpassverify/forgetpassverify.component';\nimport { NewpassComponent } from './newpass/newpass.component';\nimport { SignupotpComponent } from './signupotp/signupotp.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './dashboard/profile/profile.component';\nimport { InventoryComponent } from './dashboard/inventory/inventory.component';\nimport { BothComponent } from './dashboard/both/both.component';\nimport { UsersComponent } from './dashboard/users/users.component';\nimport { LeadsComponent } from './dashboard/leads/leads.component';\nimport { InactiveComponent } from './dashboard/inactive/inactive.component';\nimport { OptionsComponent } from './dashboard/options/options.component';\nimport { AddUsersComponent } from './dashboard/users/add-users/add-users.component';\nimport { AddLeadsComponent } from './dashboard/leads/add-leads/add-leads.component';\nimport { AddInventoriesComponent } from './dashboard/inventory/add-inventories/add-inventories.component';\nimport { RedirectLoginGuard } from './services/guards/redirectlogin.guard';\nimport { IsLoginGuard } from './services/guards/islogin.guard';\n\nconst routes: Routes = [\n  {\n    path: 'map',\n    canActivate: [IsLoginGuard], component: MapComponent\n  },\n  {\n    path: '',\n    canActivate: [RedirectLoginGuard],\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    canActivate: [IsLoginGuard], component: SignupComponent\n  },\n  { path: 'forgetpass-component', component: ForgetpassComponent },\n  { path: 'forgetpassverify-component/:email', component: ForgetpassverifyComponent },\n  { path: 'newpass-component/:email', component: NewpassComponent },\n  { path: 'signupotp-component/:email', canActivate: [IsLoginGuard], component: SignupotpComponent },\n  {\n    path: 'dashboard',\n    canActivate: [IsLoginGuard],\n    component: DashboardComponent\n  },\n  {\n    path: 'navbar',\n    canActivate: [IsLoginGuard], component: DashboardComponent\n  },\n  {\n    path: 'profile/:email',\n    canActivate: [IsLoginGuard], component: ProfileComponent\n  },\n  {\n    path: 'profile',\n    canActivate: [IsLoginGuard],\n     component: ProfileComponent\n  },\n  {\n    path: 'inventory',\n    canActivate: [IsLoginGuard], component: InventoryComponent\n  },\n  {\n    path: 'users',\n    canActivate: [IsLoginGuard], component: UsersComponent\n  },\n  {\n    path: 'both',\n    canActivate: [IsLoginGuard], component: BothComponent\n  },\n  {\n    path: 'leads',\n    canActivate: [IsLoginGuard], component: LeadsComponent\n  },\n  {\n    path: 'inactive',\n    canActivate: [IsLoginGuard], component: InactiveComponent\n  },\n  {\n    path: 'options',\n    canActivate: [IsLoginGuard], component: OptionsComponent\n  },\n  {\n    path: 'add-users',\n    canActivate: [IsLoginGuard], component: AddUsersComponent\n  },\n  {\n    path: 'add-leads',\n    canActivate: [IsLoginGuard], component: AddLeadsComponent\n  },\n  {\n    path: 'add-inventories',\n    canActivate: [IsLoginGuard], component: AddInventoriesComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\n  // registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  mobileView: boolean;\n  username: string;\n  email: string;\n  errorMessage: any;\n  constructor(\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\n    public router: Router,\n    private route: ActivatedRoute,\n    private toastr: ToastrService) {\n  }\n\n  ngOnInit(): void {\n    this.initialize();\n  }\n  initialize() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n    });\n  }\n  loginUser() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.authService.login(this.loginForm.value).subscribe(data => {\n\n      console.log('Subscribed Data: ', data);\n      const msg = data.message;\n      const token = data.token;\n      const email = this.loginForm.value.email;\n      this.toastr.success(msg, 'Success', {\n        timeOut: 5000\n      });\n      this.authService.setToken(token);\n      this.router.navigate(['profile', email]);\n\n    },\n      (error) => {\n        console.error(error.error.message);\n        this.errorMessage = error;\n        this.toastr.error(error.error.message, 'Error', {\n          timeOut: 5000\n        });\n      }\n    );\n\n  }\n  // getting input labels values from user end (login.html)\n  get f() { return this.loginForm.controls; }\n}\n","<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n -->\n<div class=\"container\">\n    <div class=\"row center\">\n        <img class=\"wave\" src=\"assets/icons/wave.png\">\n        <div class=\"container\">\n            <div class=\"img\">\n                <img src=\"assets/icons/bg.svg\">\n            </div>\n            <div class=\"login-content text-center\">\n                <div class=\"login\">\n                    <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n                        <img src=\"assets/icons/avatar.svg\">\n                        <h3>Welcome to Agent Dashboard</h3>\n                        <div class=\"input-div one\" style=\"background-color: #fff; padding-left: 5px;\">\n                            <div class=\"i\">\n                                <i class=\"fa fa-user\"></i>\n                            </div>\n                            <div class=\"div\">\n                                <!-- <h5>Username</h5> -->\n                                <input type=\"text\" class=\"input\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" type=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"\">\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback text-left\">\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"input-div pass\" style=\"background-color: #fff;\">\n                            <div class=\"i\">\n                                <i class=\"fa fa-lock\"></i>\n                            </div>\n                            <div class=\"div\">\n                                <!-- <h5>Password</h5> -->\n                                <input type=\"password\" class=\"input\" class=\"input-field\" type=\"password\" formControlName=\"password\" placeholder=\"Password\" required=\"\" class=\"\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback text-left\">\n                                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                       \n                        <input type=\"submit\" class=\"btn\" value=\"Login\">\n                        <hr class=\"mt-4 mb-4\">\n                         <!-- <div class=\"custom-control custom-checkbox mt-3\">\n                             <p>\n                                <a class=\"text-center\" routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                             </p>\n                             <p>\n                                Not Registered? <a class=\"text-center\" routerLink=\"/signup-component\"> <b>Sign up!</b></a>\n                             </p>\n                        </div> -->\n                    </form>\n                </div>\n            </div>\n        </div>\n        <!-- <div class=\"col-5 left\">\n            <div>\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n        <div class=\"col-1 v2 \" *ngIf=\"mobileView ==false\">\n            <div class=\"vl\"></div>\n            Log - in\n            <div class=\"vl\"></div>\n        </div>\n        <div class=\"col-6 right\">\n            <h2 class=\"text-center\">Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" type=\"email\" name=\"email\"\n                            formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-lock icon\"></i>\n                        <input class=\"input-field\" type=\"password\" formControlName=\"password\" placeholder=\"Password\"\n                            required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\n                                characters\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <br>\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\">\n                        Login</button>\n                </div>\n                <div class=\"custom-control custom-checkbox mb-3\">\n                    <a routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\n                    <br>\n                    Not Registered?\n                    <a routerLink=\"/register\"> <b>Sign up!</b></a>\n                </div>\n            </form>\n        </div> -->\n    </div>\n</div>\n<link href=\"https://fonts.googleapis.com/css?family=Poppins:600&display=swap\" rel=\"stylesheet\">\n<script src=\"https://kit.fontawesome.com/a81368914c.js\"></script>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-forgetpass',\n  templateUrl: './forgetpass.component.html',\n  styleUrls: ['./forgetpass.component.css']\n})\nexport class ForgetpassComponent implements OnInit {\n  forgetPassForm: FormGroup;\n  submitted = false;\n  constructor(\n    private authServ: AuthenticationService,\n    public formBuilder: FormBuilder,\n    public router: Router) { }\n\n  ngOnInit(): void {\n    this.forgetPassForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]]\n    });\n  }\n  get f() { return this.forgetPassForm.controls; }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.forgetPassForm.invalid) {\n      return;\n    }\n    console.log(\"Sending this email: \" + this.forgetPassForm.value.email);\n    const body = {\n      email: this.forgetPassForm.value.email\n    }\n    this.authServ.verifyEmail(body).subscribe(data => {\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      const email = this.forgetPassForm.value.email;\n      if (status) {\n        alert(msg)\n\n        this.router.navigate(['forgetpassverify-component', email]);\n      }\n      else\n      {\n        alert(msg);\n      }\n    });\n\n\n  }\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Forget password\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n            <form class=\"form-register\" [formGroup]=\"forgetPassForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\" class='input-container'>\n                    <div class=\"input-group\">\n                        <i class=\"fa fa-user icon\"></i>\n                        <input class=\"form-control\" class=\"input-field\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"text\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <div class=\"custom-control custom-checkbox mb-3\"> -->\n                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\">Get Code</button>\n                </div>\n                <button class=\"btn btn-info rounded-pill\" routerLink=\"/\">Back</button>\n                <!-- </div> -->\n\n            </form>\n        </div>\n\n    </div>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms';\n// import { from } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-users',\n  templateUrl: './add-users.component.html',\n  styleUrls: ['./add-users.component.css']\n})\nexport class AddUsersComponent implements OnInit {\n  submitted = false;\n  user: any;\n  cartService: any;\n  adduserForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n\n  // tslint:disable-next-line: typedef\n  formDeclare() {\n    this.adduserForm = this.formBuilder.group({\n      location: ['', Validators.required],\n      email: ['', Validators.required],\n      userId: ['', Validators.required],\n      status: ['', Validators.required],\n      fullname: ['', Validators.required],\n      contact: ['', Validators.required],\n      access: ['', Validators.required],\n    });\n  }\n  // convenience getter for easy access to form fields\n  // tslint:disable-next-line: typedef\n  get f() { return this.adduserForm.controls; }\n  ngOnInit(): void {\n    this.formDeclare();\n  }\n  // tslint:disable-next-line: typedef\n  createUser() {\n    this.authService.createUsers(this.adduserForm).subscribe((res) => {\n      console.log('Subscribed data: ', res);\n    });\n  }\n  // tslint:disable-next-line: typedef\n  submitForm() {\n    this.submitted = true;    // stop here if form is invalid\n    if (this.adduserForm.invalid) {\n      this.toastr.error('Fields Empty', 'Error', {\n        timeOut: 5000\n      });\n      // console.log('Erroneous')\n      return;\n    }\n    else {\n      console.log('calling the service: ', this.adduserForm.value);\n      this.authService.createUsers(this.adduserForm.value).subscribe((res) => {\n        this.adduserForm.reset();\n        this.toastr.success('User Added', 'Success', {\n          timeOut: 9000\n        });\n        console.log('Subscribed data: ', res);\n      });\n    }\n\n  }\n}\n","<div class=\" register\">\n    <div class=\"row\">\n        <div class=\"col-md-2 register-left\">\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\n            <h2><b>Asasa Real Estate</b></h2>\n        </div>\n        <div class=\"col-md-10 col-sm-10 register-right\">\n            <form class=\"form-register\" [formGroup]=\"adduserForm\">\n                <h2 class=\"register-heading\">Add User</h2>\n                <div class=\"row register-form\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                <!-- <br><br> -->\n                                User ID\n                                <input type=\"number\" class=\"form-control\" formControlName=\"userId\" id=\"userId\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.userId.errors }\" />\n                                <!-- <label for=\"nme\"><span>Enter ID</span></label> -->\n                                <div *ngIf=\"submitted && f.userId.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.userId.errors.required\">Id is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n\n                                Full Name\n                                <input type=\"text\" class=\"form-control\" formControlName=\"fullname\" id=\"fullname\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\n                                <!-- <label for=\"nme\"><span>Enter Full Name</span></label> -->\n                                <div *ngIf=\"submitted && f.fullname.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.fullname.errors.required\">Name is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                <br> Contact #\n                                <input type=\"number\" class=\"form-control\" formControlName=\"contact\" id=\"contact\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.contact.errors }\" />\n                                <div *ngIf=\"submitted && f.contact.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.contact.errors.required\">Contact is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                <br> Location\n                                <input type=\"text\" class=\"form-control\" formControlName=\"location\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                <br><br> Email Address\n                                <input type=\"email\" class=\"form-control\" formControlName=\"email\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- Right side column -->\n                    <div class=\"col-md-6 col-sm-6\">\n                        <!-- <br> -->\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                Access\n                                <input formControlName=\"access\" class=\"form-control\" type=\"text\" list=\"productName\" [ngClass]=\"{ 'is-invalid': submitted && f.access.errors }\" />\n                                <div *ngIf=\"submitted && f.access.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.access.errors.required\">Access is required</div>\n                                </div>\n                                <datalist id=\"productName\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <br><br>\n                        <div class=\"form-group\">\n                            <div class=\"\">\n                                Status\n                                <input formControlName=\"status\" class=\"form-control\" type=\"text\" list=\"productName1\" [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\" />\n                                <div *ngIf=\"submitted && f.status.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.status.errors.required\">Status is required</div>\n                                </div>\n                                <datalist id=\"productName1\">\n                                    <option value=\"Pen\">Pen</option>\n                                    <option value=\"Pencil\">Pencil</option>\n                                    <option value=\"Paper\">Paper</option>\n                                </datalist>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-sm-12\">\n                        <br><br>\n                        <div class=\"form-group\" class=\"pull-right\">\n                            <button (click)=\"submitForm()\" class=\"btn btn-primary\">Add</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\n\n@Component({\n  selector: 'app-forgetpassverify',\n  templateUrl: './forgetpassverify.component.html',\n  styleUrls: ['./forgetpassverify.component.css']\n})\nexport class ForgetpassverifyComponent implements OnInit {\n\n  submitted = false;\n  email: string;\n  forgetpassForm: FormGroup;\n  constructor(\n    private authServ: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      this.email = param.email;\n      // console.log(this.email);\n    });\n    this.initialize();\n  }\n  initialize() {\n    this.forgetpassForm = this.formBuilder.group({\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\n    });\n  }\n  get f() { return this.forgetpassForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.forgetpassForm.invalid) {\n      return;\n    }\n    const user = {\n      email: this.email,\n      otpcode: this.forgetpassForm.value.code\n    };\n\n    // this.authServ.verifyOTPEmail(user).subscribe(data => {\n    //   console.log(data);\n    // });\n    this.authServ.verifyOTPCode(user).subscribe(data => {\n      console.log(data);\n      const status = data.success;\n      const msg = data.status;\n      if (status) {\n\n        alert(msg)\n        this.router.navigate(['newpass-component', this.email]);\n      } else {\n        alert(msg);\n      }\n    });\n  }\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-5 col-md-5 left\">\n            <div>\n\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\n            </div>\n        </div>\n\n        <div class=\"col-1 v2\">\n            <div class=\"vl\"></div>\n            Verification\n            <div class=\"vl\"></div>\n        </div>\n\n        <div class=\"col-sm-6 col-md-6 right\">\n            <h2>Welcome to my asasa</h2>\n\n            <form class=\"form-register\" [formGroup]=\"forgetpassForm\" (ngSubmit)=\"onSubmit()\">\n\t\t\t\t<div class=\"form-group\">\n                <div class=\"input-group\">\n                    <i class=\"fa fa-user icon\"></i>\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \n                        placeholder=\"Enter 6-digit verify code\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\n                    </div>\n                </div>\n                </div>\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\n                <div class=\"form-group\">\n\t\t\t\t\t<button type=\"submit\" class='btn'\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\n\t\t\t\t</div>\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/forgetpass-component\">back</button>\n                <!-- <div class=\"form-group\">\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\n                </div>\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\n\n                <!-- </div> -->\n            </form>\n        </div>\n    </div>\n\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}