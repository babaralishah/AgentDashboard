{"version":3,"sources":["webpack:///fs (ignored)","webpack:///src/app/signupotp/signupotp.component.ts","webpack:///src/app/signupotp/signupotp.component.html","webpack:///src/app/dashboard/page-not-found/page-not-found.component.ts","webpack:///src/app/dashboard/page-not-found/page-not-found.component.html","webpack:///crypto (ignored)","webpack:///src/app/services/Map/mapservice.service.ts","webpack:///stream (ignored)","webpack:///src/app/Pipes/table-filter02.pipe.ts","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/header-navigation/navigation.component.ts","webpack:///src/app/header-navigation/navigation.component.html","webpack:///src/app/services/Authentication/authentication.service.ts","webpack:///src/app/dashboard/profile/profile.component.html","webpack:///src/app/dashboard/profile/profile.component.ts","webpack:///src/app/services/guards/role.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/app/Pipes/filter.pipe.ts","webpack:///src/app/dashboard/users/users.component.html","webpack:///src/app/dashboard/users/users.component.ts","webpack:///src/app/Pipes/table-filter.pipe.ts","webpack:///src/app/dashboard/leads/leads.component.html","webpack:///src/app/dashboard/leads/leads.component.ts","webpack:///src/app/dashboard/inventory/inventory.component.html","webpack:///src/app/dashboard/inventory/inventory.component.ts","webpack:///src/app/newpass/newpass.component.ts","webpack:///src/app/newpass/newpass.component.html","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/Pipes/table-filter04.pipe.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/guards/islogin.guard.ts","webpack:///src/app/dashboard/options/options.component.ts","webpack:///src/app/dashboard/options/options.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/location/location.component.html","webpack:///src/app/dashboard/location/location.component.ts","webpack:///src/app/dashboard/leads/add-leads/add-leads.component.ts","webpack:///src/app/dashboard/leads/add-leads/add-leads.component.html","webpack:///src/app/Pipes/table-filter06.pipe.ts","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/Pipes/table-demand-filter.pipe.ts","webpack:///src/app/Pipes/table-date-filter.pipe.ts","webpack:///src/app/Pipes/table-filter03.pipe.ts","webpack:///src/app/dashboard/inactive/inactive.component.ts","webpack:///src/app/dashboard/inactive/inactive.component.html","webpack:///src/app/dashboard/header/header.component.ts","webpack:///src/app/dashboard/header/header.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/dashboard/assigned-leads/assigned-leads.component.html","webpack:///src/app/dashboard/assigned-leads/assigned-leads.component.ts","webpack:///src/app/dashboard/inventory/add-inventories/add-inventories.component.ts","webpack:///src/app/dashboard/inventory/add-inventories/add-inventories.component.html","webpack:///src/app/dashboard/location/add-location/add-location.component.ts","webpack:///src/app/dashboard/location/add-location/add-location.component.html","webpack:///src/app/sidebar/menu-items.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/dashboard/both/both.component.html","webpack:///src/app/dashboard/both/both.component.ts","webpack:///src/app/services/guards/redirectlogin.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/Pipes/table-filter05.pipe.ts","webpack:///src/app/forgetpass/forgetpass.component.ts","webpack:///src/app/forgetpass/forgetpass.component.html","webpack:///src/app/dashboard/users/add-users/add-users.component.ts","webpack:///src/app/dashboard/users/add-users/add-users.component.html","webpack:///src/app/forgetpassverify/forgetpassverify.component.ts","webpack:///src/app/forgetpassverify/forgetpassverify.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SignupotpComponent","authServ","formBuilder","router","route","submitted","params","subscribe","param","email","initialize","signupotpForm","group","code","required","minLength","maxLength","pattern","invalid","user","otpcode","value","verifyOTPEmail","data","console","log","status","msg","alert","navigate","controls","onSubmit","selector","templateUrl","styleUrls","PageNotFoundComponent","MapserviceService","http","apiurl","get","providedIn","TableFilter02Pipe","locationName","filter","i","length","toLowerCase","indexOf","name","SidebarComponent","modalService","showMenu","showSubMenu","sidebarnavItems","element","sidebarnavItem","NavigationComponent","toggleSidebar","showSearch","AuthenticationService","httpClient","headers","set","url","getToken","post","id","put","pipe","handleError","localStorage","setItem","form_title","getItem","File","formData","FormData","append","token","Error","body","removeItem","res","error","ErrorEvent","message","genericId","val","Math","abs","Number","toFixed","authToken","ImageSnippet","src","file","ProfileComponent","authService","username","tokenization","getDecodedToken","decodedToken","tokendata","event","target","files","reader","FileReader","addEventListener","selectedFile","result","readAsDataURL","_id","updateUser","content","nativeElement","style","marginLeft","contentWidthEmitted","onSelectFile","updateImage","RoleGuard","auth","expectedRole","tokenPayload","includes","access","environment","production","mapbox","accessToken","FilterPipe","keys","term","item","split","some","key","hasOwnProperty","RegExp","test","UsersComponent","toastr","reverse","p","cities","locations","agentList","options","placeholder","selectedOption","getUserList","getCities","getAllUsersList","currentLoginUser","err","selectedCity","getLocations","loc","cityId","e","startDate","Date","endDate","refId","setUser","navigateByUrl","getUsers","users","forEach","city","push","cityName","SubLocation","location","agent","agentAssignedName","fullname","deleteId","deleteUser","success","timeOut","header","ws","json_to_sheet","wscols","wch","hidden","wb","book_new","book_append_sheet","changeAssignedAgent","changeCity","changeLocation","exportTOExcel","sort","TableFilterPipe","LeadsComponent","withAutofocus","cityAdminList","superAdminList","assignLeadData","usersList","getUserDetails","getLeadsList","getCityAdminList","isCheckComment","getLeads","leads","assignedTo","added_ByName","added_By","demand_price","demand","max_price","min_price","assigned_history","userId","history","currentUser","date","created","getDate","getMonth","getFullYear","comments","assignLeadToAgent","editLeadToAgent","referenceId","setFormTitle","deleteInventory","contact","optionChange","changeStartDate","changeEndDate","isComment","InventoryComponent","getInventoryList","getInventory","inventories","priceFilter","NewpassComponent","newpassForm","password","newpassword","DashboardComponent","mini","widthEmittedEvent","sidebar","width","emit","TableFilter04Pipe","search_type","AppComponent","isShown","title","loading","loginForm","login","IsLoginGuard","OptionsComponent","addoptionForm","add_newcity","added_cities","add_newloc","added_loc","enter_newloc","add_newtype","added_type","add_newstatus","added_status","formDeclare","reset","AppModule","forRoot","declarations","imports","providers","bootstrap","LocationComponent","index","getCityName","SubLocationName","subLocations","subLocation","deletedId","deleteLocation","AddLeadsComponent","addleadForm","client","agent_status","admin_status","phone_no","added_on","area","type","purpose","prop_type","prop_no","comment","assigned_to","submitForm","TableFilter06Pipe","search_client","MapComponent","mapservice","opacity","lat","lng","geojson","features","properties","iconSize","geometry","coordinates","mapArray","tag","size","initializemapbox","map","container","center","zoom","marker","el","document","createElement","className","backgroundImage","innerHTML","fontStyle","textAlign","color","height","fontSize","fontWeight","fontFamily","setLngLat","setPopup","setHTML","addTo","mapboxOverlay","addControl","positionOptions","enableHighAccuracy","trackUserLocation","slider","getElementById","sliderValue","on","addSource","addLayer","source","paint","input","setPaintProperty","parseInt","textContent","TableDemandPipe","minDemand","maxDemand","TableDatePipe","createdAt","TableFilter03Pipe","InactiveComponent","Id","Client","Purpose","Prop_type","Prop_num","Area","Location","Demand","Phone_num","Comment","Assigned_to","Admin_status","Agent_status","Added_on","HeaderComponent","NavbarComponent","AssignedLeadsComponent","row","options2","selectedOption2","placeholder2","getAllList","getAllAssignedLeads","deleteAssignedLeads","AddInventoriesComponent","agentAssignedNames","superAdminAssignedNames","cityAdminAssignedNames","formSendingStatus","client_type","client_type1","access_type1","isInvalidPrice","isInvalidArea","userLocationMatched","urls","fileToUpload","isRent","agentListFull","assignStringName","href","getUser","removeUser","getFormTitle","removeFormTitle","addinventoryForm","patchValue","assigned_type","priority","property_purpose","property_type","min_area","max_area","beds_number","area_unit","client_name","client_number","updatefields","userList","minimumPriceRange","maximumPriceRange","minimumAreaRange","maximumAreaRange","property_type1","clientType","selectStringLocations","selectedLocations","locId","selectAgentValue","optionValue1","demandValueVariable","demandValueVariable1","demandValueVariable2","updateInventory","createInventory","AddLocationComponent","changeType","updateLocationForm","addLocationForm","addLocations","subLoc","addSubLocation","setChangeType","ROUTES","path","icon","extralink","submenu","SignupComponent","sideMenuCollapsed","accessType","checked","registerForm","confirm_password","abc","register","userData","registerUser","BothComponent","getAll","RedirectLoginGuard","routes","canActivate","component","AppRoutingModule","exports","LoginComponent","setToken","errorMessage","loginUser","TableFilter05Pipe","search_demand","ForgetpassComponent","forgetPassForm","verifyEmail","AddUsersComponent","adduserForm","createUsers","ForgetpassverifyComponent","forgetpassForm","verifyOTPCode","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["/* (ignored) */","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-signupotp',\r\n  templateUrl: './signupotp.component.html',\r\n  styleUrls: ['./signupotp.component.css']\r\n})\r\nexport class SignupotpComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  email: string;\r\n  signupotpForm: FormGroup;\r\n  constructor(\r\n    private authServ: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(param => {\r\n      this.email = param.email;\r\n      // console.log(this.email);\r\n    });\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    this.signupotpForm = this.formBuilder.group({\r\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\r\n    });\r\n  }\r\n  get f() { return this.signupotpForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.signupotpForm.invalid) {\r\n      return;\r\n    }\r\n    const user = {\r\n      email: this.email,\r\n      otpcode: this.signupotpForm.value.code\r\n    };\r\n\r\n    this.authServ.verifyOTPEmail(user).subscribe(data => {\r\n      console.log(data);\r\n      const status = data.status;\r\n      const msg = data.msg;\r\n      if (status) {\r\n\r\n        alert('\\nMessage: ' + msg + '\\n\\n Status: ' + status)\r\n        this.router.navigate(['profile', this.email]);\r\n      } else {\r\n        alert(msg);\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 col-md-5 left\">\r\n            <div>\r\n\r\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-1 v2\">\r\n            <div class=\"vl\"></div>\r\n            Verification\r\n            <div class=\"vl\"></div>\r\n        </div>\r\n\r\n        <div class=\"col-sm-6 col-md-6 right\">\r\n            <h2>Welcome to my asasa</h2>\r\n\r\n            <form class=\"form-register\" [formGroup]=\"signupotpForm\" (ngSubmit)=\"onSubmit()\">\r\n\t\t\t\t<div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <i class=\"fa fa-user icon\"></i>\r\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \r\n                        placeholder=\"Enter 6-digit verify code\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\r\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\r\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\r\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\r\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\r\n                <div class=\"form-group\">\r\n\t\t\t\t\t<button type=\"submit\" class='btn'\r\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\r\n\t\t\t\t</div>\r\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/register-component\">back</button>\r\n                <!-- <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\r\n                </div>\r\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\r\n\r\n                <!-- </div> -->\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <img src=\"assets\\Page-Not-found-Image\\404-error.png\">\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12 back-button\">\r\n        <Button class=\"btn btn-primary\" routerLink=\"/profile\"> Go Back </Button>\r\n    </div>\r\n</div>","/* (ignored) */","// import { Observable, throwError } from 'rxjs';\r\n// import { catchError, retry } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams,HttpEvent, HttpErrorResponse, HttpEventType  } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n// import { Map } from './map';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapserviceService {\r\n  constructor(private http: HttpClient) { \r\n}\r\n\r\nprivate  apiurl = \"https://asasa.com/api/property\";\r\nreadData(): Observable<any> {\r\n  return this.http.get(this.apiurl);\r\n}\r\n\r\n}","/* (ignored) */","import { Pipe, PipeTransform } from \"@angular/core\";\r\n@Pipe({\r\n  name: \"LocationFilter\",\r\n})\r\nexport class TableFilter02Pipe implements PipeTransform {\r\n  transform(\r\n    // user: User[],\r\n    user: any,\r\n    locationName: string\r\n  ): typeof user {\r\n    if (!user || !locationName) {\r\n      return user;\r\n    }\r\n    return user.filter((user) => {\r\n      for (let i = 0; i < user.locationName.length; i++) {\r\n        // console.log(user.locationName[i].toLowerCase(), ', ', locationName.toLowerCase());\r\n        if (\r\n          user.locationName[i]\r\n            .toLowerCase()\r\n            .indexOf(locationName.toLowerCase()) !== -1\r\n        ) {\r\n          return user;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, AfterViewInit, OnInit } from '@angular/core';\r\nimport { ROUTES } from './menu-items';\r\nimport { RouteInfo } from './sidebar.metadata';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n//declare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html'\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  showMenu = '';\r\n  showSubMenu = '';\r\n  public sidebarnavItems:RouteInfo[]=[];\r\n  // this is for the open close\r\n  addExpandClass(element: string) {\r\n    if (element === this.showMenu) {\r\n      this.showMenu = '0';\r\n    } else {\r\n      this.showMenu = element;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  // End open close\r\n  ngOnInit() {\r\n    this.sidebarnavItems = ROUTES.filter(sidebarnavItem => sidebarnavItem);\r\n  }\r\n}\r\n","<nav class=\"sidebar-nav\">\r\n    <ul id=\"sidebarnav\">\r\n        <!-- First level menu -->\r\n        <li class=\"sidebar-item\" [class.active]=\"showMenu === sidebarnavItem.title\" *ngFor=\"let sidebarnavItem of sidebarnavItems\"\r\n            [routerLinkActive]=\"sidebarnavItem.submenu.length != 0 ? '' : 'active'\">\r\n            <div class=\"nav-small-cap\" *ngIf=\"sidebarnavItem.extralink === true\">{{sidebarnavItem.title}}</div>\r\n            <a class=\"sidebar-link waves-effect waves-dark\" [routerLink]=\"sidebarnavItem.class === '' ? [sidebarnavItem.path] : null\"\r\n                [ngClass]=\"[sidebarnavItem.class]\" *ngIf=\"!sidebarnavItem.extralink;\" (click)=\"addExpandClass(sidebarnavItem.title)\"\r\n                [routerLinkActive]=\"sidebarnavItem.submenu.length != 0 ? '' : 'active'\">\r\n                <i [ngClass]=\"[sidebarnavItem.icon]\"></i>\r\n                <span class=\"hide-menu\">{{sidebarnavItem.title}}</span>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\n//declare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html'\r\n})\r\nexport class NavigationComponent {\r\n  @Output()\r\n  toggleSidebar = new EventEmitter<void>();\r\n\r\n  public showSearch = false;\r\n\r\n  constructor() {}\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- toggle and nav items -->\r\n<!-- ============================================================== -->\r\n<ul class=\"navbar-nav float-left mr-auto\">\r\n  <li class=\"nav-item d-none d-md-block d-lg-none\">\r\n    <a\r\n      (click)=\"toggleSidebar.emit()\"\r\n      class=\"nav-link sidebartoggler waves-effect waves-light\"\r\n      href=\"javascript:void(0)\"\r\n    >\r\n      <i class=\"mdi mdi-menu font-24\"></i>\r\n    </a>\r\n  </li>\r\n  <!-- ============================================================== -->\r\n  <!-- Search -->\r\n  <!-- ============================================================== -->\r\n  <li class=\"nav-item search-box\">\r\n    <a\r\n      (click)=\"showSearch = !showSearch\"\r\n      class=\"nav-link waves-effect waves-dark\"\r\n      href=\"javascript:void(0)\"\r\n    >\r\n      <i class=\"ti-search\"></i>\r\n    </a>\r\n    <form\r\n      class=\"app-search position-absolute\"\r\n      [ngClass]=\"{ 'show-search': showSearch }\"\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search &amp; enter\"\r\n      />\r\n      <a class=\"srh-btn\" (click)=\"showSearch = !showSearch\">\r\n        <i class=\"ti-close\"></i>\r\n      </a>\r\n    </form>\r\n  </li>\r\n</ul>\r\n<!-- ============================================================== -->\r\n<!-- Right side toggle and nav items -->\r\n<!-- ============================================================== -->\r\n<ul class=\"navbar-nav float-right\">\r\n  <!-- ============================================================== -->\r\n  <!-- User profile and search -->\r\n  <!-- ============================================================== -->\r\n  <li class=\"nav-item dropdown\" ngbDropdown placement=\"bottom-right\">\r\n    <a\r\n      ngbDropdownToggle\r\n      class=\"nav-link dropdown-toggle text-muted waves-effect waves-dark pro-pic\"\r\n      href=\"javascript:void(0)\"\r\n      data-toggle=\"dropdown\"\r\n      aria-haspopup=\"true\"\r\n      aria-expanded=\"false\"\r\n    >\r\n      <img\r\n        src=\"assets/1.jpg\"\r\n        alt=\"user\"\r\n        class=\"rounded-circle\"\r\n        width=\"31\"\r\n      />\r\n    </a>\r\n    <div class=\"dropdown-menu user-dd\" ngbDropdownMenu>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n        <i class=\"ti-user m-r-5 m-l-5\"></i> My Profile</a\r\n      >\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n        <i class=\"ti-wallet m-r-5 m-l-5\"></i> My Balance</a\r\n      >\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n        <i class=\"ti-email m-r-5 m-l-5\"></i> Inbox</a\r\n      >\r\n      <div class=\"dropdown-divider\"></div>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n        <i class=\"ti-settings m-r-5 m-l-5\"></i> Account Setting</a\r\n      >\r\n      <div class=\"dropdown-divider\"></div>\r\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n        <i class=\"fa fa-power-off m-r-5 m-l-5\"></i> Logout</a\r\n      >\r\n      <div class=\"dropdown-divider\"></div>\r\n      <div class=\"p-l-30 p-10\">\r\n        <a href=\"javascript:void(0)\" class=\"btn btn-sm btn-success btn-rounded\"\r\n          >View Profile</a\r\n        >\r\n      </div>\r\n    </div>\r\n  </li>\r\n  <!-- ============================================================== -->\r\n  <!-- User profile and search -->\r\n  <!-- ============================================================== -->\r\n</ul>\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError, map } from \"rxjs/operators\";\r\nimport jwt_decode from \"jwt-decode\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthenticationService {\r\n  headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n  private readonly url = \"https://my-asasa.herokuapp.com\";\r\n  user: any;\r\n  form_title: any;\r\n  genericId: any;\r\n\r\n  constructor(private httpClient: HttpClient, public router: Router) {}\r\n\r\n  // Getting cities names from api\r\n  getCities() {\r\n    return this.httpClient.get<any>(`${this.url}/city`, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n\r\n  // Getting Locations names\r\n  getLocations() {\r\n    return this.httpClient.get<any>(`${this.url}/location`, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n  // Add new Location\r\n  addLocations(user: any) {\r\n    return this.httpClient.post<any>(`${this.url}/location/add`, user, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n  // Add new Sub Location\r\n  addSubLocation(id: any, user: any) {\r\n    return this.httpClient.put<any>(`${this.url}/location/${id}`, user, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n\r\n  // Delete Single Location\r\n  deleteLocation(id) {\r\n    return this.httpClient.delete<any>(\r\n      `https://my-asasa.herokuapp.com/location/${id}`,\r\n      {\r\n        headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n      }\r\n    );\r\n  }\r\n\r\n  // Assign lead to the Agent\r\n  editLeadToAgent(id: any, user: any) {\r\n    return this.httpClient.put(this.url + `/assign/${id}`, user, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n  // Assign lead to the Agent\r\n  assignLeadToAgent(user: any) {\r\n    console.log(user);\r\n\r\n    return this.httpClient.post(`${this.url}/assign/add`, user, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n\r\n  // API to delete the assigned leads\r\n  deleteAssignedLeads(id: any) {\r\n    return this.httpClient.delete<any>(\r\n      `https://my-asasa.herokuapp.com/assign/${id}`,\r\n      {\r\n        headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n      }\r\n    );\r\n  }\r\n\r\n  // API to get all assigned leads data\r\n  getAllAssignedLeads() {\r\n    return this.httpClient.get<any>(`${this.url}/assign`, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n\r\n  //////////// Send data to inventory using inventory form /////////////\r\n  createInventory(user: any) {\r\n    console.log(\"Create user func\");\r\n    return this.httpClient\r\n      .post(`${this.url}/inventory/add`, user, {\r\n        headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n      })\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  // Set inventory form title\r\n  setFormTitle(name) {\r\n    // localStorage.setItem()\r\n    localStorage.setItem(\"form_title\", name);\r\n    this.form_title = name;\r\n  }\r\n  // Get inventory form title\r\n  getFormTitle() {\r\n    return localStorage.getItem(\"form_title\");\r\n    return this.form_title;\r\n  }\r\n  removeFormTitle() {\r\n    this.form_title = null;\r\n  }\r\n  /////////////// Get data from inventory to the inventory table ////////////\r\n  getInventory() {\r\n    return this.httpClient.get<any>(`${this.url}/inventory`, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n  ///////// Getting user table data //////////////\r\n  getUsers() {\r\n    return this.httpClient.get<any>(`${this.url}/users`, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n\r\n  getLeads() {\r\n    return this.httpClient.get<any>(`${this.url}/leads`, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n\r\n  // API to get all data from Leads, Inventory i.e; both\r\n  getAll() {\r\n    return this.httpClient.get<any>(`${this.url}/inventory/all`, {\r\n      headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n    });\r\n  }\r\n  // API to call delete api for the user data table\r\n  deleteUser(id) {\r\n    console.log(\"Calling deleteUser\", id);\r\n    return this.httpClient.delete<any>(\r\n      `https://my-asasa.herokuapp.com/users/${id}`,\r\n      {\r\n        headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n      }\r\n    );\r\n  }\r\n  ////////////// Send new row table data /////////////\r\n  createUsers(user: any) {\r\n    console.log(\"Create user func\", user);\r\n    if (user instanceof File) {\r\n      const formData = new FormData();\r\n      formData.append(\"images\", user);\r\n      return this.httpClient.post(`${this.url}/users/save`, formData);\r\n    } else {\r\n      return this.httpClient\r\n        .post(`${this.url}/users/save`, user)\r\n        .pipe(catchError(this.handleError));\r\n    }\r\n  }\r\n  // create service to get and set the token to local storage\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(\"token\", token);\r\n  }\r\n  getDecodedToken(token: string): any {\r\n    try {\r\n      return jwt_decode(token);\r\n    } catch (Error) {\r\n      console.log(Error);\r\n      return null;\r\n    }\r\n  }\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  }\r\n\r\n  // API to delete the single inventory\r\n  deleteInventory(id) {\r\n    console.log(\"Calling deleteInventory\", id);\r\n    return this.httpClient.delete<any>(\r\n      `https://my-asasa.herokuapp.com/inventory/${id}`,\r\n      {\r\n        headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n      }\r\n    );\r\n  }\r\n\r\n  // API to set user from user/inventory table to update\r\n  setUser(user: any) {\r\n    this.user = user;\r\n  }\r\n  // API to get user from user/inventory table to update\r\n  getUser() {\r\n    return this.user;\r\n  }\r\n  removeUser() {\r\n    this.user = null;\r\n  }\r\n\r\n  // Api call to Update the already existed user/agent in the user component\r\n  updateUser(id, data) {\r\n    return this.httpClient.put(\r\n      `https://my-asasa.herokuapp.com/users/${id}`,\r\n      data,\r\n      {\r\n        headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n      }\r\n    );\r\n  }\r\n  // Update a single Inventory\r\n  updateInventory(id, data) {\r\n    console.log(\"Calling updateInventory\", id);\r\n    return this.httpClient.put(\r\n      `https://my-asasa.herokuapp.com/inventory/${id}`,\r\n      data,\r\n      {\r\n        headers: new HttpHeaders().set(\"Authorization\", this.getToken()),\r\n      }\r\n    );\r\n  }\r\n  ///////// API to Register the new user /////////////\r\n  register(user: any): Observable<any> {\r\n    return this.httpClient.post(`${this.url}/users/register`, user);\r\n  }\r\n  /* API Call to verify otp code */\r\n  ////// Verifying the email address while signing the user up ///////////////////\r\n  verifyOTPEmail(user: any): Observable<any> {\r\n    return this.httpClient\r\n      .post(`${this.url}/users/verifyemail`, user)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  ///////// Verifying the user using otp code to his gmail to change his/her password /////////////\r\n  verifyOTPCode(user: any): Observable<any> {\r\n    return this.httpClient\r\n      .post(`${this.url}/users/verifyotpcode`, user)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  ///////////// Adding new password after forgetting the old password ////////\r\n  newpassword(user: any): Observable<any> {\r\n    return this.httpClient\r\n      .post(`${this.url}/users/newpassword`, user)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  /////////// API to Login the already existed user /////////////\r\n  public login(user: any): Observable<any> {\r\n    return this.httpClient.post(`${this.url}/users/login`, user);\r\n  }\r\n\r\n  ///////////// Verify User Email ////////////////\r\n  verifyEmail(body: any): Observable<any> {\r\n    return this.httpClient.post(`${this.url}/users/verifyemail`, body);\r\n  }\r\n\r\n  /////////////// Get Users Token //////////////////////////\r\n  getAccessToken() {\r\n    return localStorage.getItem(\"access_token\");\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    const authToken = localStorage.getItem(\"access_token\");\r\n    return authToken !== null ? true : false;\r\n  }\r\n  ////////// Logout API ////////////////\r\n  logout() {\r\n    if (localStorage.removeItem(\"access_token\") == null) {\r\n      this.router.navigate([\"users/login\"]);\r\n    }\r\n  }\r\n  ///////////////////////////////////////////\r\n\r\n  ///////// Get Profile API ////////////\r\n  getUserProfile(id): Observable<any> {\r\n    return this.httpClient\r\n      .get(`${this.url}/user/profile/${id}`, { headers: this.headers })\r\n      .pipe(\r\n        map((res: Response) => {\r\n          return res || {};\r\n        }),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  ///////////////////////////////////////////\r\n\r\n  ///////// Error Handling /////////////////\r\n  handleError(error: HttpErrorResponse) {\r\n    let msg = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // client-side error\r\n      msg = error.error.message;\r\n    } else {\r\n      // server-side error\r\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    return throwError(msg);\r\n  }\r\n  // ////////////////////////////////////////\r\n\r\n  setGenericId(id) {\r\n    this.genericId = id;\r\n  }\r\n\r\n  getGenericId() {\r\n    return this.genericId;\r\n  }\r\n  // ////////////////////////////////////////\r\n\r\n  priceFilter(value) {\r\n    var val: any = Math.abs(value);\r\n    if (val >= 1000000000) {\r\n      val = Number((val / 1000000000).toFixed(2)) + \"Billion\";\r\n    } else if (val >= 10000000) {\r\n      val = Number((val / 10000000).toFixed(2)) + \" CRORE\";\r\n    } else if (val >= 100000) {\r\n      val = Number((val / 100000).toFixed(2)) + \" Lac\";\r\n    } else if (val >= 1000) val = Number(val.toFixed(2)) + \" K\";\r\n    return val;\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n  <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n  <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n    <div id=\"content\">\r\n\r\n      <div class=\"container-fluid\">\r\n        <h1 class=\"h3 mb-2 text-gray-800\">User Profile</h1>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-4 col-lg-5 col-md-6 mb-4 mt-3\">\r\n            <div class=\"card\">\r\n              <div class=\"firstinfo\">\r\n                <img *ngIf=\"!selectedFile\" src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" />\r\n                <img *ngIf=\"selectedFile\" [src]=\"selectedFile.src\" />\r\n                <div class=\"profileinfo\">\r\n                  <h1>{{tokendata?.fullname}}</h1>\r\n                  <span class=\" badge badge-warning mb-4\">{{tokendata?.access | titlecase}}</span>\r\n\r\n                  <div class=\"profile-details\">\r\n                    <b>Email :</b> &nbsp;&nbsp;&nbsp;&nbsp;{{tokendata?.email}} <br>\r\n                    <b>Contact :</b> &nbsp;&nbsp;&nbsp;{{tokendata?.contact}}\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-5 col-lg-6 col-md-8 mb-4 mt-3\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"upload-btn-wrapper  text-right input-container\">\r\n                  <button (click)=\"file.click()\" class=\"btn text-center mr-2\" style=\"width: 100px;\">\r\n                    <i class=\"fa fa-camera\" aria-hidden=\"true\">&nbsp;</i>\r\n                    <span class=\"upload\"><b>Upload</b></span>\r\n                  </button>\r\n                  <input #file type='file' class=\"fileField\" (change)=\"onSelectFile($event)\"><br><br>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"upload-btn-wrapper  text-left\">\r\n                  <button (click)=\"updateImage()\" class=\"btn text-center mr-2\" style=\"width: 100px;\">\r\n                    <i class=\"fa fa-save\">&nbsp;</i>\r\n                    <span class=\"upload\"><b>Save</b></span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\n\r\nclass ImageSnippet {\r\n  constructor(public src: string, public file: File) {}\r\n}\r\n\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./profile.component.html\",\r\n  styleUrls: [\"./profile.component.css\"],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  email: string;\r\n  tokendata: any;\r\n  url: string | ArrayBuffer;\r\n  selectedFile: ImageSnippet;\r\n\r\n  @ViewChild('content') content: any;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthenticationService\r\n  ) {}\r\n  username = this.router.url;\r\n\r\n  ngOnInit() {\r\n    this.tokenization();\r\n  }\r\n\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.tokendata = decodedToken.data;\r\n    console.log(this.tokendata);\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file: File = event.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.addEventListener(\"load\", (event: any) => {\r\n        this.selectedFile = new ImageSnippet(event.target.result, file);\r\n      });\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  // Function to Update Profile Image\r\n  updateImage() {\r\n    console.log(\"Save Image\", this.selectedFile);\r\n    console.log(this.tokendata._id);\r\n    this.authService\r\n      .updateUser(this.tokendata._id, this.selectedFile.file)\r\n      .subscribe((res) => {\r\n        console.log(\"Subscribed data: \", res);\r\n      });\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","import { \r\n  ActivatedRouteSnapshot\r\n} from '@angular/router';\r\n\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../Authentication/authentication.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RoleGuard implements CanActivate {\r\n\r\n  constructor(public auth: AuthenticationService, public router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot) {\r\n    const expectedRole = route.data.expectedRole;\r\n    const token = this.auth.getToken();\r\n    const tokenPayload = this.auth.getDecodedToken(token);\r\n\r\n    if (\r\n      !token || \r\n      !expectedRole.includes(tokenPayload?.data?.access)\r\n    ) {\r\n      this.router.navigate(['/']);\r\n    } else {\r\n        return true;\r\n    }\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  mapbox: {\r\n    accessToken: 'pk.eyJ1IjoiYmFiYXJic2NzMzI2MSIsImEiOiJja2N2dHR2MGUwN21iMnhydXlvcXA2MTlmIn0.gympgF_-zALE5J5MyZH3fQ'\r\n  },\r\n  url: 'https://shaisecommercestore.herokuapp.com/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"filterlist\",\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  public transform(value, keys: string, term: string) {\r\n    if (!term) return value;\r\n    // console.log(\"filter--->\",keys)\r\n    let i = 0;\r\n\r\n    // if(value[i].city[0].city){\r\n    //   keys = \"city.city\"\r\n    // }\r\n\r\n    return (value || []).filter((item) =>\r\n      keys\r\n        .split(\",\")\r\n        .some(\r\n          (key) =>\r\n            item.hasOwnProperty(key) && new RegExp(term, \"gi\").test(item[key])\r\n        )\r\n    );\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n                <h1 class=\"h3 mb-2 text-gray-800\">Users</h1>\r\n\r\n                <div class=\"row mb-3 mt-5\">\r\n                    <div class=\"col-12\">\r\n                        <button class=\"btn btn-primary\" routerLink=\"/register\">Add New</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <!-- <div class=\"col-12 col-sm-6 col-xl-2 mb-3\">\r\n                        <ng-select [items]=\"options\" bindLabel=\"name\" bindValue=\"value\" placeholder=\"Filter By\" [(ngModel)]=\"selectedOption\" (change)=\"optionChange($event)\" [clearable]=\"false\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-xl-2 mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search {{ placeholder }}\" [(ngModel)]=\"refId\" />\r\n                    </div> -->\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 col-xl-2 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"agentList\" bindLabel=\"fullname\" bindValue=\"fullname\" placeholder=\"Select Agent\" (change)=\"changeAssignedAgent($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 col-xl-2 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 col-xl-2 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [(ngModel)]=\"locationName\" [ngModelOptions]=\"{standalone: true}\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <!-- <div class=\"col-12 col-sm-6 col-lg-3 col-xl-2 mb-3\">\r\n                        <input placeholder=\"Start Date\" class=\"form-control\" type=\"text\" onfocus=\"(this.type='date')\" (change)=\"changeStartDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 col-xl-2 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"End Date\" (change)=\"changeEndDate($event)\">\r\n                    </div> -->\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"btn-container\">\r\n                        <button onclick=\"window.print()\" class=\"btn btn-primary\">Print</button>\r\n                        <button (click)=\"exportTOExcel()\" class=\"btn btn-primary\">Excel</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"table-container mb-5 user-class\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th (click)=\"sort('id')\" scope=\"col\">User ID <i class=\"fa fa-sort\"></i>\r\n                                        </th>\r\n                                        <th scope=\"col\">Full Name</th>\r\n                                        <th scope=\"col\">Contact #</th>\r\n                                        <th scope=\"col\">Location Assigned</th>\r\n                                        <th scope=\"col\">Email Address</th>\r\n                                        <th scope=\"col\">Access</th>\r\n                                        <th scope=\"col\">Created At</th>\r\n                                        <th scope=\"col\">Operations</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n\r\n                                    <tr *ngFor=\"let user of data | filterlist: selectedOption:refId | nameFilter: agentAssignedName | tableFilter: city | LocationFilter:locationName | dateFilter: startDate:endDate | orderBy: key: reverse | paginate:{itemsPerPage:10,currentPage:p};\">\r\n                                        <td>{{ user?.userId }}</td>\r\n                                        <td>\r\n                                            <span *ngIf=\"user?.fullname\">{{ user?.fullname | titlecase }}</span>\r\n                                            <span *ngIf=\"!user?.fullname\">{{ user?.name | titlecase }}</span>\r\n                                        </td>\r\n                                        <td>{{ user?.contact }}</td>\r\n\r\n                                        <td>\r\n                                            {{user?.city?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{\r\n                                                loc.location }}, </span>\r\n                                        </td>\r\n                                        <td>{{ user?.email }}</td>\r\n                                        <td>{{user?.access | titlecase}}</td>\r\n                                        <td>{{user?.created | date: \"dd/MM/yyyy\"}}</td>\r\n\r\n                                        <td><i class=\"fa fa-edit icon\" (click)=\"setUser(user)\"></i>\r\n                                            <a (click)=\"setUser(user)\" role=\"button\"></a>\r\n\r\n                                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\r\n\r\n                                        </td>\r\n                                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                            <div class=\"modal-dialog\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation\r\n                                                        </h5>\r\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                            <span aria-hidden=\"true\">&times;</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        Are you sure you want to delete it?\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                                                            Close\r\n                                                        </button>\r\n                                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteUser()\">\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import * as XLSX from \"xlsx\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { JSON2SheetOpts } from \"xlsx/types\";\r\nimport { formatDate } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-users\",\r\n  templateUrl: \"./users.component.html\",\r\n  styleUrls: [\"./users.component.css\"],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  general_search: string;\r\n  data: any = [];\r\n  deleteId: any;\r\n  key: any;\r\n  reverse: boolean = true;\r\n  p: number = 1;\r\n  startDate: String;\r\n  endDate: String;\r\n  cities: any = [];\r\n  locations: any = [];\r\n  city: any;\r\n  locationName: any;\r\n  agentList: any = [];\r\n  agentAssignedName: any;\r\n\r\n  currentLoginUser: any;\r\n\r\n  @ViewChild(\"content\") content: any;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  user: any;\r\n\r\n  options = [\r\n    {\r\n      value: \"access\",\r\n      name: \"Filter By Access\",\r\n      placeholder: \"Access\",\r\n    },\r\n  ];\r\n  selectedOption = this.options[0].value;\r\n  placeholder = this.options[0].placeholder;\r\n  refId: any;\r\n\r\n  ngOnInit(): void {\r\n    this.tokenization();\r\n    this.getUserList();\r\n    this.getCities();\r\n    this.getAllUsersList();\r\n  }\r\n\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.currentLoginUser = decodedToken.data;\r\n    console.log(this.currentLoginUser);\r\n  }\r\n\r\n  getCities() {\r\n    this.authService.getCities().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.cities = data;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  getLocations(selectedCity?) {\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        console.log(locations);\r\n        this.locations = locations;\r\n        if (selectedCity) {\r\n          this.locations = locations.filter((loc) => {\r\n            return loc.cityId == selectedCity;\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  changeStartDate(e: any) {\r\n    this.startDate = formatDate(\r\n      new Date(e.target.value),\r\n      \"yyyy-MM-dd\",\r\n      \"en_US\"\r\n    );\r\n  }\r\n  changeEndDate(e: any) {\r\n    this.endDate = formatDate(new Date(e.target.value), \"yyyy-MM-dd\", \"en_US\");\r\n  }\r\n\r\n  optionChange(e: any) {\r\n    this.placeholder = e.placeholder;\r\n    this.refId = \"\";\r\n    console.log(this.selectedOption);\r\n  }\r\n  setUser(user: any) {\r\n    this.authService.setUser(user);\r\n    this.router.navigateByUrl(\"/register\");\r\n  }\r\n  // Function to call User data table for Assigned_To Field of the add-inventory-form\r\n  getAllUsersList() {\r\n    this.authService.getUsers().subscribe(\r\n      (users) => {\r\n        this.agentList = [];\r\n        const data = users;\r\n        data.forEach(element => {\r\n          if (this.currentLoginUser.access === \"city_admin\") {\r\n            if (this.currentLoginUser.city.city !== element?.city?.city) {\r\n              return;\r\n            }\r\n          }\r\n          \r\n          this.agentList.push(element);\r\n        });\r\n        console.log(this.agentList);\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  // Function to call User data table\r\n  getUserList() {\r\n    this.authService.getUsers().subscribe(\r\n      (data) => {\r\n        data.forEach((element) => {\r\n          if (this.currentLoginUser.access === \"city_admin\") {\r\n            if (this.currentLoginUser.city.city !== element.city.city) {\r\n              return;\r\n            }\r\n          }\r\n          element.cityName = element.city.city;\r\n          element.locationName = [];\r\n          element.SubLocation = [];\r\n          for (let i = 0; i < element.location.length; i++) {\r\n            element.locationName.push(element.location[i]?.location);\r\n            element.SubLocation.push(element.location[i]?.location);\r\n          }\r\n          this.data.push(element);\r\n        });\r\n\r\n        console.log(\"User Get Response\", this.data);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  changeCity(city: any) {\r\n    this.locations = [];\r\n    this.locationName = null;\r\n    this.city = city?.city;\r\n    console.log(this.city);\r\n    if (city) this.getLocations(city._id);\r\n  }\r\n\r\n  changeLocation(location: any) {\r\n    this.locationName = location?.location;\r\n    console.log(this.locationName);\r\n  }\r\n\r\n  changeAssignedAgent(agent: any) {\r\n    this.agentAssignedName = agent?.fullname;\r\n    console.log(this.agentAssignedName);\r\n  }\r\n\r\n  confirmID(id: any) {\r\n    console.log(id);\r\n    this.deleteId = id;\r\n  }\r\n\r\n  // Function to delete the single inventory\r\n  deleteUser() {\r\n    console.log(this.deleteId);\r\n\r\n    this.authService.deleteUser(this.deleteId).subscribe((data) => {\r\n      console.log(data);\r\n      if (data.code === 200) {\r\n        this.toastr.success(data.message, \"Success\", {\r\n          timeOut: 5000,\r\n        });\r\n        this.getUserList();\r\n      }\r\n    });\r\n  }\r\n\r\n  sort(key: any) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  // Function to Get Excel File of the Data Table\r\n  exportTOExcel() {\r\n    let options: JSON2SheetOpts = { header: [] };\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.data, options);\r\n\r\n    var wscols = [\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n    ];\r\n\r\n    ws[\"!cols\"] = wscols;\r\n    ws[\"!cols\"][0] = { hidden: true };\r\n\r\n    ws[\"!cols\"][2] = { hidden: true };\r\n    ws[\"!cols\"][3] = { hidden: true };\r\n\r\n    ws[\"!cols\"][6] = { hidden: true };\r\n    ws[\"!cols\"][10] = { hidden: true };\r\n\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"All Data Export\");\r\n    XLSX.writeFile(wb, \"Users.xlsx\");\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"tableFilter\",\r\n})\r\nexport class TableFilterPipe implements PipeTransform {\r\n  transform(user: any, cityName: string): typeof user {\r\n    if (!user || !cityName) {\r\n      return user;\r\n    }\r\n    return user.filter(\r\n      (user) =>\r\n        user.cityName.toLowerCase().indexOf(cityName.toLowerCase()) !== -1\r\n    );\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n                <h1 class=\"h3 mb-2 text-gray-800\">Leads Management</h1>\r\n\r\n                <div class=\"row mb-3 mt-5\">\r\n                    <div class=\"col-12\">\r\n                        <button class=\"btn btn-primary\" (click)=\"setFormTitle('Lead')\">Add New</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select [items]=\"options\" bindLabel=\"name\" bindValue=\"value\" placeholder=\"Filter By\" [(ngModel)]=\"selectedOption\" (change)=\"optionChange($event)\" [clearable]=\"false\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input class=\"form-control\" id=\"myInput\" type=\"text\" placeholder=\"Search {{ placeholder }}\" [(ngModel)]=\"refId\" />\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"Start Date\" (change)=\"changeStartDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"End Date\" (change)=\"changeEndDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Min Demand\" [(ngModel)]=\"minDemand\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Max Demand\" [(ngModel)]=\"maxDemand\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\" *ngIf=\"currentLoginUser?.access !== 'agent'\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"usersList\" bindLabel=\"fullname\" bindValue=\"fullname\" placeholder=\"Added By\" (change)=\"changeAssignAgent($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"btn-container\">\r\n                        <button onclick=\"window.print()\" class=\"btn btn-primary\">Print</button>\r\n                        <button (click)=\"exportTOExcel()\" class=\"btn btn-primary\">Excel</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"table-container mb-5 mt-4 leads\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th (click)=\"sort('id')\" scope=\"col\">\r\n                                            ID <i class=\"fa fa-sort\"></i>\r\n                                        </th>\r\n                                        <th>Added By</th>\r\n                                        <th scope=\"col\">Purpose</th>\r\n                                        <th scope=\"col\">Client Details</th>\r\n\r\n                                        <th scope=\"col\">Property Type</th>\r\n                                        <th scope=\"col\">Area</th>\r\n                                        <th scope=\"col\">Location</th>\r\n                                        <th scope=\"col\">Demand</th>\r\n                                        <th scope=\"col\">Added On</th>\r\n                                        <th scope=\"col\">Assigned To</th>\r\n                                        <!-- <th scope=\"col\">Media</th> -->\r\n                                        <!-- <th scope=\"col\">Comments</th> -->\r\n                                        <th scope=\"col\">Operations</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let user of user| filterlist: selectedOption:refId | nameFilter: agentAssignedName  | dateFilter: startDate:endDate | demandFilter: minDemand:maxDemand| orderBy: key:reverse | tableFilter: city | LocationFilter:location | paginate: { itemsPerPage: 50, currentPage: p }\">\r\n                                        <td>\r\n                                            <span *ngIf=\"user?.priority == 'Super Hot'\">\r\n                                                <img class=\"super-hot\" src=\"\\assets\\icons\\super_hot.svg\">\r\n                                            </span>\r\n                                            <span *ngIf=\"user?.priority == 'Hot'\">\r\n                                                <img class=\"super-hot\" src=\"\\assets\\icons\\hot.svg\">\r\n                                            </span>\r\n                                            <span *ngIf=\"user?.priority == 'Normal'\">\r\n                                                <img class=\"normal\" src=\"\\assets\\icons\\normal.svg\">\r\n                                            </span>\r\n                                        </td>\r\n\r\n\r\n                                        <td>{{ user.refId }}</td>\r\n                                        <td>{{user?.added_By?.fullname}}</td>\r\n                                        <td>{{ user.property_purpose }}</td>\r\n                                        <td>\r\n                                            <b>Name : </b>{{ user.client_name | titlecase }} <br />\r\n                                            <b>Number : </b>{{ user.client_number }} <br />\r\n                                            <b>Type : </b> {{ user.client_type }}\r\n                                        </td>\r\n\r\n\r\n                                        <td>{{ user.property_type }}</td>\r\n                                        <td *ngIf=\"user?.area != null; else elseBlockArea\">\r\n                                            <span>{{ user?.area + \" - \" + user?.area_unit }}</span>\r\n                                        </td>\r\n                                        <ng-template #elseBlockArea>\r\n                                            <td>\r\n                                                <span *ngIf=\"user?.max_area == null || user?.min_area == null;else elseBlockArea2\">\r\n                                                    <span>None</span>\r\n                                                </span>\r\n                                                <ng-template #elseBlockArea2>\r\n                                                    <span><b>Max:</b> {{ user?.max_area + \" - \" + user?.area_unit\r\n                                                        }}<br /><b>Min:</b>\r\n                                                        {{ user?.min_area + \" - \" + user?.area_unit }}</span>\r\n                                                </ng-template>\r\n                                            </td>\r\n                                        </ng-template>\r\n\r\n                                        <td>\r\n                                            {{ user.city[0]?.city }}<span>&nbsp;&nbsp;</span><br /><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{\r\n                                                loc.location }},\r\n                                            </span>\r\n                                        </td>\r\n                                        <td *ngIf=\"user.demand_price == null; else elseBlockDemand\">\r\n                                            <b>Max:</b> {{ user.max_price | currency :'Rs ' : 'symbol' : '1.0-0' }}<br /><b>Min:</b> {{ user.min_price | currency :'Rs ' : 'symbol' : '1.0-0' }}\r\n                                        </td>\r\n                                        <ng-template #elseBlockDemand>\r\n                                            <td>{{ user.demand_price | currency :'Rs ' : 'symbol' : '1.0-0' }}</td>\r\n                                        </ng-template>\r\n\r\n                                        <td>{{ user.created | date: \"dd/MM/yyyy\" }}</td>\r\n                                        <td>\r\n                                            <span *ngIf=\"user?.assignedTo?.length === 0\">Self</span>\r\n                                            <span *ngIf=\"user?.assignedTo?.length > 0\">\r\n                                                <span *ngFor=\"let assign of user?.assignedTo\">{{ assign\r\n                                                    }}<span>,</span><br></span>\r\n                                            </span>\r\n                                        </td>\r\n                                        <!-- <td>\r\n                                            <span><b>Media: </b> {{ user?.media }}</span><br />\r\n                                        </td> -->\r\n                                        <!-- <td>{{user?.comments}}</td> -->\r\n                                        <td style=\"width: 12%;\">\r\n                                            <i class=\"fa fa-edit icon\" (click)=\"setUserToEdit(user)\"></i>\r\n                                            <a (click)=\"setUserToEdit(user)\" role=\"button\"></a>\r\n\r\n                                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i> &nbsp;&nbsp;\r\n                                            <span><i class=\"fas fa-exchange-alt\" data-toggle=\"modal\"\r\n                                                    data-target=\"#myModal\" (click)=\"setCurrentUser(user)\"></i></span>\r\n                                        </td>\r\n                                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                            <div class=\"modal-dialog\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n                                                            Delete Confirmation\r\n                                                        </h5>\r\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                            <span aria-hidden=\"true\">&times;</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        Are you sure you want to delete it?\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                                                            Close\r\n                                                        </button>\r\n                                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLead()\">\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" id=\"myModal\">\r\n    <div class=\"modal-dialog modal-dialog-scrollable\">\r\n        <!-- <div class=\"modal-content\" style=\"height: 500px; \r\n        margin: 1.75rem auto; \r\n        max-width: 600px;\"> -->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"text-center\">Agent Assignment</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n                    &times;\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\" style=\"height: 300px;max-width: 500px;\">\r\n                <!-- <div class=\"modal-body\"> -->\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-5 col-sm-5\">\r\n                        <div class=\"radio\">\r\n                            <div class=\"btn-group btn-group-toggle\">\r\n                                <label class=\"btn btn-primary\" style=\"width: 139px\" [class.active]=\"assigned_type === 'city_admin'\">\r\n                                    <input type=\"radio\" [(ngModel)]=\"assigned_type\" value=\"city_admin\" />\r\n                                    City Admin\r\n                                </label>\r\n\r\n                                <label class=\"btn btn-primary ml-3\" style=\"width: 139px\" [class.active]=\"assigned_type === 'Admin'\">\r\n                                    <input type=\"radio\" [(ngModel)]=\"assigned_type\" value=\"Admin\" />\r\n                                    Admins\r\n                                </label>\r\n\r\n                                <label class=\"btn btn-primary ml-3\" style=\"width: 139px\" [class.active]=\"assigned_type === 'Agents'\">\r\n                                    <input type=\"radio\" [(ngModel)]=\"assigned_type\" value=\"Agents\" />\r\n                                    Agents\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <div class=\"row\">\r\n                    <div class=\"col-8\" *ngIf=\"assigned_type === 'city_admin'\">\r\n                        <ng-select class=\"ng-select inputs2 mt-3\" [items]=\"cityAdminList\" bindLabel=\"city.city\" bindValue=\"fullname\" placeholder=\"Select city admin\" (change)=\"changeAssignedToCityAdmin($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n\r\n                    <div class=\"col-8\" *ngIf=\"assigned_type === 'Admin'\">\r\n                        <ng-select class=\"ng-select inputs2  mt-3\" [items]=\"superAdminList\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Admin\" (change)=\"changeAssignedAdmin($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n\r\n                    <div class=\"col-8\" *ngIf=\"assigned_type === 'Agents'\">\r\n                        <ng-select #agentSelect class=\"ng-select inputs2 mt-3\" [items]=\"agentList\" [multiple]=\"true\" bindLabel=\"fullname\" bindValue=\"fullname\" placeholder=\"Select Agent\" (change)=\"changeAssignedAgent($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt-3\">\r\n                    <div class=\"form-check updatePassword\">\r\n                        <label class=\"form-check-label\" for=\"exampleCheck1\">Do you want to write Comment?</label>\r\n                        <input (click)=\"isComment()\" type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"isCheckComment\" class=\"form-group mt-3\">\r\n                    <textarea class=\"form-control\" style=\"height: 140px;\">{{currentUser?.comments}}\r\n                        </textarea>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">\r\n                    Close\r\n                </button>\r\n                <button (click)=\"assignLeadToAgent()\" [class.no-click]=\"assignLeadData.length === 0\" type=\"button\" class=\"btn\" data-dismiss=\"modal\">\r\n                    Assign\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import * as XLSX from \"xlsx\";\r\nimport { JSON2SheetOpts } from \"xlsx\";\r\n\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { formatDate } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-leads\",\r\n  templateUrl: \"./leads.component.html\",\r\n  styleUrls: [\"./leads.component.css\"],\r\n})\r\nexport class LeadsComponent implements OnInit {\r\n  @ViewChild(\"content\") content: any;\r\n  userComments: any;\r\n  user: any = [];\r\n  currentUser: any;\r\n  withAutofocus = `<button type=\"button\" ngbAutofocus class=\"btn btn-danger\"\r\n      (click)=\"modal.close('Ok click')\">Ok</button>`;\r\n  deleteId: any;\r\n  agentAssignedForm: FormGroup;\r\n  cityAdminList: any = [];\r\n  agentList = [];\r\n  superAdminList = [];\r\n  token: any;\r\n  assigned_type: any;\r\n  key: any;\r\n  reverse: boolean = true;\r\n  p: number = 1;\r\n  tokendata: any;\r\n  assignLeadData: any = [];\r\n  data: any = [];\r\n  cities: any;\r\n  locations: any;\r\n  city: any;\r\n  location: any;\r\n  startDate: String;\r\n  endDate: String;\r\n  minDemand: any;\r\n  maxDemand: any;\r\n  usersList: any = [];\r\n  agentAssignedName: any;\r\n\r\n  currentLoginUser: any;\r\n  isCheckComment: boolean;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  general_search: string;\r\n  // assigned_to: any;\r\n  selectedUserLocation: any;\r\n\r\n  options = [\r\n    {\r\n      value: \"client_name\",\r\n      name: \"Filter By Client Name\",\r\n      placeholder: \"Client Name\",\r\n    },\r\n    {\r\n      value: \"property_type\",\r\n      name: \"Filter By Property Type\",\r\n      placeholder: \"Property Type\",\r\n    },\r\n    // {\r\n    //   value: \"added_ByName\",\r\n    //   name: \"Filter By Added By\",\r\n    //   placeholder: \"Added By\",\r\n    // },\r\n    {\r\n      value: \"assignedTo\",\r\n      name: \"Filter By Assigned To\",\r\n      placeholder: \"Assigned To\",\r\n    },\r\n  ];\r\n  selectedOption = this.options[0].value;\r\n  placeholder = this.options[0].placeholder;\r\n  refId: any;\r\n\r\n  ngOnInit(): void {\r\n    this.tokenization();\r\n    this.getUserDetails();\r\n    this.getLeadsList();\r\n    this.getCityAdminList();\r\n    this.tokenization();\r\n    this.getCities();\r\n  }\r\n\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.currentLoginUser = decodedToken.data;\r\n    console.log(this.currentLoginUser);\r\n  }\r\n\r\n  changeStartDate(e: any) {\r\n    this.startDate = formatDate(\r\n      new Date(e.target.value),\r\n      \"yyyy-MM-dd\",\r\n      \"en_US\"\r\n    );\r\n  }\r\n  changeEndDate(e: any) {\r\n    this.endDate = formatDate(new Date(e.target.value), \"yyyy-MM-dd\", \"en_US\");\r\n  }\r\n  isComment() {\r\n    this.isCheckComment = !this.isCheckComment;\r\n  }\r\n  getLeadsList() {\r\n    this.authService.getLeads().subscribe(\r\n      (data) => {\r\n        data = data.leads;\r\n        console.log(data);\r\n\r\n        data.forEach((element) => {\r\n          element.assignedTo = [];\r\n          element.added_ByName = element.added_By.fullname;\r\n          element.cityName = element.city[0]?.city;\r\n          element.locationName = [];\r\n          element.SubLocation = [];\r\n          for (let i = 0; i < element.location.length; i++) {\r\n            element.locationName.push(element.location[i]?.location);\r\n            element.SubLocation.push(element.location[i]?.location);\r\n          }\r\n          if (element.demand_price != null) {\r\n            element.demand = element.demand_price;\r\n          } else if (element.max_price) {\r\n            element.demand = element.max_price;\r\n          } else if (element.min_price) {\r\n            element.demand = element.min_price;\r\n          }\r\n\r\n          for (let i = 0; i < element.assigned_history?.length; i++) {\r\n            if (element.assigned_history[i]?.fullname === \"\") continue;\r\n            element.assignedTo[i] = element.assigned_history[i]?.fullname;\r\n          }\r\n\r\n          if (this.currentLoginUser.access === \"city_admin\") {\r\n            element.city.forEach((city) => {\r\n              if (this.currentLoginUser.city.city === city.city) {\r\n                this.user.push(element);\r\n                return;\r\n              }\r\n            });\r\n          } else if (this.currentLoginUser.access === \"agent\") {\r\n            if (this.currentLoginUser.userId === element.added_By.userId) {\r\n              this.user.push(element);\r\n              return;\r\n            } else {\r\n              element.assigned_history.forEach((history) => {\r\n                if (this.currentLoginUser.userId === history?.userId) {\r\n                  this.user.push(element);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          } else {\r\n            this.user.push(element);\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n    console.log(this.data);\r\n  }\r\n  // Calling Api to get the Cities\r\n  getCities() {\r\n    this.authService.getCities().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.cities = data;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  // Calling Api to get the Locations\r\n  getLocations(selectedCity?) {\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        console.log(locations);\r\n        this.locations = locations;\r\n        if (selectedCity) {\r\n          this.locations = locations.filter((loc) => {\r\n            return loc.cityId == selectedCity;\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Function to change the city of --ng select city--\r\n  changeCity(city: any) {\r\n    this.locations = [];\r\n    this.location = \"\";\r\n    this.city = city?.city;\r\n    console.log(this.city);\r\n\r\n    this.locations = [];\r\n    if (city) this.getLocations(city._id);\r\n  }\r\n  changeLocation(location: any) {\r\n    this.location = location?.location;\r\n    console.log(this.location);\r\n  }\r\n  optionChange(e: any) {\r\n    console.log(e);\r\n    this.placeholder = e.placeholder;\r\n    this.refId = \"\";\r\n    console.log(this.selectedOption);\r\n  }\r\n\r\n  setCurrentUser(user: any) {\r\n    this.currentUser = user;\r\n    let date = new Date(this.currentUser.created);\r\n    console.log(\r\n      date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear()\r\n    );\r\n    console.log(this.currentUser.comments);\r\n  }\r\n\r\n  sort(key: any) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  assignLeadToAgent() {\r\n    console.log(this.currentUser);\r\n    delete this.currentUser._id;\r\n    delete this.currentUser.SubLocation;\r\n    delete this.currentUser.cityName;\r\n    delete this.currentUser.locationName;\r\n    console.log(this.currentUser);\r\n\r\n    this.currentUser[\"assigned_history\"] = this.assignLeadData;\r\n    this.assignLeadData = [];\r\n    this.currentUser[\"\"];\r\n\r\n    this.authService.assignLeadToAgent(this.currentUser).subscribe(\r\n      (data: any) => {\r\n        this.toastr.success(data.message, \"Success\", {\r\n          timeOut: 5000,\r\n        });\r\n        this.router.navigateByUrl(\"/assigned-leads\");\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n\r\n        if (error.error.code == 11000)\r\n          this.toastr.error(error.error.message, \"Error\", {\r\n            timeOut: 5000,\r\n          });\r\n      }\r\n    );\r\n  }\r\n  editLeadToAgent() {\r\n    this.authService\r\n      .editLeadToAgent(this.currentUser.referenceId, this.currentUser)\r\n      .subscribe(\r\n        (data: any) => {\r\n          console.log(data);\r\n          if (data.code == 200) {\r\n            this.toastr.success(data.message, \"Success\", {\r\n              timeOut: 5000,\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n\r\n          if (error.error.code == 11000)\r\n            this.toastr.error(\r\n              \"This Lead is Already Assigned to Another Agent\",\r\n              \"Error\",\r\n              {\r\n                timeOut: 5000,\r\n              }\r\n            );\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserDetails() {\r\n    this.token = this.authService.getToken();\r\n    this.token = this.authService.getDecodedToken(this.token).data;\r\n  }\r\n  // Function to call User data table for Assigned_To Field of the add-inventory-form\r\n  getCityAdminList() {\r\n    this.authService.getUsers().subscribe(\r\n      (data) => {\r\n        this.usersList = [];\r\n        data.forEach((element) => {\r\n          if (this.currentLoginUser.access === \"city_admin\") {\r\n            if (this.currentLoginUser.city.city !== element?.city?.city) {\r\n              return;\r\n            }\r\n          }\r\n\r\n          this.usersList.push(element);\r\n        });\r\n        console.log(this.agentList);\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n          if (data[i].access == \"city_admin\") {\r\n            this.cityAdminList.push(data[i]);\r\n          } else if (data[i].access == \"agent\") {\r\n            this.agentList.push(data[i]);\r\n          } else if (data[i].access == \"super_admin\") {\r\n            this.superAdminList.push(data[i]);\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  setUserToEdit(user: any) {\r\n    this.authService.setUser(user);\r\n    this.authService.setFormTitle(\"Lead\");\r\n    this.router.navigate([\"/add\", user.form_title]);\r\n  }\r\n\r\n  setFormTitle(name: any) {\r\n    this.authService.setFormTitle(name);\r\n    this.router.navigate([\"/add\", name]);\r\n  }\r\n\r\n  // Function to delete the single inventory\r\n  deleteLead() {\r\n    console.log(this.deleteId);\r\n\r\n    this.authService.deleteInventory(this.deleteId).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        if (data.code === 200) {\r\n          this.toastr.success(data.message, \"Success\", {\r\n            timeOut: 5000,\r\n          });\r\n          this.getLeadsList();\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        this.toastr.error(error.message, \"Error\", {\r\n          timeOut: 5000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  // Function to patch the value from ng select\r\n  changeAssignedToCityAdmin(access: any) {\r\n    console.log(access);\r\n\r\n    this.assignLeadData = [];\r\n    this.assignLeadData.push({\r\n      userId: access.userId,\r\n      fullname: access.fullname,\r\n      contact: access.contact,\r\n      date: new Date(),\r\n    });\r\n    console.log(this.assignLeadData);\r\n    // this.currentUser[\"assigned_to\"] = this.assignLeadData;\r\n  }\r\n  // Function to patch the value from ng select\r\n  changeAssignedAdmin(access: any) {\r\n    this.assignLeadData = [];\r\n    this.assignLeadData.push({\r\n      userId: access?.userId,\r\n      fullname: access?.fullname,\r\n      contact: access.contact,\r\n      date: new Date(),\r\n    });\r\n    console.log(this.assignLeadData);\r\n    // this.currentUser[\"assigned_to\"] = this.assignLeadData;\r\n  }\r\n\r\n  changeAssignAgent(agent: any) {\r\n    console.log(agent);\r\n    this.agentAssignedName = agent?.fullname;\r\n    console.log(this.agentAssignedName);\r\n  }\r\n  changeAssignedAgent(access: any) {\r\n    console.log(access);\r\n\r\n    this.assignLeadData = [];\r\n    access.forEach((element) => {\r\n      console.log(element);\r\n\r\n      this.assignLeadData.push({\r\n        userId: element.userId,\r\n        fullname: element.fullname,\r\n        contact: element.contact,\r\n        date: new Date(),\r\n      });\r\n\r\n      // this.currentUser[\"assigned_to\"] = this.assignLeadData;\r\n    });\r\n    console.log(this.assignLeadData);\r\n    // console.log(this.currentUser[\"assigned_to\"]);\r\n  }\r\n  confirmID(id: any) {\r\n    this.deleteId = id;\r\n  }\r\n\r\n  exportTOExcel() {\r\n    let options: JSON2SheetOpts = { header: [] };\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.user, options);\r\n\r\n    var wscols = [\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n    ];\r\n    ws[\"!cols\"] = wscols;\r\n    ws[\"!cols\"][0] = { hidden: true };\r\n    ws[\"!cols\"][1] = { hidden: true };\r\n    ws[\"!cols\"][2] = { hidden: true };\r\n    ws[\"!cols\"][3] = { hidden: true };\r\n    ws[\"!cols\"][4] = { hidden: true };\r\n\r\n    ws[\"!cols\"][8] = { hidden: true };\r\n\r\n    ws[\"!cols\"][25] = { hidden: true };\r\n\r\n    ws[\"!cols\"][26] = { hidden: true };\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"All Data Export\");\r\n    XLSX.writeFile(wb, \"Leads.xlsx\");\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n                <h1 class=\"h3 mb-2 text-gray-800\">Inventory Management</h1>\r\n\r\n                <div class=\"row mb-3 mt-5\">\r\n                    <div class=\"col-12\">\r\n                        <button class=\"btn btn-primary\" (click)=\"setFormTitle('Inventory')\">Add New</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select [items]=\"options\" bindLabel=\"name\" bindValue=\"value\" placeholder=\"Filter By\" [(ngModel)]=\"selectedOption\" (change)=\"optionChange($event)\" [clearable]=\"false\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search {{ placeholder }}\" [(ngModel)]=\"refId\" />\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"Start Date\" (change)=\"changeStartDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"End Date\" (change)=\"changeEndDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Min Demand\" [(ngModel)]=\"minDemand\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Max Demand\" [(ngModel)]=\"maxDemand\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\" *ngIf=\"currentLoginUser?.access !== 'agent'\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"agentList\" bindLabel=\"fullname\" bindValue=\"fullname\" placeholder=\"Select Added By\" (change)=\"changeAssignedAgent($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"btn-container\">\r\n                        <button onclick=\"window.print()\" class=\"btn btn-primary\">Print</button>\r\n                        <button (click)=\"exportTOExcel()\" class=\"btn btn-primary\">Excel</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"table-container mb-5 mt-4 inventory\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <th> </th>\r\n                                    <th (click)=\"sort('id')\" scope=\"col\">ID <i class=\"fa fa-sort\"></i></th>\r\n                                    <th>Added By</th>\r\n                                    <th scope=\"col\">Purpose</th>\r\n                                    <th scope=\"col\">Client Details</th>\r\n                                    <th scope=\"col\">Location</th>\r\n                                    <th scope=\"col\">Property Type</th>\r\n                                    <th scope=\"col\">Land Area</th>\r\n\r\n                                    <th scope=\"col\">Demand</th>\r\n                                    <th scope=\"col\">Beds</th>\r\n                                    <!-- <th scope=\"col\">Assigned To</th> -->\r\n                                    <th scope=\"col\">Added On</th>\r\n                                    <th scope=\"col\">Operations</th>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let user of user | filterlist: selectedOption:refId | nameFilter: agentAssignedName | dateFilter: startDate:endDate | demandFilter: minDemand:maxDemand | tableFilter: city | LocationFilter:location |  orderBy: key: reverse | paginate:{itemsPerPage:50,currentPage:p}; \">\r\n                                        <td>\r\n                                            <span *ngIf=\"user?.priority == 'Super Hot'\"><img class=\"super-hot\"\r\n                                                    src=\"\\assets\\icons\\super_hot.svg\"></span>\r\n                                            <span *ngIf=\"user?.priority == 'Hot'\"><img class=\"super-hot\"\r\n                                                    src=\"\\assets\\icons\\hot.svg\"></span>\r\n                                            <span *ngIf=\"user?.priority == 'Normal'\"><img class=\"normal\"\r\n                                                    src=\"\\assets\\icons\\normal.svg\"></span>\r\n                                        </td>\r\n\r\n                                        <td>{{ user?.refId }}</td>\r\n                                        <td>{{user?.added_By?.fullname}}</td>\r\n                                        <td>{{ user?.property_purpose }}</td>\r\n                                        <td>\r\n                                            <b>Name : </b>{{ user?.client_name |titlecase }} <br />\r\n                                            <b>Phone : </b>{{ user?.client_number }}<br />\r\n                                            <b>Type : </b>{{ user?.client_type | titlecase }}\r\n                                        </td>\r\n                                        <td>\r\n                                            {{ user.city[0]?.city }}<span></span><br /><span class=\"badge badge-light\" *ngFor=\"let loc of user?.location\">{{ loc.location }},\r\n                                            </span>\r\n                                        </td>\r\n\r\n                                        <td>{{ user.property_type }}</td>\r\n\r\n\r\n                                        <td *ngIf=\"user?.area != null; else elseBlockArea\">\r\n                                            <span>{{ user?.area + \" - \" + user?.area_unit }}</span>\r\n                                        </td>\r\n                                        <ng-template #elseBlockArea>\r\n                                            <td>\r\n                                                <span *ngIf=\"\r\n                            user?.max_area == null || user?.min_area == null;\r\n                            else elseBlockArea2\r\n                            \">\r\n                                                    <span>None</span>\r\n                                                </span>\r\n                                                <ng-template #elseBlockArea2>\r\n                                                    <span><b>Max:</b> {{ user?.max_area + \" - \" + user?.area_unit\r\n                                                        }}<br /><b>Min:</b>\r\n                                                        {{ user?.min_area + \" - \" + user?.area_unit }}</span>\r\n                                                </ng-template>\r\n                                            </td>\r\n                                        </ng-template>\r\n\r\n                                        <td *ngIf=\"user?.min_price != null && user.max_price != null else elseBlockDemand\">\r\n                                            <b>Max:</b> {{ user.max_price | currency :'Rs ' : 'symbol' : '1.0-0' }}<br /><b>Min:</b> {{ user.min_price | currency :'Rs ' : 'symbol' : '1.0-0' }}\r\n                                        </td>\r\n                                        <ng-template #elseBlockDemand>\r\n                                            <td>{{ user.demand_price | currency :'Rs ' : 'symbol' : '1.0-0' }}</td>\r\n                                        </ng-template>\r\n\r\n                                        <td *ngIf=\"user?.beds_number != null; else elseBeds\">\r\n                                            <span>{{ user?.beds_number }}</span>\r\n                                        </td>\r\n                                        <ng-template #elseBeds>\r\n                                            <td>\r\n                                                <span>None</span>\r\n                                            </td>\r\n                                        </ng-template>\r\n                                        <!-- <td>{{ user?.beds_number }}</td> -->\r\n                                        <!-- <td>\r\n\r\n                                            <span *ngIf=\"user?.assignedTo?.length === 0\">Self</span>\r\n\r\n                                            <span *ngIf=\"user?.assignedTo?.length > 0\">\r\n                                                <span *ngFor=\"let assign of user?.assignedTo\">{{ assign }}<br></span>\r\n                                            </span>\r\n                                        </td> -->\r\n                                        <td>{{ user?.created | date }}</td>\r\n                                        <td>\r\n                                            <i class=\"fa fa-edit icon\" (click)=\"setUserToEdit(user)\"></i>\r\n                                            <a (click)=\"setUserToEdit(user)\" role=\"button\"></a>\r\n\r\n                                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user?._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\r\n                                        </td>\r\n                                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                            <div class=\"modal-dialog\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n                                                            Delete Confirmation\r\n                                                        </h5>\r\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                            <span aria-hidden=\"true\">&times;</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        Are you sure you want to delete it?\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                                                            Close\r\n                                                        </button>\r\n                                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteInventory()\">\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import * as XLSX from \"xlsx\";\r\nimport { JSON2SheetOpts } from \"xlsx\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Router } from \"@angular/router\";\r\nimport { formatDate } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-inventory\",\r\n  templateUrl: \"./inventory.component.html\",\r\n  styleUrls: [\"./inventory.component.css\"],\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n  @ViewChild(\"content\") content: any;\r\n  user: any = [];\r\n  deleteId: any;\r\n  key: any;\r\n  reverse: boolean = true;\r\n  p: number = 1;\r\n  data: any = [];\r\n  cities: any;\r\n  locations: any;\r\n  city: any;\r\n  location: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthenticationService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  search_id: string;\r\n  search_area: string;\r\n  general_search: string;\r\n  search_location: string;\r\n  search_type: string;\r\n  search_demand: string;\r\n  agentList: any = [];\r\n  agentAssignedName: any;\r\n\r\n  currentLoginUser: any;\r\n\r\n  options = [\r\n    // {\r\n    //   value: \"cityName\",\r\n    //   name: \"Filter By City\",\r\n    //   placeholder: \"City\",\r\n    // },\r\n    // {\r\n    //   value: \"locationName\",\r\n    //   name: \"Filter By Location\",\r\n    //   placeholder: \"Location\",\r\n    // },\r\n    {\r\n      value: \"property_type\",\r\n      name: \"Filter By Property Type\",\r\n      placeholder: \"Property Type\",\r\n    },\r\n    // {\r\n    //   value: \"added_ByName\",\r\n    //   name: \"Filter By Added By\",\r\n    //   placeholder: \"Added By\",\r\n    // },\r\n    {\r\n      value: \"assignedTo\",\r\n      name: \"Filter By Assigned To\",\r\n      placeholder: \"Assigned To\",\r\n    },\r\n  ];\r\n  selectedOption = this.options[0].value;\r\n  placeholder = this.options[0].placeholder;\r\n  refId: any;\r\n  startDate: String;\r\n  endDate: String;\r\n  minDemand: any;\r\n  maxDemand: any;\r\n\r\n  ngOnInit(): void {\r\n    this.tokenization();\r\n    this.getInventoryList();\r\n    this.getAllUsersList();\r\n    this.getCities();\r\n  }\r\n\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.currentLoginUser = decodedToken.data;\r\n    console.log(this.currentLoginUser);\r\n  }\r\n\r\n  changeStartDate(e: any) {\r\n    this.startDate = formatDate(\r\n      new Date(e.target.value),\r\n      \"yyyy-MM-dd\",\r\n      \"en_US\"\r\n    );\r\n    // console.log('Start', this.startDate);\r\n  }\r\n  changeEndDate(e: any) {\r\n    this.endDate = formatDate(new Date(e.target.value), \"yyyy-MM-dd\", \"en_US\");\r\n    // console.log('End', this.endDate);\r\n  }\r\n\r\n  changeAssignedAgent(agent: any) {\r\n    console.log(agent);\r\n    this.agentAssignedName = agent?.fullname;\r\n    console.log(this.agentAssignedName);\r\n  }\r\n  getAllUsersList() {\r\n    this.authService.getUsers().subscribe(\r\n      (users) => {\r\n        this.agentList = [];\r\n        const data = users;\r\n        data.forEach((element) => {\r\n          if (this.currentLoginUser.access === \"city_admin\") {\r\n            if (this.currentLoginUser.city.city !== element?.city?.city) {\r\n              return;\r\n            }\r\n          }\r\n\r\n          this.agentList.push(element);\r\n        });\r\n        console.log(this.agentList);\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  getInventoryList() {\r\n    this.authService.getInventory().subscribe(\r\n      (data) => {\r\n        data = data.inventories;\r\n\r\n        data.forEach((element) => {\r\n          element.assignedTo = [];\r\n          element.added_ByName = element.added_By.fullname;\r\n          element.cityName = element.city[0]?.city;\r\n          element.locationName = [];\r\n          element.SubLocation = [];\r\n          for (let i = 0; i < element.location.length; i++) {\r\n            element.locationName.push(element.location[i]?.location);\r\n            element.SubLocation.push(element.location[i]?.location);\r\n          }\r\n          if (element.demand_price != null) {\r\n            element.demand = element.demand_price;\r\n          } else if (element.max_price) {\r\n            element.demand = element.max_price;\r\n          } else if (element.min_price) {\r\n            element.demand = element.min_price;\r\n          }\r\n\r\n          for (let i = 0; i < element.assigned_history?.length; i++) {\r\n            if (element.assigned_history[i]?.fullname === \"\") continue;\r\n            element.assignedTo[i] = element.assigned_history[i]?.fullname;\r\n          }\r\n\r\n          if (this.currentLoginUser.access === \"city_admin\") {\r\n            element.city.forEach((city) => {\r\n              if (this.currentLoginUser.city.city === city.city) {\r\n                this.user.push(element);\r\n                return;\r\n              }\r\n            });\r\n          } else if (this.currentLoginUser.access === \"agent\") {\r\n            if (this.currentLoginUser.userId === element.added_By.userId) {\r\n              this.user.push(element);\r\n              return;\r\n            } else {\r\n              element.assigned_history.forEach((history) => {\r\n                if (this.currentLoginUser.userId === history?.userId) {\r\n                  this.user.push(element);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          } else {\r\n            this.user.push(element);\r\n          }\r\n        });\r\n        console.log(\"User Get Response\", this.user);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  // Calling Api to get the Cities\r\n  getCities() {\r\n    this.authService.getCities().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.cities = data;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  // Calling Api to get the Locations\r\n  getLocations(selectedCity?) {\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        console.log(locations);\r\n        this.locations = locations;\r\n        if (selectedCity) {\r\n          this.locations = locations.filter((loc) => {\r\n            return loc.cityId == selectedCity;\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Function to change the city of --ng select city--\r\n  changeCity(city: any) {\r\n    this.locations = [];\r\n    this.location = \"\";\r\n    this.city = city?.city;\r\n    console.log(this.city);\r\n\r\n    this.locations = [];\r\n    if (city) this.getLocations(city._id);\r\n  }\r\n  changeLocation(location: any) {\r\n    this.location = location?.location;\r\n    console.log(this.location);\r\n  }\r\n  optionChange(e: any) {\r\n    this.placeholder = e.placeholder;\r\n    this.refId = \"\";\r\n    console.log(this.selectedOption);\r\n  }\r\n\r\n  sort(key: any) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  public priceConverter(value) {\r\n    return this.authService.priceFilter(value);\r\n  }\r\n  setFormTitle(name: any) {\r\n    this.authService.setFormTitle(name);\r\n    this.router.navigate([\"/add\", name]);\r\n  }\r\n  confirmID(id: any) {\r\n    this.deleteId = id;\r\n  }\r\n\r\n  // Function to delete the single inventory\r\n  deleteInventory() {\r\n    console.log(this.deleteId);\r\n\r\n    this.authService.deleteInventory(this.deleteId).subscribe((data) => {\r\n      console.log(data);\r\n      if (data.code === 200) {\r\n        this.toastr.success(data.message, \"Success\", {\r\n          timeOut: 5000,\r\n        });\r\n        this.getInventoryList();\r\n      }\r\n    });\r\n  }\r\n  // Function to set user in the service in order to perform delete or edit operations later on\r\n  setUserToEdit(user: any) {\r\n    this.authService.setUser(user);\r\n\r\n    this.authService.setFormTitle(\"Inventory\");\r\n    // this.router.navigateByUrl(\"/add-inventories\");\r\n    this.router.navigate([\"/add\", user.form_title]);\r\n  }\r\n  exportTOExcel() {\r\n    let options: JSON2SheetOpts = { header: [] };\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.user, options);\r\n\r\n    var wscols = [\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n    ];\r\n\r\n    ws[\"!cols\"] = wscols;\r\n    ws[\"!cols\"][0] = { hidden: true };\r\n    ws[\"!cols\"][1] = { hidden: true };\r\n    ws[\"!cols\"][2] = { hidden: true };\r\n    ws[\"!cols\"][3] = { hidden: true };\r\n    ws[\"!cols\"][4] = { hidden: true };\r\n\r\n    ws[\"!cols\"][7] = { hidden: true };\r\n    ws[\"!cols\"][21] = { hidden: true };\r\n    ws[\"!cols\"][22] = { hidden: true };\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"All Data Export\");\r\n    XLSX.writeFile(wb, \"Inventory.xlsx\");\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AuthenticationService } from \"../services/Authentication/authentication.service\";\r\n\r\n@Component({\r\n  selector: \"app-newpass\",\r\n  templateUrl: \"./newpass.component.html\",\r\n  styleUrls: [\"./newpass.component.css\"],\r\n})\r\nexport class NewpassComponent implements OnInit {\r\n  submitted = false;\r\n  email: string;\r\n  newpassForm: FormGroup;\r\n  constructor(\r\n    private authServ: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((param) => {\r\n      this.email = param.email;\r\n    });\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    this.newpassForm = this.formBuilder.group({\r\n      password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.newpassForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.newpassForm.invalid) {\r\n      return;\r\n    }\r\n    const user = {\r\n      email: this.email,\r\n      newpassword: this.newpassForm.value.password,\r\n    };\r\n\r\n    this.authServ.newpassword(user).subscribe((data) => {\r\n      console.log(\"server response: \");\r\n      console.log(data);\r\n      const status = data.success;\r\n      const msg = data.status;\r\n      if (status) {\r\n        alert(msg);\r\n        this.router.navigate([\"/\"]);\r\n      } else {\r\n        alert(msg);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 col-md-5 left\">\r\n            <div>\r\n\r\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-1 v2\">\r\n            <div class=\"vl\"></div>\r\n            Password change\r\n            <div class=\"vl\"></div>\r\n        </div>\r\n\r\n        <div class=\"col-sm-6 col-md-6 right\">\r\n            <h2>Welcome to my asasa</h2>\r\n            <form class=\"form-register\" [formGroup]=\"newpassForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\" class='input-container'>\r\n                    <div class=\"input-group\">\r\n                        <i class=\"fa fa-lock icon\"></i>\r\n                        <input class=\"form-control\" class=\"input-field\" id=\"password\" type=\"password\" placeholder=\"Enter new password\" formControlName=\"password\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"input-group\">\r\n                        <i class=\"fa fa-lock icon\"></i>\r\n                        <input class=\"input-field\" id=\"inputPass\" type=\"password\" placeholder=\"Confirm new password\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill\">Change</button>\r\n                </div>\r\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/\">Login</button>\r\n\r\n                <!-- </div> -->\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>","<div class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\"\r\n    (mouseover)=\"toggleSidebar()\" (mouseout)=\"toggleSidebar()\" #sidebar>\r\n    <ul>\r\n\r\n        <div class=\"sidebar-header\">\r\n            <!-- <div class=\"\">\r\n                <div class=\"\" style=\"margin-left: -10px;\">\r\n                    <span class=\"user-role\">{{ tokendata?.access | titlecase}}</span>\r\n                </div>\r\n            </div> -->\r\n            <div class=\"user-pic\">\r\n                <img class=\"img-responsive img-rounded\" src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" />\r\n            </div>\r\n            <div class=\"user-info\">\r\n                <span class=\"user-name\" style=\"color: rgb(194, 201, 211);\">{{ tokendata?.fullname | titlecase }} </span>\r\n                <span class=\"user-role\">{{ tokendata?.access | titlecase}}</span>\r\n                <span class=\"user-status\">\r\n                    <i class=\"fa fa-circle\"></i>\r\n                    <span>Online</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <hr class=\"sidebar-divider\" />\r\n\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/profile\">\r\n                <i class=\"fa fa-user\"></i>\r\n                <span>User Profile</span>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"tokendata?.access  !== 'agent'\">\r\n            <a class=\"nav-link\" routerLink=\"/agents\">\r\n                <i class=\"fa fa-users\"></i>\r\n                <span>Agents</span>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/inventory\">\r\n                <i class=\"fa fa-file-alt\"></i>\r\n                <span>Inventory</span>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/leads\">\r\n                <i class=\"fa fa-phone-volume\"></i>\r\n                <span>Lead</span>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/both\">\r\n                <i class=\"fa fa-phone-volume\"></i>\r\n                <span>Both</span>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/assigned-leads\">\r\n                <i class=\"fas fa-exchange-alt\"></i>\r\n                <span>Assigned Leads</span>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/location\">\r\n                <i class=\"fas fa-exchange-alt\"></i>\r\n                <span>Location</span>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"tokendata?.access  !== 'agent'\">\r\n            <a class=\"nav-link\" routerLink=\"/register\">\r\n                <i class=\"fas fa-tachometer-alt\"></i>\r\n                <span>Register</span>\r\n            </a>\r\n        </li>\r\n        <hr class=\"sidebar-divider\" />\r\n        <div class=\"sidebar-footer\">\r\n            <a routerLink=\"/\" *ngIf=\"isLogin()\" (click)=\"logout()\">\r\n                <i class=\"fa fa-lock\"></i>\r\n                <span class=\"badge-logout\">Logout</span>\r\n            </a>\r\n        </div>\r\n    </ul>\r\n</div>","import { Component, CUSTOM_ELEMENTS_SCHEMA, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\r\nimport { AuthenticationService } from \"../services/Authentication/authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.css\"],\r\n \r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  tokendata: any;\r\n  mini: boolean = true;\r\n\r\n  @ViewChild('sidebar') sidebar: any;\r\n  @Output() widthEmittedEvent = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    public authService: AuthenticationService,\r\n    public router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.tokenization();\r\n\r\n  }\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.tokendata = decodedToken.data;\r\n    // console.log(this.tokendata);\r\n  }\r\n\r\n  isLogin() {\r\n    const token = this.authService.getToken();\r\n    return token;\r\n  }\r\n  logout() {\r\n    localStorage.removeItem(\"token\");\r\n    this.toastr.success(\"Logged Out\", \"Success\", {\r\n      timeOut: 5000,\r\n    });\r\n    console.log(\"\\nlogout\\n\");\r\n    this.router.navigateByUrl(\"/\");\r\n  }\r\n  \r\n  toggleSidebar() {\r\n    if (this.mini) {\r\n      this.mini = false;\r\n      this.sidebar.nativeElement.style.width = '280px'\r\n      this.widthEmittedEvent.emit(280);\r\n    } else {\r\n      this.mini = true;\r\n      this.sidebar.nativeElement.style.width = '70px'\r\n      this.widthEmittedEvent.emit(70);\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'tableFilter04'\r\n})\r\nexport class TableFilter04Pipe implements PipeTransform {\r\n\r\n  transform(\r\n    // user: User[],,\r\n    user: any,\r\n    search_type: string\r\n  ): typeof user {\r\n\r\n    if (!user || !search_type) {\r\n      return user;\r\n    }\r\n    return user.filter(user =>\r\n      user.contact.toLowerCase().indexOf(search_type.toLowerCase()) !== -1);\r\n\r\n  }\r\n\r\n}","// import { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { Component } from \"@angular/core\";\r\nimport { AuthenticationService } from \"./services/Authentication/authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  isShown = false;\r\n  title = \"MyAsasa AGENT DASHBOARD Real Estate\";\r\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\r\n  // registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  constructor(\r\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\r\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\r\n    public router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n    // this.router.navigate(['profile']);\r\n  }\r\n  isLogin() {\r\n    const token = this.authService.getToken();\r\n    // console.log(token);\r\n    return token;\r\n    // if (token) {\r\n    //   return true;\r\n    // }\r\n    // else {\r\n    //   return false;\r\n    // }\r\n  }\r\n  logout() {\r\n    localStorage.removeItem(\"token\");\r\n    this.router.navigateByUrl(\"/\");\r\n  }\r\n\r\n  initialize() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),\r\n        ],\r\n      ],\r\n      password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n  get email() {\r\n    return this.loginForm.get(\"email\");\r\n  }\r\n  loginUser() {\r\n    this.submitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    // console.log('user login data: ',this.loginForm.value);\r\n    this.authService.login(this.loginForm.value).subscribe((data) => {\r\n      console.log(data);\r\n      const status = data.status;\r\n      const msg: string = data.msg;\r\n      console.log(\"Status: \" + status);\r\n      console.log(\"Message: \" + msg);\r\n      if (status) {\r\n      } else {\r\n        alert(\"Invalid email or password!\");\r\n      }\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { CanActivate, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../Authentication/authentication.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsLoginGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthenticationService) {}\r\n\r\n  async canActivate() {\r\n    const token = await this.authService.getToken();\r\n    if (!token) {\r\n      this.router.navigateByUrl('/');\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms'\r\nimport { from } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: 'app-options',\r\n  templateUrl: './options.component.html',\r\n  styleUrls: ['./options.component.css']\r\n})\r\nexport class OptionsComponent implements OnInit {\r\n  submitted = false;\r\n  user: any;\r\n  cartService: any;\r\n  addoptionForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private toastr: ToastrService) { }\r\n  formDeclare() {\r\n    this.addoptionForm = this.formBuilder.group({\r\n      add_newcity: ['', Validators.required],\r\n      added_cities: ['', Validators.required],\r\n      add_newloc: ['', Validators.required],\r\n      added_loc: ['', Validators.required],\r\n      enter_newloc: ['', Validators.required],\r\n      add_newtype: ['', Validators.required],\r\n      added_type: ['', Validators.required],\r\n      add_newstatus: ['', Validators.required],\r\n      added_status: ['', Validators.required]\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.addoptionForm.controls; }\r\n  ngOnInit(): void {\r\n    this.formDeclare();\r\n  }\r\n  submitForm() {\r\n    this.submitted = true;    // stop here if form is invalid\r\n    if (this.addoptionForm.invalid) {\r\n      this.toastr.error('Fields Empty', 'Error', {\r\n        timeOut: 5000\r\n      });\r\n      console.log('Erroneous')\r\n      return;\r\n    }\r\n    this.addoptionForm.reset();\r\n    this.toastr.success('Lead Added', 'Success', {\r\n      timeOut: 9000\r\n    });\r\n  }\r\n}\r\n","<div class=\" register\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2 register-left\">\r\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\r\n            <h2><b>Asasa Real Estate</b></h2>\r\n        </div>\r\n        <div class=\"col-md-10 col-sm-10 register-right\">\r\n            <form class=\"form-register\" [formGroup]=\"addoptionForm\">\r\n                <h2 class=\"register-heading\">Cities</h2>\r\n                <div class=\"row register-form\">\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Add New City\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newcity\" required\r\n                                    autocomplete=\"off\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Added Cities\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_cities\"\r\n                                    list=\"productName\" />\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br><br>\r\n                        <div class=\"form-group\" class=\"pull-left\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Add City</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br><br>\r\n                        <div class=\"form-group\" class=\"pull-right\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Locations -->\r\n\r\n                <h2 class=\"register-heading\">Locations</h2>\r\n                <div class=\"row register-form\">\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <h3>Add New Location</h3>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\"><br>\r\n                                Select City\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newloc\"\r\n                                    list=\"productName\" />\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <h3>Added Locations</h3>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\"><br>\r\n                                Select City\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_loc\"\r\n                                    list=\"productName\" />\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Enter New Location\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"enter_newloc\" required\r\n                                    autocomplete=\"off\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Right side column -->\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br>\r\n                                Select Location\r\n                                <input type=\"text\" class=\"form-control\" list=\"productName\" />\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- Left side column -->\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Select Added Locations\r\n                                <input type=\"text\" class=\"form-control\" list=\"productName\" />\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12\">\r\n                        <br><br>\r\n                        <div class=\"form-group\" class=\"pull-left\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Location</button>\r\n\r\n                        </div>\r\n                        <div class=\"form-group\" class=\"pull-right\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Property Types -->\r\n\r\n                <h2 class=\"register-heading\">Property Types</h2>\r\n                <div class=\"row register-form\">\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Add New Type\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newtype\" required\r\n                                    autocomplete=\"off\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Added Types\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_type\"\r\n                                    list=\"productName\" />\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                        <br><br>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12\">\r\n                        <div class=\"form-group\" class=\"pull-left\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Property Type</button>\r\n\r\n                        </div>\r\n                        <div class=\"form-group\" class=\"pull-right\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Status Types -->\r\n\r\n                <h2 class=\"register-heading\">Status Types</h2>\r\n                <div class=\"row register-form\">\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Add New Status\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"add_newstatus\" required\r\n                                    autocomplete=\"off\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Added Status\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_status\"\r\n                                    list=\"productName\" />\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12 col-sm-12\"><br><br>\r\n                        <div class=\"form-group\" class=\"pull-left\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Add Status Type</button>\r\n\r\n                        </div>\r\n                        <div class=\"form-group\" class=\"pull-right\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Ng2OrderModule } from \"ng2-order-pipe\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { NgSelectModule } from \"@ng-select/ng-select\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \"@angular/core\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { MapComponent } from \"./map/map.component\";\r\n\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ForgetpassComponent } from \"./forgetpass/forgetpass.component\";\r\nimport { ForgetpassverifyComponent } from \"./forgetpassverify/forgetpassverify.component\";\r\nimport { NewpassComponent } from \"./newpass/newpass.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupotpComponent } from \"./signupotp/signupotp.component\";\r\nimport { registerLocaleData } from \"@angular/common\";\r\nimport en from \"@angular/common/locales/en\";\r\n// import { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { ProfileComponent } from \"./dashboard/profile/profile.component\";\r\nimport { InventoryComponent } from \"./dashboard/inventory/inventory.component\";\r\nimport { UsersComponent } from \"./dashboard/users/users.component\";\r\nimport { LeadsComponent } from \"./dashboard/leads/leads.component\";\r\nimport { TableFilterPipe } from \"./Pipes/table-filter.pipe\";\r\nimport { Ng2SearchPipeModule } from \"ng2-search-filter\";\r\nimport { TableFilter02Pipe } from \"./Pipes/table-filter02.pipe\";\r\nimport { TableFilter03Pipe } from \"./Pipes/table-filter03.pipe\";\r\nimport { TableFilter04Pipe } from \"./Pipes/table-filter04.pipe\";\r\nimport { TableFilter05Pipe } from \"./Pipes/table-filter05.pipe\";\r\nimport { TableFilter06Pipe } from \"./Pipes/table-filter06.pipe\";\r\nimport { InactiveComponent } from \"./dashboard/inactive/inactive.component\";\r\nimport { OptionsComponent } from \"./dashboard/options/options.component\";\r\nimport { AddUsersComponent } from \"./dashboard/users/add-users/add-users.component\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { AddLeadsComponent } from \"./dashboard/leads/add-leads/add-leads.component\";\r\nimport { AddInventoriesComponent } from \"./dashboard/inventory/add-inventories/add-inventories.component\";\r\nimport { NavbarComponent } from \"./navbar/navbar.component\";\r\nimport { HeaderComponent } from \"./dashboard/header/header.component\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { SidebarComponent } from \"./sidebar/sidebar.component\";\r\nimport { NavigationComponent } from \"./header-navigation/navigation.component\";\r\nimport { BothComponent } from \"./dashboard/both/both.component\";\r\nimport { AssignedLeadsComponent } from \"./dashboard/assigned-leads/assigned-leads.component\";\r\nimport { PageNotFoundComponent } from \"./dashboard/page-not-found/page-not-found.component\";\r\nimport { FilterPipe } from \"./Pipes/filter.pipe\";\r\nimport { LocationComponent } from \"./dashboard/location/location.component\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { AddLocationComponent } from \"./dashboard/location/add-location/add-location.component\";\r\nimport { TableDatePipe } from \"./Pipes/table-date-filter.pipe\";\r\nimport { TableDemandPipe } from \"./Pipes/table-demand-filter.pipe\";\r\nimport { RoleGuard } from \"./services/guards/role.guard\";\r\nregisterLocaleData(en);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ForgetpassComponent,\r\n    ForgetpassverifyComponent,\r\n    NewpassComponent,\r\n    SignupotpComponent,\r\n    DashboardComponent,\r\n    ProfileComponent,\r\n    InventoryComponent,\r\n    UsersComponent,\r\n    LeadsComponent,\r\n    TableDemandPipe,\r\n    TableDatePipe,\r\n    TableFilterPipe,\r\n    TableFilter02Pipe,\r\n    TableFilter03Pipe,\r\n    TableFilter04Pipe,\r\n    TableFilter05Pipe,\r\n    TableFilter06Pipe,\r\n    InactiveComponent,\r\n    OptionsComponent,\r\n    AddUsersComponent,\r\n    AddLeadsComponent,\r\n    AddInventoriesComponent,\r\n    NavbarComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    NavigationComponent,\r\n    BothComponent,\r\n    AssignedLeadsComponent,\r\n    PageNotFoundComponent,\r\n    FilterPipe,\r\n    LocationComponent,\r\n    AddLocationComponent,\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FlexLayoutModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(), // ToastrModule added\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    Ng2SearchPipeModule,\r\n    NgSelectModule,\r\n    NgbModule,\r\n    Ng2OrderModule,\r\n    NgxPaginationModule,\r\n    // MaterialModule\r\n  ],\r\n  providers: [\r\n    RoleGuard\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n                <h1 class=\"h3 mb-2 text-gray-800\">Location</h1>\r\n\r\n                <div class=\"row mb-3 mt-5\">\r\n                    <div class=\"col-12\" *ngIf=\"currentLoginUser?.access !== 'agent'\">\r\n                        <button class=\"btn btn-primary\" routerLink=\"/add-location\">Add New</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select [items]=\"options\" bindLabel=\"name\" bindValue=\"value\" placeholder=\"Filter By\" [(ngModel)]=\"selectedOption\" (change)=\"optionChange($event)\" [clearable]=\"false\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search {{ placeholder }}\" [(ngModel)]=\"refId\" />\r\n                    </div>\r\n                    <!-- <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"city\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\">\r\n                        </ng-select>\r\n                    </div> -->\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"btn-container\">\r\n                        <button onclick=\"window.print()\" class=\"btn btn-primary\">Print</button>\r\n                        <button (click)=\"exportTOExcel()\" class=\"btn btn-primary\">Excel</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"table-container mb-5 mt-4\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th (click)=\"sort('id')\" scope=\"col\">ID <i class=\"fa fa-sort\"></i></th>\r\n                                        <th scope=\"col\">City</th>\r\n                                        <th scope=\"col\">Location</th>\r\n                                        <th scope=\"col\">Sub Locations</th>\r\n                                        <th scope=\"col\" *ngIf=\"currentLoginUser?.access !== 'agent'\">Operations</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n\r\n                                    <tr *ngFor=\"let location of locations | filterlist: selectedOption:refId | orderBy: key: reverse | paginate:{itemsPerPage:50,currentPage:p};\">\r\n                                        <td>{{ location?._id }}</td>\r\n                                        <td>{{ location?.cityName }}</td>\r\n                                        <td>\r\n                                            <span>{{ location?.location | titlecase }}</span>\r\n                                        </td>\r\n                                        <td *ngIf=\"location?.subLocations else LocationBlock\">\r\n\r\n                                            <span *ngFor=\"let sublocation of location?.subLocations\">{{ sublocation?.subLocation\r\n                                                }}, </span>\r\n                                        </td>\r\n                                        <ng-template #LocationBlock>\r\n                                            {{'None'}}\r\n                                        </ng-template>\r\n                                        <td *ngIf=\"currentLoginUser?.access !== 'agent'\"><i class=\"fa fa-edit icon\" (click)=\"setLocation(location)\"></i>\r\n                                            <a (click)=\"setLocation(location)\" role=\"button\"></a>\r\n\r\n                                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(location._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\r\n\r\n                                        </td>\r\n                                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                            <div class=\"modal-dialog\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\r\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                            <span aria-hidden=\"true\">&times;</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        Are you sure you want to delete it?\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                                                            Close\r\n                                                        </button>\r\n                                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLocation()\">\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import * as XLSX from \"xlsx\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { JSON2SheetOpts } from \"xlsx/types\";\r\n\r\n@Component({\r\n  selector: \"app-location\",\r\n  templateUrl: \"./location.component.html\",\r\n  styleUrls: [\"./location.component.css\"],\r\n})\r\nexport class LocationComponent implements OnInit {\r\n  general_search: string;\r\n  data: any;\r\n  key: any;\r\n  reverse: boolean = true;\r\n  p: number = 1;\r\n  locations: any = [];\r\n  city: any;\r\n\r\n  currentLoginUser: any;\r\n\r\n  @ViewChild(\"content\") content: any;\r\n  deletedId: any;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  options = [\r\n    {\r\n      value: \"locationName\",\r\n      name: \"Filter By Location\",\r\n      placeholder: \"Location\",\r\n    },\r\n    {\r\n      value: \"cityName\",\r\n      name: \"Filter By City\",\r\n      placeholder: \"City\",\r\n    },\r\n    {\r\n      value: \"SubLocationName\",\r\n      name: \"Filter By Sub-Location\",\r\n      placeholder: \"Location\",\r\n    },\r\n  ];\r\n  selectedOption = this.options[0].value;\r\n  placeholder = this.options[0].placeholder;\r\n  refId: any;\r\n  ngOnInit(): void {\r\n    this.tokenization();\r\n    this.getCities();\r\n  }\r\n\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.currentLoginUser = decodedToken.data;\r\n    console.log(this.currentLoginUser);\r\n  }\r\n\r\n  optionChange(e: any) {\r\n    this.placeholder = e.placeholder;\r\n    this.refId = \"\";\r\n    console.log(this.selectedOption);\r\n  }\r\n  setLocation(user: any) {\r\n    this.authService.setUser(user);\r\n    this.router.navigateByUrl(\"/add-location\");\r\n  }\r\n\r\n  // Calling Api to get the Cities\r\n  getCities() {\r\n    this.authService.getCities().subscribe(\r\n      (city) => {\r\n        console.log(city);\r\n        this.city = city;\r\n        this.getLocations();\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  // Calling Api to get the Locations\r\n  getLocations() {\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        this.locations = [];\r\n        console.log(locations);\r\n        locations.forEach((element, index) => {\r\n          const cityName = this.getCityName(element.cityId);\r\n\r\n          if (\r\n            this.currentLoginUser.access === \"city_admin\" ||\r\n            this.currentLoginUser.access === \"agent\"\r\n          ) {\r\n            if (this.currentLoginUser.city.city !== cityName) {\r\n              return;\r\n            }\r\n          }\r\n          element.cityName = cityName;\r\n          element.locationName = locations[index].location;\r\n          element.SubLocationName = [];\r\n          if (element.subLocations) {\r\n            for (let i = 0; i < element.subLocations.length; i++) {\r\n              element.SubLocationName.push(\r\n                element.subLocations[i]?.subLocation\r\n              );\r\n            }\r\n          }\r\n\r\n          this.locations.push(element);\r\n        });\r\n        console.log(this.locations);\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteLocation() {\r\n    console.log(this.deletedId);\r\n    this.authService.deleteLocation(this.deletedId).subscribe((data) => {\r\n      console.log(data);\r\n      const code = data.code;\r\n      if (code == 200) {\r\n        this.toastr.success(data.message, \"Success\", {\r\n          timeOut: 5000,\r\n        });\r\n        this.getLocations();\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmID(id: any) {\r\n    this.deletedId = id;\r\n  }\r\n\r\n  getCityName(cityId: any) {\r\n    for (let i = 0; i < this.city.length; i++) {\r\n      if (cityId === this.city[i]._id) {\r\n        return this.city[i].city;\r\n      } else if (cityId === 8) return \"Karachi\";\r\n    }\r\n  }\r\n\r\n  sort(key: any) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  exportTOExcel() {\r\n    let options: JSON2SheetOpts = { header: [] };\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.data, options);\r\n\r\n    var wscols = [\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n    ];\r\n\r\n    ws[\"!cols\"] = wscols;\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"All Data Export\");\r\n    XLSX.writeFile(wb, \"Users.xlsx\");\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray, NgForm } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/services/Authentication/authentication.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-add-leads',\r\n  templateUrl: './add-leads.component.html',\r\n  styleUrls: ['./add-leads.component.css']\r\n})\r\nexport class AddLeadsComponent implements OnInit {\r\n  submitted = false;\r\n  user: any;\r\n  cartService: any;\r\n  addleadForm: FormGroup;\r\n  cities: any;\r\n  locations: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: AuthenticationService,\r\n              private router: Router,\r\n              private toastr: ToastrService) { }\r\n  formDeclare() {\r\n    this.addleadForm = this.formBuilder.group({\r\n      location: ['', Validators.required],\r\n      client: ['', Validators.required],\r\n      id: ['', Validators.required],\r\n      agent_status: ['', Validators.required],\r\n      admin_status: ['', Validators.required],\r\n      phone_no: ['', Validators.required],\r\n      added_on: ['', Validators.required],\r\n      area: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      purpose: ['', Validators.required],\r\n      prop_type: ['', Validators.required],\r\n      prop_no: ['', Validators.required],\r\n      demand: ['', Validators.required],\r\n      comment: ['', Validators.required],\r\n      assigned_to: ['', Validators.required]\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.addleadForm.controls; }\r\n  ngOnInit(): void {\r\n    this.formDeclare();\r\n    this.getCities();\r\n    this.getLocations();\r\n  }\r\n    getCities() {\r\n      this.authService.getCities().subscribe(\r\n        (data) => {\r\n          this.cities = data;\r\n          console.log('Cities: ', this.cities);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n    }\r\n        getLocations() {\r\n          this.authService.getLocations().subscribe(\r\n            (data) => {\r\n              this.locations = data;\r\n              console.log('Locations: ', this.locations);\r\n            },\r\n            (err) => {\r\n              console.error(err);\r\n            }\r\n          );\r\n        }\r\n  submitForm() {\r\n    this.submitted = true;    // stop here if form is invalid\r\n    if (this.addleadForm.invalid) {\r\n      this.toastr.error('Fields Empty', 'Error', {\r\n        timeOut: 5000\r\n      });\r\n      // console.log('Erroneous')\r\n      return;\r\n    }\r\n    this.addleadForm.reset();\r\n    this.toastr.success('Lead Added', 'Success', {\r\n      timeOut: 9000\r\n    });\r\n  }\r\n}\r\n","<div class=\" register\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2 register-left\">\r\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\r\n            <h2><b>Asasa Real Estate</b></h2>\r\n        </div>\r\n        <div class=\"col-md-10 col-sm-10 register-right\">\r\n            <form class=\"form-register\" [formGroup]=\"addleadForm\">\r\n                <h2 class=\"register-heading\">Add Lead</h2>\r\n                <div class=\"row register-form\">\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                ID\r\n                                <input type=\"number\" class=\"form-control\" formControlName=\"id\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.id.errors }\" />\r\n                                <div *ngIf=\"submitted && f.id.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.id.errors.required\">Id is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Client\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"client\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.client.errors }\" />\r\n                                <div *ngIf=\"submitted && f.client.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.client.errors.required\">Client is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Type\r\n                                <input formControlName=\"type\" class=\"form-control\" type=\"text\" list=\"productName2\" [ngClass]=\"{ 'is-invalid': submitted && f.type.errors }\" />\r\n                                <div *ngIf=\"submitted && f.type.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.type.errors.required\">Type is required</div>\r\n                                </div>\r\n                                <datalist id=\"productName2\">\r\n                                    <option value=\"Buyer\">Buyer</option>\r\n                                    <option value=\"Seller\">Seller</option>\r\n                                    <option value=\"Else\">Else</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Purpose\r\n                                <input formControlName=\"purpose\" class=\"form-control\" type=\"text\" list=\"productName3\" [ngClass]=\"{ 'is-invalid': submitted && f.purpose.errors }\" />\r\n                                <div *ngIf=\"submitted && f.purpose.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.purpose.errors.required\">Purpose is required</div>\r\n                                </div>\r\n                                <datalist id=\"productName3\">\r\n                                    <option value=\"Buy\">Buy</option>\r\n                                    <option value=\"Sale\">Sale</option>\r\n                                    <option value=\"Rent\">Rent</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br><br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Property Type\r\n                                <input formControlName=\"prop_type\" class=\"form-control\" type=\"text\" list=\"productName4\" [ngClass]=\"{ 'is-invalid': submitted && f.prop_type.errors }\" />\r\n                                <div *ngIf=\"submitted && f.prop_type.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.prop_type.errors.required\">Property Type is required</div>\r\n                                </div>\r\n                                <datalist id=\"productName4\">\r\n                                    <option value=\"Apartment\">Apartment</option>\r\n                                    <option value=\"House\">House</option>\r\n                                    <option value=\"Residential Plot\">Residential Plot</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br><br> Property Number\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"prop_no\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.prop_no.errors }\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" />\r\n                                <div *ngIf=\"submitted && f.prop_no.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.prop_no.errors.required\">Property Number is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br><br> Area\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"area\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.area.errors }\" />\r\n                                <div *ngIf=\"submitted && f.area.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.area.errors.required\">Area is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br><br> Location\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"location\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\r\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br> Demand\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"demand\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.demand.errors }\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" />\r\n                                <div *ngIf=\"submitted && f.demand.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.demand.errors.required\">Demand is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br> Phone number\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"phone_no\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.phone_no.errors }\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" />\r\n                                <div *ngIf=\"submitted && f.phone_no.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.phone_no.errors.required\">Phone number is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br><br> Comment\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"comment\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.comment.errors }\" />\r\n                                <div *ngIf=\"submitted && f.comment.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.comment.errors.required\">Comment is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br><br> Assigned To\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"assigned_to\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.assigned_to.errors }\" />\r\n                                <div *ngIf=\"submitted && f.assigned_to.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.assigned_to.errors.required\">Assigned To is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br><br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Admin Status\r\n                                <input formControlName=\"admin_status\" class=\"form-control\" type=\"text\" list=\"productName\" [ngClass]=\"{ 'is-invalid': submitted && f.admin_status.errors }\" />\r\n                                <div *ngIf=\"submitted && f.admin_status.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.admin_status.errors.required\">Admin status is required</div>\r\n                                </div>\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br><br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                Agent Status\r\n                                <input formControlName=\"agent_status\" class=\"form-control\" type=\"text\" list=\"productName1\" [ngClass]=\"{ 'is-invalid': submitted && f.agent_status.errors }\" />\r\n                                <div *ngIf=\"submitted && f.agent_status.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.agent_status.errors.required\">Agent Status is required</div>\r\n                                </div>\r\n                                <datalist id=\"productName1\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <br><br> Added On\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"added_on\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.added_on.errors }\" />\r\n                                <div *ngIf=\"submitted && f.added_on.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.added_on.errors.required\">Added On is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12\">\r\n                        <br><br>\r\n                        <div class=\"form-group\" class=\"pull-right\">\r\n                            <button (click)=\"submitForm()\" class=\"btn btn-primary\">Add</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n  name: 'tableFilter06'\r\n})\r\nexport class TableFilter06Pipe implements PipeTransform {\r\n\r\n  transform(\r\n    // user: User[],,\r\n    user: any,\r\n    search_client: string\r\n  ): typeof user {\r\n\r\n    if (!user || !search_client) {\r\n      return user;\r\n    }\r\n    return user.filter(user =>\r\n      user.fullname.toLowerCase().indexOf(search_client.toLowerCase()) !== -1);\r\n\r\n  }\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport * as mapboxgl from \"mapbox-gl\";\r\nimport { MapserviceService } from \"../services/Map/mapservice.service\";\r\n@Component({\r\n  selector: \"app-map\",\r\n  templateUrl: \"./map.component.html\",\r\n  styleUrls: [\"./map.component.css\"],\r\n})\r\nexport class MapComponent implements OnInit {\r\n  opacity = 1;\r\n  map: mapboxgl.Map;\r\n  style = \"mapbox://styles/mapbox/streets-v11\";\r\n  lat = 33.628463;\r\n  lng = 73.087581;\r\n  geojson = {\r\n    type: \"FeatureCollection\",\r\n    features: [\r\n      {\r\n        type: \"Feature\",\r\n        properties: {\r\n          message: \"Foo\",\r\n          iconSize: [24, 24],\r\n        },\r\n        geometry: {\r\n          type: \"Point\",\r\n          coordinates: { lat: 62.324462890625, lng: 33.024695711685304 },\r\n        },\r\n      },\r\n      {\r\n        type: \"Feature\",\r\n        properties: {\r\n          message: \"Bar\",\r\n          iconSize: [24, 24],\r\n        },\r\n        geometry: {\r\n          type: \"Point\",\r\n          coordinates: { lat: 73.2158203125, lng: 33.97189158092897 },\r\n        },\r\n      },\r\n      {\r\n        type: \"Feature\",\r\n        properties: {\r\n          message: \"Baz\",\r\n          iconSize: [24, 24],\r\n        },\r\n        geometry: {\r\n          type: \"Point\",\r\n          coordinates: { lat: 51.29223632812498, lng: 34.28151823530889 },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  mapArray = [\r\n    {\r\n      lat: 72.99641,\r\n      lng: 33.645992,\r\n      tag: \"Islamabad\",\r\n      size: [51, 22],\r\n    },\r\n    {\r\n      lat: 73.0169,\r\n      lng: 33.5651,\r\n      tag: \"Rawalpindi\",\r\n      size: [51, 22],\r\n    },\r\n    {\r\n      lat: 71.5249,\r\n      lng: 34.0151,\r\n      tag: \"Peshawar\",\r\n      size: [51, 22],\r\n    },\r\n    {\r\n      lat: 67.0011,\r\n      lng: 24.8607,\r\n      tag: \"Karachi\",\r\n      size: [51, 22],\r\n    },\r\n  ];\r\n  constructor(private mapservice: MapserviceService) {}\r\n\r\n  ngOnInit() {\r\n    this.initializemapbox();\r\n\r\n    ///////////////// This is the data coming from url into our frontend map //////////////////////\r\n\r\n    // this.mapservice.readData()\r\n    // .subscribe\r\n    // (data=> {\r\n    //     data.property.forEach(( data ) => {\r\n    //       // create a DOM element for the marker\r\n    //       const el = document.createElement('div');\r\n    //       el.className = 'data';\r\n    //       el.style.backgroundImage = 'url(/assets/asasamarker.png)';\r\n    //       el.innerHTML = data.demand;\r\n    //       el.style.fontStyle = 'bold';\r\n    //       el.style.textAlign = 'center';\r\n    //       el.style.color = 'white';\r\n    //       el.style.width = '51px';\r\n    //       el.style.height = '22px';\r\n    //       el.style.fontSize = '10px';\r\n    //       el.style.fontWeight = '700';\r\n    //       el.style.fontFamily = 'Jersey M54';\r\n    //       // el.style.fontSizeAdjust = '5px';\r\n    //       new mapboxgl.Marker(el)\r\n    //         .setLngLat([\r\n    //           data.location_data.marker_data.mlongitude,\r\n    //           data.location_data.marker_data.mlatitide\r\n    //         ])\r\n    //         //.setPopup(new mapboxgl.Popup().setHTML(data.tag))\r\n    //         .addTo(this.map);\r\n    //     });\r\n\r\n    // })\r\n  }\r\n  initializemapbox() {\r\n    this.map = new mapboxgl.Map({\r\n      accessToken:\r\n        \"pk.eyJ1IjoibmFiZWVsc2FsZWVtIiwiYSI6ImNrY3p4MWhrZzBiNWwyd3FtOGx3aTZsbjEifQ.z6RLknl-YnJe2eKqMjPElg\",\r\n      container: \"map\",\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: [73.024955, 33.650753], // starting position [lng, lat]\r\n      zoom: 10, // starting zoom\r\n    });\r\n    this.mapArray.forEach((marker) => {\r\n      // create a DOM element for the marker\r\n      const el = document.createElement(\"div\");\r\n      el.className = \"marker\";\r\n      el.style.backgroundImage = \"url(/assets/icons/asasamarker.png)\";\r\n      el.innerHTML = marker.tag;\r\n      el.style.fontStyle = \"bold\";\r\n      el.style.textAlign = \"center\";\r\n      el.style.color = \"white\";\r\n      el.style.width = marker.size[0] + \"px\";\r\n      el.style.height = marker.size[1] + \"px\";\r\n      el.style.fontSize = \"10px\";\r\n      el.style.fontWeight = \"700\";\r\n      el.style.fontFamily = \"quartzo\";\r\n      new mapboxgl.Marker(el)\r\n        .setLngLat([marker.lat, marker.lng])\r\n        .setPopup(new mapboxgl.Popup().setHTML(marker.tag))\r\n        .addTo(this.map);\r\n    });\r\n    // this.map.addSource\r\n    this.mapboxOverlay();\r\n    this.map.addControl(new mapboxgl.FullscreenControl());\r\n    this.map.addControl(new mapboxgl.NavigationControl());\r\n    this.map.addControl(\r\n      new mapboxgl.GeolocateControl({\r\n        positionOptions: {\r\n          enableHighAccuracy: true,\r\n        },\r\n        trackUserLocation: true,\r\n      })\r\n    );\r\n  }\r\n\r\n  mapboxOverlay() {\r\n    const slider = document.getElementById(\"slider\");\r\n    const sliderValue = document.getElementById(\"slider-value\");\r\n    this.map.on(\"load\", () => {\r\n      this.map.addSource(\"myImageSource\", {\r\n        type: \"image\",\r\n        url: \"assets/i-10-islamabad.jpg\",\r\n        coordinates: [\r\n          [73.024955, 33.650753], // cda kashmir highway\r\n          [73.041134, 33.659291], // rizvi road kashmir highway:\r\n          [73.05152, 33.645466], // Service Rd West I-10 Islamabad,\r\n          [73.035384, 33.636927], // I-10/3 I 10/3 I-10, Islamabad, Islamabad\r\n        ],\r\n      });\r\n      this.map.addLayer({\r\n        id: \"myImageSource\",\r\n        source: \"myImageSource\",\r\n        type: \"raster\",\r\n        paint: {\r\n          \"raster-opacity\": this.opacity,\r\n        },\r\n      });\r\n\r\n      slider.addEventListener(\"input\", (e) => {\r\n        // Adjust the layers opacity. layer here is arbitrary - this could\r\n        // be another layer name found in your style or a custom layer\r\n        // added on the fly using `addSource`.\r\n        // e.target;\r\n        const input = (document.getElementById(\"slider\") as HTMLInputElement)\r\n          .value;\r\n        this.map.setPaintProperty(\r\n          \"myImageSource\",\r\n          \"raster-opacity\",\r\n          parseInt(\"\" + input + \"\", 10) / 100\r\n        );\r\n        // Value indicator\r\n        sliderValue.textContent = \"\" + input + \"\" + \"%\";\r\n      });\r\n    });\r\n\r\n    this.map.on(\"load\", () => {\r\n      this.map.addSource(\"f-7\", {\r\n        type: \"image\",\r\n        url: \"assets/f-7.png\",\r\n        coordinates: [\r\n          [73.042912, 33.722351],\r\n          [73.061492, 33.731482],\r\n          [73.070957, 33.719287],\r\n          [73.05285, 33.709633],\r\n        ],\r\n      });\r\n      this.map.addLayer({\r\n        id: \"f-7\",\r\n        source: \"f-7\",\r\n        type: \"raster\",\r\n        paint: {\r\n          \"raster-opacity\": this.opacity,\r\n        },\r\n      });\r\n\r\n      slider.addEventListener(\"input\", (e) => {\r\n        const input = (document.getElementById(\"slider\") as HTMLInputElement)\r\n          .value;\r\n        this.map.setPaintProperty(\r\n          \"f-7\",\r\n          \"raster-opacity\",\r\n          parseInt(\"\" + input + \"\", 10) / 100\r\n        );\r\n        // Value indicator\r\n        sliderValue.textContent = \"\" + input + \"\" + \"%\";\r\n      });\r\n    });\r\n    this.map.on(\"load\", () => {\r\n      this.map.addSource(\"phase-2\", {\r\n        type: \"image\",\r\n        url: \"assets/phase 2.png\",\r\n        coordinates: [\r\n          [73.1142, 33.56586], // Phase 4 Gulrez Housing Scheme\r\n          [73.12625, 33.5658], // Police Foundation, Rawalpindi\r\n          [73.125652, 33.552467], // Bahria Town Phase V Phase 5\r\n          [73.112955, 33.55223], // Bahria Town Phase III Phase 3\r\n        ],\r\n      });\r\n      this.map.addLayer({\r\n        id: \"phase-2\",\r\n        source: \"phase-2\",\r\n        type: \"raster\",\r\n        paint: {\r\n          \"raster-opacity\": this.opacity,\r\n        },\r\n      });\r\n\r\n      slider.addEventListener(\"input\", (e) => {\r\n        const input = (document.getElementById(\"slider\") as HTMLInputElement)\r\n          .value;\r\n        this.map.setPaintProperty(\r\n          \"phase-2\",\r\n          \"raster-opacity\",\r\n          parseInt(\"\" + input + \"\", 10) / 100\r\n        );\r\n        // Value indicator\r\n        sliderValue.textContent = \"\" + input + \"\" + \"%\";\r\n      });\r\n    });\r\n\r\n    // this.map.on('load', () => {\r\n    //   this.map.addSource('phase-3', {\r\n    //     type: 'image',\r\n    //     url: 'assets/phase 3.png',\r\n    //     coordinates: [\r\n    //       [73.104769, 33.563229], // Phase 2 Gulrez Housing Scheme\r\n    //       [73.127969, 33.560081], // Phase 2 Bahria Town, Rawalpindi\r\n    //       [73.121127, 33.544900], // Soan River\r\n    //       [73.093428, 33.550266] // Golden Jubilee Residential CHS\r\n    //     ],\r\n    //   });\r\n    //   this.map.addLayer({\r\n    //     id: 'phase-3',\r\n    //     source: 'phase-3',\r\n    //     type: 'raster',\r\n    //     paint: {\r\n    //       'raster-opacity': this.opacity,\r\n    //     },\r\n    //   });\r\n\r\n    //   slider.addEventListener('input', (e) => {\r\n    //     const input = (document.getElementById('slider') as HTMLInputElement)\r\n    //       .value;\r\n    //     this.map.setPaintProperty(\r\n    //       'phase-3',\r\n    //       'raster-opacity',\r\n    //       parseInt('' + input + '', 10) / 100\r\n    //     );\r\n    //     // Value indicator\r\n    //     sliderValue.textContent = '' + input + '' + '%';\r\n    //   });\r\n    // });\r\n    this.map.on(\"load\", () => {\r\n      this.map.addSource(\"e-16\", {\r\n        type: \"image\",\r\n        url: \"assets/maps_images/E-16-crop.png\",\r\n        coordinates: [\r\n          [72.877392, 33.652982],\r\n          [72.89812, 33.652946],\r\n          [72.898034, 33.637977],\r\n          [72.877349, 33.638049],\r\n        ],\r\n      });\r\n      this.map.addLayer({\r\n        id: \"e-16\",\r\n        source: \"e-16\",\r\n        type: \"raster\",\r\n        paint: {\r\n          \"raster-opacity\": this.opacity,\r\n        },\r\n      });\r\n\r\n      slider.addEventListener(\"input\", (e) => {\r\n        const input = (document.getElementById(\"slider\") as HTMLInputElement)\r\n          .value;\r\n        this.map.setPaintProperty(\r\n          \"e-16\",\r\n          \"raster-opacity\",\r\n          parseInt(\"\" + input + \"\", 10) / 100\r\n        );\r\n        // Value indicator\r\n        sliderValue.textContent = \"\" + input + \"\" + \"%\";\r\n      });\r\n    });\r\n    this.map.on(\"load\", () => {\r\n      this.map.addSource(\"e-18\", {\r\n        type: \"image\",\r\n        url: \"assets/maps_images/E-18-crop.png\",\r\n        coordinates: [\r\n          [72.834467, 33.635597],\r\n          [72.85807, 33.64703],\r\n          [72.877725, 33.620232],\r\n          [72.854551, 33.609438],\r\n        ],\r\n      });\r\n      this.map.addLayer({\r\n        id: \"e-18\",\r\n        source: \"e-18\",\r\n        type: \"raster\",\r\n        paint: {\r\n          \"raster-opacity\": this.opacity,\r\n        },\r\n      });\r\n\r\n      slider.addEventListener(\"input\", (e) => {\r\n        const input = (document.getElementById(\"slider\") as HTMLInputElement)\r\n          .value;\r\n        this.map.setPaintProperty(\r\n          \"e-18\",\r\n          \"raster-opacity\",\r\n          parseInt(\"\" + input + \"\", 10) / 100\r\n        );\r\n        // Value indicator\r\n        sliderValue.textContent = \"\" + input + \"\" + \"%\";\r\n      });\r\n    });\r\n\r\n    this.map.on(\"load\", () => {\r\n      this.map.addSource(\"enclave\", {\r\n        type: \"image\",\r\n        url: \"assets/enclave_map-crop.png\",\r\n        coordinates: [\r\n          [33.701923, 73.200201],\r\n          [33.703352, 73.264891],\r\n          [33.674785, 73.264236],\r\n          [33.674999, 73.19621],\r\n        ],\r\n      });\r\n      this.map.addLayer({\r\n        id: \"enclave\",\r\n        source: \"enclave\",\r\n        type: \"raster\",\r\n        paint: {\r\n          \"raster-opacity\": this.opacity,\r\n        },\r\n      });\r\n\r\n      slider.addEventListener(\"input\", (e) => {\r\n        const input = (document.getElementById(\"slider\") as HTMLInputElement)\r\n          .value;\r\n        this.map.setPaintProperty(\r\n          \"enclave\",\r\n          \"raster-opacity\",\r\n          parseInt(\"\" + input + \"\", 10) / 100\r\n        );\r\n        // Value indicator\r\n        sliderValue.textContent = \"\" + input + \"\" + \"%\";\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <app-header></app-header>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <!-- <app-header></app-header> -->\r\n            <app-dashboard></app-dashboard>\r\n        </div>\r\n    </div>\r\n    <div id=\"map\" class=\"match-parent\">\r\n        <div class=\"map-overlay top\">\r\n            <div class=\"map-overlay-inner\">\r\n                <label>Layer opacity: <span id=\"slider-value\">100%</span></label>\r\n                <input id=\"slider\" type=\"range\" min=\"0\" max=\"100\" step=\"0\" value=\"100\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { formatDate } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'demandFilter'\r\n})\r\nexport class TableDemandPipe implements PipeTransform {\r\n    transform(\r\n        data: any,\r\n        minDemand: any,\r\n        maxDemand: any\r\n    ): typeof data {\r\n\r\n        if (!minDemand && !maxDemand || !data) {\r\n            console.log('Empty');\r\n            return data;\r\n        }\r\n\r\n        return data.filter(element => {\r\n            if (minDemand && maxDemand) {\r\n                if(element.min_price && element.max_price) {\r\n                    if(minDemand <= element.min_price && maxDemand >= element.max_price)\r\n                        return element;\r\n                } else {\r\n                    if(minDemand <= element.demand && maxDemand >= element.demand) {\r\n                        return element;\r\n                    }\r\n                }\r\n            } else if (minDemand) {\r\n                if(element.min_price) {\r\n                    if(minDemand <= element.min_price)\r\n                        return element;\r\n                } else {\r\n                    if(minDemand <= element.demand) {\r\n                        return element;\r\n                    }\r\n                }\r\n            } else if (maxDemand) {\r\n                if(element.max_price) {\r\n                    if(maxDemand >= element.max_price)\r\n                        return element;\r\n                } else {\r\n                    if(maxDemand >= element.demand) {\r\n                        return element;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { formatDate } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'dateFilter'\r\n})\r\nexport class TableDatePipe implements PipeTransform {\r\n    transform(\r\n        users: any,\r\n        startDate: String,\r\n        endDate: String\r\n    ): typeof users {\r\n\r\n        if (!startDate && !endDate || !users) {\r\n            // console.log('Empty');\r\n            return users;\r\n        }\r\n        \r\n        return users.filter(user => {\r\n            const createdAt = formatDate(new Date(user.created),'yyyy-MM-dd','en_US');\r\n\r\n            if (startDate && endDate) {\r\n                if(startDate <= createdAt && endDate >= createdAt) {\r\n                    return user;\r\n                }\r\n            } else if (startDate) {\r\n                if(startDate <= createdAt) {\r\n                    return user;\r\n                }\r\n            } else if (endDate) {\r\n                if(endDate >= createdAt) {\r\n                    return user;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  // name: 'tableFilter03'\r\n  name: \"nameFilter\",\r\n})\r\nexport class TableFilter03Pipe implements PipeTransform {\r\n  transform(user: any, fullname: string): typeof user {\r\n    if (!user || !fullname) {\r\n      return user;\r\n    }\r\n\r\n    return user.filter((user) => {\r\n      if (user.fullname) {\r\n        return (\r\n          user.fullname.toLowerCase().indexOf(fullname.toLowerCase()) !== -1\r\n        );\r\n      } else if (user.added_By.fullname) {\r\n        return (\r\n          user.added_By.fullname\r\n            .toLowerCase()\r\n            .indexOf(fullname.toLowerCase()) !== -1\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inactive',\r\n  templateUrl: './inactive.component.html',\r\n  styleUrls: ['./inactive.component.css']\r\n})\r\nexport class InactiveComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  search_id: string;\r\n  search_client: string;\r\n  general_search: string;\r\n  search_location: string;\r\n  search_type: string;\r\n  search_demand: string;\r\n  search_area: string;\r\n  users: any[] = [\r\n    { Id: '1', Client: 'Aftab Nabi', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 4 bed apartment', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\r\n    { Id: '2', Client: 'Awais', Purpose: 'Rent', Prop_type: 'Apartment', Prop_num: '12', Area: '1 Kanal', Location: 'F-6/4', Demand: '450,000', Phone_num: '090078601', Comment: 'Want 4 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\r\n    { Id: '3', Client: 'Usama Gull', Purpose: 'Buy', Prop_type: 'House', Prop_num: '14', Area: '2 Kanal', Location: 'G-15/2', Demand: '150,000', Phone_num: '090078601', Comment: 'Want 3 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\r\n    { Id: '4', Client: 'Usman', Purpose: 'Rent', Prop_type: 'Residential Plot', Prop_num: '72', Area: '2 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 1 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\r\n    { Id: '5', Client: 'Zakria', Purpose: 'Buy', Prop_type: 'Apartment', Prop_num: '5', Area: '0.5 Kanal', Location: 'E-11/4', Demand: '45,000', Phone_num: '090078601', Comment: 'Want 5 bed ', Assigned_to: '', Admin_status: 'Added', Agent_status: 'Assigned', Added_on: 'Aug,15,2020' },\r\n  ];\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"inactive\">\r\n    <br>\r\n    <br>\r\n    <h1><b>&nbsp;&nbsp;&nbsp;&nbsp;Inactive/Deleted Leads</b></h1>\r\n    <br>\r\n    <div class=\"pull-right\">\r\n        <!-- <input type=\"text\" placeholder=\"Search..\" name=\"search\">\r\n    <button type=\"submit\"><i class=\"fa fa-search\"></i></button> -->\r\n        <div class=\"card-body row\">\r\n            <div class=\"col-auto\">\r\n                <i class=\"fa fa-search icon\"></i>\r\n            </div>\r\n            <!--end of col-->\r\n            <div class=\"col\">\r\n                <input class=\"form-control\" id=\"myInput\" type=\"text\" [(ngModel)]=\"general_search\" placeholder=\"Search topic or keyword\">\r\n            </div>\r\n\r\n            <!-- <button class=\"btn btn-primary rounded-pill\" type=\"submit\">Search</button> -->\r\n\r\n            <button class=\"btn btn-primary rounded-pill\">Print</button>\r\n            <button class=\"btn btn-primary rounded-pill\">Excel</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n    </div>\r\n    <br><br><br>\r\n    <!-- Inventory management table is below -->\r\n    <table class=\"table table-hover\" class=\"table table-hover table-dark\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Client</th>\r\n                <th scope=\"col\">Purpose</th>\r\n                <th scope=\"col\">Prop. Type</th>\r\n                <th scope=\"col\">Prop. #</th>\r\n                <th scope=\"col\">Area</th>\r\n                <th scope=\"col\">Location</th>\r\n                <th scope=\"col\">Demand</th>\r\n                <th scope=\"col\">Phone #</th>\r\n                <th scope=\"col\">Lead Status</th>\r\n                <th scope=\"col\">Deleted by</th>\r\n                <th scope=\"col\">Added On</th>\r\n                <th scope=\"col\">Operations</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_id\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_client\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_area\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_location\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"search_demand\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"\">\r\n                </td>\r\n                <td>\r\n                    <i class=\"fa fa-search icon\"></i>\r\n                </td>\r\n            </tr>\r\n            <!-- <tr\r\n                *ngFor=\"let user of users | tableFilter06: search_client | tableFilter05: search_demand | tableFilter04: search_type | tableFilter03: search_area | tableFilter02: search_location | tableFilter: search_id | filter: general_search\">\r\n                <td>{{ user.Id }}</td>\r\n                <td>{{ user.Client }}</td>\r\n                <td>{{ user.Purpose }}</td>\r\n                <td>{{ user.Prop_type }}</td>\r\n                <td>{{ user.Prop_num }}</td>\r\n                <td>{{ user.Area}}</td>\r\n                <td>{{ user.Location }}</td>\r\n                <td>{{ user.Demand }}</td>\r\n                <td>{{ user.Phone_num }}</td>\r\n                <td>{{ user.Comment }}</td>\r\n                <td>{{ user.Assigned_to}}</td>\r\n                <td>{{ user.Added_on}}</td>\r\n                <td>\r\n                    <button class=\"btn btn-primary rounded-pill\">Delete</button>\r\n            </tr> -->\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.css\"],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  tokendata: any;\r\n\r\n  constructor(\r\n    public authService: AuthenticationService,\r\n    public router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.tokenization();\r\n  }\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.tokendata = decodedToken.data;\r\n  }\r\n\r\n  isLogin() {\r\n    const token = this.authService.getToken();\r\n    // console.log(token);\r\n    return token;\r\n  }\r\n  logout() {\r\n    localStorage.removeItem(\"token\");\r\n    console.log(\"\\nlogout\\n\");\r\n    this.router.navigateByUrl(\"/\");\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n  style=\"border-bottom: 1px solid #39bba4; padding: 0 15px\"\r\n>\r\n  <a class=\"navbar-brand\" href=\"#\">\r\n    <img src=\"assets/icons/Asasa-Logo.png\" />\r\n  </a>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"></div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n                <h1 class=\"h3 mb-2 text-gray-800\">Assigned Leads Table</h1>\r\n\r\n                <div class=\"row mt-5\">\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select [items]=\"options\" bindLabel=\"name\" bindValue=\"value\" placeholder=\"Filter By\" [(ngModel)]=\"selectedOption\" (change)=\"optionChange($event)\" [clearable]=\"false\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search {{ placeholder }}\" [(ngModel)]=\"refId\" />\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"Start Date\" (change)=\"changeStartDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"End Date\" (change)=\"changeEndDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Min Demand\" [(ngModel)]=\"minDemand\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Max Demand\" [(ngModel)]=\"maxDemand\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"btn-container\">\r\n                        <button onclick=\"window.print()\" class=\"btn btn-primary\">Print</button>\r\n                        <button (click)=\"exportTOExcel()\" class=\"btn btn-primary\">Excel</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"table-container mb-5 mt-4\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <th scope=\"col\"> </th>\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th>Added By</th>\r\n                                    <th scope=\"col\">Purpose</th>\r\n                                    <th scope=\"col\">Client Details</th>\r\n                                    <th scope=\"col\">Location</th>\r\n                                    <th scope=\"col\">Land Area</th>\r\n\r\n                                    <th scope=\"col\">Demand</th>\r\n                                    <th scope=\"col\">Operations</th>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let user of user | filterlist: selectedOption:refId | tableFilter: city | LocationFilter:location | demandFilter: minDemand:maxDemand | dateFilter: startDate:endDate | paginate:{itemsPerPage:10,currentPage:p}; \">\r\n                                        <td> <span *ngIf=\"user.priority == 'Super Hot' else hot\"><img class=\"super-hot\"\r\n                                                    src=\"\\assets\\icons\\super_hot.svg\"></span>\r\n\r\n                                            <ng-template #hot>\r\n                                                <img class=\"super-hot\" src=\"\\assets\\icons\\hot.svg\">\r\n                                            </ng-template>\r\n                                        </td>\r\n                                        <td>{{ user.refId }}</td>\r\n                                        <td>{{user.added_ByName}}</td>\r\n                                        <td>{{ user.property_purpose }}</td>\r\n                                        <td>\r\n                                            <b>Name : </b>{{ user.client_name |titlecase }} <br />\r\n                                            <b>Phone : </b>{{ user.client_number }} <br />\r\n                                            <b>Name : </b>{{ user.client_type |titlecase }}\r\n                                        </td>\r\n                                        <td>\r\n                                            {{ user.city[0]?.city }}<span></span><br /><span class=\"badge badge-light\" *ngFor=\"let loc of user.location\">{{ loc.location }},\r\n                                            </span>\r\n                                        </td>\r\n\r\n                                        <td *ngIf=\"user?.area != null; else elseBlockArea\">\r\n                                            <span>{{ user?.area + \" - \" + user?.area_unit }}</span>\r\n                                        </td>\r\n                                        <ng-template #elseBlockArea>\r\n                                            <td>\r\n                                                <span *ngIf=\"\r\n                            user?.max_area == null || user?.min_area == null;\r\n                            else elseBlockArea2\r\n                            \">\r\n                                                    <span>None</span>\r\n                                                </span>\r\n                                                <ng-template #elseBlockArea2>\r\n                                                    <span><b>Max:</b> {{ user?.max_area + \" - \" + user?.area_unit\r\n                                                        }}<br /><b>Min:</b>\r\n                                                        {{ user?.min_area + \" - \" + user?.area_unit }}</span>\r\n                                                </ng-template>\r\n                                            </td>\r\n                                        </ng-template>\r\n\r\n                                        <td *ngIf=\"user.min_price != null && user.max_price != null else elseBlockDemand\"><b>Max:</b> {{ user.max_price | currency :'Rs ' : 'symbol' : '1.0-0' }}\r\n                                            <br><b>Min:</b> {{ user.min_price | currency :'Rs ' : 'symbol' : '1.0-0' }}</td>\r\n                                        <ng-template #elseBlockDemand>\r\n                                            <td>{{ user.demand_price | currency :'Rs ' : 'symbol' : '1.0-0' }}</td>\r\n                                        </ng-template>\r\n                                        <td>\r\n                                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\" *ngIf=\"currentLoginUser?.access !== 'agent'\"></i>\r\n\r\n                                            <i class=\"fas fa-exchange-alt ml-2\" (click)=\"setCurrentRow(user)\" data-toggle=\"modal\" data-target=\"#myModal\"></i>\r\n                                        </td>\r\n                                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                            <div class=\"modal-dialog\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n                                                            Delete Confirmation\r\n                                                        </h5>\r\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                            <span aria-hidden=\"true\">&times;</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        Are you sure you want to delete it?\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                                                            Close\r\n                                                        </button>\r\n                                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteAssignedLead()\">\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal\" id=\"myModal\">\r\n    <div class=\"modal-dialog modal-dialog-scrollable\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"text-center\">Assigned Agents History</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n                    &times;\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <div class=\"card-body row\">\r\n                    <div class=\"col\">\r\n                        <ng-select [items]=\"options2\" bindLabel=\"name\" bindValue=\"value\" class=\"mr-2 ml-2\" placeholder=\"Filter By\" [(ngModel)]=\"selectedOption2\" (change)=\"optionChange($event)\" [clearable]=\"false\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Search {{ placeholder }}\" [(ngModel)]=\"refId2\">\r\n                    </div>\r\n                </div>\r\n                <table class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID </th>\r\n                            <th scope=\"col\">Full Name</th>\r\n                            <th (click)=\"sort('id')\" scope=\"col\">Date <i class=\"fa fa-sort\"></i></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <tr *ngFor=\"let history of row.assigned_history | orderBy: key: reverse | filterlist: selectedOption2:refId2\">\r\n                            <td>{{ history.userId }}</td>\r\n                            <td>{{ history.fullname }}</td>\r\n                            <td>{{history.date | date}}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import * as XLSX from \"xlsx\";\r\nimport { JSON2SheetOpts } from \"xlsx\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { formatDate } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-assigned-leads\",\r\n  templateUrl: \"./assigned-leads.component.html\",\r\n  styleUrls: [\"./assigned-leads.component.css\"],\r\n})\r\nexport class AssignedLeadsComponent implements OnInit {\r\n  @ViewChild(\"content\") content: any;\r\n  user: any = [];\r\n  deleteId: any;\r\n  row: any = [];\r\n  key: any;\r\n  reverse: boolean = true;\r\n  p: number = 1;\r\n  data: any = [];\r\n  startDate: String;\r\n  endDate: String;\r\n  minDemand: any;\r\n  maxDemand: any;\r\n  cities: any;\r\n  locations: any;\r\n  city: any;\r\n  location: any;\r\n\r\n  currentLoginUser: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthenticationService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  general_search: any;\r\n\r\n  options = [\r\n    {\r\n      value: \"property_type\",\r\n      name: \"Filter By Property Type\",\r\n      placeholder: \"Property Type\",\r\n    },\r\n    {\r\n      value: \"added_ByName\",\r\n      name: \"Filter By Added By\",\r\n      placeholder: \"Added By\",\r\n    },\r\n  ];\r\n\r\n  options2 = [\r\n    {\r\n      value: \"fullname\",\r\n      name: \"Filter By Name\",\r\n      placeholder: \"Name\",\r\n    },\r\n  ];\r\n\r\n  selectedOption = this.options[0].value;\r\n  placeholder = this.options[0].placeholder;\r\n  refId: any;\r\n\r\n  selectedOption2 = this.options2[0].value;\r\n  placeholder2 = this.options2[0].placeholder;\r\n  refId2: any;\r\n\r\n  ngOnInit(): void {\r\n    this.tokenization();\r\n    this.getAllList();\r\n    this.getCities();\r\n  }\r\n\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.currentLoginUser = decodedToken.data;\r\n    console.log(this.currentLoginUser);\r\n  }\r\n\r\n  changeStartDate(e: any) {\r\n    this.startDate = formatDate(\r\n      new Date(e.target.value),\r\n      \"yyyy-MM-dd\",\r\n      \"en_US\"\r\n    );\r\n    // console.log('Start', this.startDate);\r\n  }\r\n  changeEndDate(e: any) {\r\n    this.endDate = formatDate(new Date(e.target.value), \"yyyy-MM-dd\", \"en_US\");\r\n    // console.log('End', this.endDate);\r\n  }\r\n\r\n  // Function to Get table Data\r\n  getAllList() {\r\n    this.authService.getAllAssignedLeads().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n\r\n        data.forEach((element) => {\r\n          element.assignedTo = [];\r\n          element.added_ByName = element.added_By.fullname;\r\n          element.cityName = element.city[0]?.city;\r\n          element.locationName = [];\r\n          element.SubLocation = [];\r\n          for (let i = 0; i < element.location.length; i++) {\r\n            element.locationName.push(element.location[i]?.location);\r\n            element.SubLocation.push(element.location[i]?.location);\r\n          }\r\n          if (element.demand_price != null) {\r\n            element.demand = element.demand_price;\r\n          } else if (element.max_price) {\r\n            element.demand = element.max_price;\r\n          } else if (element.min_price) {\r\n            element.demand = element.min_price;\r\n          }\r\n\r\n          for (let i = 0; i < element.assigned_history?.length; i++) {\r\n            if (element.assigned_history[i]?.fullname === \"\") continue;\r\n            element.assignedTo[i] = element.assigned_history[i]?.fullname;\r\n          }\r\n\r\n          if (this.currentLoginUser.access === \"city_admin\") {\r\n            element.city.forEach((city) => {\r\n              if (this.currentLoginUser.city.city === city.city) {\r\n                this.user.push(element);\r\n                return;\r\n              }\r\n            });\r\n          } else if (this.currentLoginUser.access === \"agent\") {\r\n            if (this.currentLoginUser.userId === element.added_By.userId) {\r\n              this.user.push(element);\r\n              return;\r\n            } else {\r\n              element.assigned_history.forEach((history) => {\r\n                if (this.currentLoginUser.userId === history?.userId) {\r\n                  this.user.push(element);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          } else {\r\n            this.user.push(element);\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getCities() {\r\n    this.authService.getCities().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.cities = data;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  // Calling Api to get the Locations\r\n  getLocations(selectedCity?) {\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        console.log(locations);\r\n        this.locations = locations;\r\n        if (selectedCity) {\r\n          this.locations = locations.filter((loc) => {\r\n            return loc.cityId == selectedCity;\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  changeCity(city: any) {\r\n    this.locations = [];\r\n    this.location = \"\";\r\n    this.city = city?.city;\r\n    console.log(this.city);\r\n\r\n    this.locations = [];\r\n    if (city) this.getLocations(city._id);\r\n  }\r\n  changeLocation(location: any) {\r\n    this.location = location?.location;\r\n    console.log(this.location);\r\n  }\r\n\r\n  sort(key: any) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  optionChange(e: any) {\r\n    console.log(e);\r\n    this.placeholder = e.placeholder;\r\n    this.refId = \"\";\r\n    console.log(this.selectedOption);\r\n  }\r\n\r\n  setCurrentRow(user: any) {\r\n    this.row = user;\r\n    let date = new Date(this.row.created);\r\n    console.log(\r\n      date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear()\r\n    );\r\n    console.log(this.row.created);\r\n  }\r\n\r\n  deleteAssignedLead() {\r\n    console.log(this.deleteId);\r\n    this.authService.deleteAssignedLeads(this.deleteId).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        if (data.code === 200) {\r\n          this.toastr.success(data.message, \"Success\", {\r\n            timeOut: 5000,\r\n          });\r\n          this.getAllList();\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n        this.toastr.error(error.message, \"Error\", {\r\n          timeOut: 5000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  confirmID(id: any) {\r\n    console.log(id);\r\n\r\n    this.deleteId = id;\r\n  }\r\n  // Function to Get Excel File of the Data Table\r\n  exportTOExcel() {\r\n    let options: JSON2SheetOpts = { header: [] };\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.user, options);\r\n\r\n    var wscols = [\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n    ];\r\n\r\n    ws[\"!cols\"] = wscols;\r\n    ws[\"!cols\"][0] = { hidden: true };\r\n    ws[\"!cols\"][1] = { hidden: true };\r\n    ws[\"!cols\"][2] = { hidden: true };\r\n    ws[\"!cols\"][3] = { hidden: true };\r\n    ws[\"!cols\"][4] = { hidden: true };\r\n    ws[\"!cols\"][5] = { hidden: true };\r\n\r\n    ws[\"!cols\"][8] = { hidden: true };\r\n\r\n    ws[\"!cols\"][25] = { hidden: true };\r\n\r\n    ws[\"!cols\"][26] = { hidden: true };\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"All Data Export\");\r\n    XLSX.writeFile(wb, \"Both.xlsx\");\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport * as mapboxgl from \"mapbox-gl\";\r\n// import { MapserviceService } from \"../services/mapservice.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-inventories\",\r\n  templateUrl: \"./add-inventories.component.html\",\r\n  styleUrls: [\"./add-inventories.component.css\"],\r\n})\r\nexport class AddInventoriesComponent implements OnInit {\r\n  @ViewChild(\"content\") content: any;\r\n  agentAssignedNames: any = [];\r\n  superAdminAssignedNames: any = [];\r\n  cityAdminAssignedNames: any = [];\r\n  assigned_type: any;\r\n  superAdminList = [];\r\n  // assigned_type: any = \"city_admin\";\r\n  form_title: any;\r\n  cities: any;\r\n  formSendingStatus = \"Post Ad\";\r\n  locations: any;\r\n  subsLocations: any;\r\n  city: any = [];\r\n  user: any;\r\n  client_type = [\r\n    { access: \"Direct Seller\" },\r\n    { access: \"Direct Landlord\" },\r\n    { access: \"Dealer\" },\r\n  ];\r\n  client_type1 = [\r\n    { access: \"Direct Buyer\" },\r\n    { access: \"Direct Landlord\" },\r\n    { access: \"Dealer\" },\r\n  ];\r\n  access_type1 = [{ access: \"all_agents\" }];\r\n  minimumPriceRange: any;\r\n  maximumPriceRange: any;\r\n  isInvalidPrice: boolean = false; //Contains the valid status of PRICE ranges\r\n  isInvalidArea: boolean = false; //Contains the valid status of AREA ranges\r\n  minimumAreaRange: any; //Variable stores max area\r\n  maximumAreaRange: any; //Variable stores min area\r\n  userList: any;\r\n  selectedLocations: any;\r\n  selectedCity: any;\r\n  selectStringLocations: any;\r\n  selectAgentValue: any;\r\n  selectedUserCity: any;\r\n  selectedUserLocation: any;\r\n  userLocationMatched: boolean = true;\r\n  cityAdminList: any = [];\r\n  agentList: any = [];\r\n\r\n  opacity = 1;\r\n  map: mapboxgl.Map;\r\n  style = \"mapbox://styles/mapbox/streets-v11\";\r\n  lat = 33.628463;\r\n  lng = 73.087581;\r\n  submitted = false;\r\n  location_value: any;\r\n  city_value: any;\r\n  urls = [];\r\n  optionValue: any;\r\n  optionValue1: any;\r\n  fileToUpload: File = null;\r\n  addinventoryForm: FormGroup;\r\n  typeCheckValue: any;\r\n  isRent = true;\r\n  token: any;\r\n  clientType: any;\r\n  demandValueVariable: any;\r\n  demandValueVariable1: any;\r\n  demandValueVariable2: any;\r\n  agentListFull: any = [];\r\n  assignLeadData = [\r\n    { fullname: \"\" },\r\n    { userId: \"\" },\r\n    { contact: \"\" },\r\n    { date: new Date() },\r\n  ];\r\n  assignStringName: any = [];\r\n  href: string;\r\n  //////////////////////////////////\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  get Property_typename() {\r\n    return this.addinventoryForm.get(\"prop_typename\");\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.addinventoryForm.controls;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.href = this.router.url;\r\n    console.log(this.href);\r\n    this.getUserDetails();\r\n    this.user = this.authService.getUser();\r\n    if (this.user) {\r\n      console.log(\"User1: \", this.user);\r\n      this.authService.removeUser();\r\n    }\r\n    this.form_title = this.authService.getFormTitle();\r\n    this.authService.removeFormTitle();\r\n    this.formDeclare();\r\n    this.addinventoryForm.patchValue({ form_title: this.form_title });\r\n    this.getCities();\r\n    this.getUserList();\r\n    this.getAllUsersList();\r\n  }\r\n\r\n  // Form Declaration, and Validation Function\r\n  formDeclare() {\r\n    this.addinventoryForm = this.formBuilder.group({\r\n      assigned_history: [\r\n        {\r\n          fullname: \"\",\r\n          contact: [\"\"],\r\n          userId: [\"\"],\r\n          date: new Date(),\r\n        },\r\n      ],\r\n      assigned_type: [\"self\"],\r\n      priority: \"Normal\",\r\n      form_title: [\"\"],\r\n      property_purpose: [\"Sell\"],\r\n      property_type: [\"\"],\r\n\r\n      city: [\"\", Validators.required],\r\n      location: [, Validators.required],\r\n      min_price: [],\r\n      max_price: [],\r\n      demand_price: [],\r\n      min_area: [],\r\n      max_area: [],\r\n      beds_number: [\"\"],\r\n      area: [],\r\n      area_unit: [\"\"],\r\n      client_name: [\"\", Validators.required],\r\n      client_number: [\"\", Validators.required],\r\n      client_type: [\"\"],\r\n      comments: \"\",\r\n      added_By: this.formBuilder.group({\r\n        fullname: [\"\"],\r\n        userId: [\"\"],\r\n        contact: [],\r\n      }),\r\n    });\r\n  }\r\n\r\n  getUserDetails() {\r\n    this.token = this.authService.getToken();\r\n    this.token = this.authService.getDecodedToken(this.token).data;\r\n    console.log(this.token);\r\n  }\r\n\r\n  // Function to call User data table for Assigned_To Field of the add-inventory-form\r\n  getAllUsersList() {\r\n    this.authService.getUsers().subscribe(\r\n      (data) => {\r\n        for (var i = 0; i < data.length; i++) {\r\n          if (this.token.access === \"city_admin\") {\r\n            if (data[i].access == \"city_admin\") {\r\n              if (this.token.city.city === data[i].city.city) {\r\n                this.cityAdminList.push(data[i]);\r\n              }\r\n            } else if (data[i].access == \"agent\") {\r\n              if (this.token.city.city === data[i].city.city) {\r\n                this.agentList.push(data[i]);\r\n              }\r\n            }\r\n          } else if (this.token.access === \"agent\") {\r\n            if (data[i].access == \"city_admin\") {\r\n              if (this.token.city.city === data[i].city.city) {\r\n                this.cityAdminList.push(data[i]);\r\n              }\r\n            } else if (data[i].access == \"agent\") {\r\n              if (this.token.city.city === data[i].city.city) {\r\n                this.agentList.push(data[i]);\r\n              }\r\n            } else if (data[i].access == \"super_admin\") {\r\n              this.superAdminList.push(data[i]);\r\n            }\r\n          } else if (this.token.access === \"super_admin\") {\r\n            if (data[i].access == \"city_admin\") {\r\n              this.cityAdminList.push(data[i]);\r\n            } else if (data[i].access == \"agent\") {\r\n              this.agentList.push(data[i]);\r\n            } else if (data[i].access == \"super_admin\") {\r\n              this.superAdminList.push(data[i]);\r\n            }\r\n          }\r\n        }\r\n        console.log(this.superAdminList);\r\n        console.log(this.cityAdminList);\r\n        console.log(this.agentList);\r\n        if (this.user) {\r\n          this.updatefields();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Function to call User data table for Assigned_To Field of the add-inventory-form\r\n  getUserList() {\r\n    this.authService.getUsers().subscribe(\r\n      (data) => {\r\n        this.userList = data;\r\n        // console.log(\"User Get Response\", this.userList);\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Function that is working on price filter/check\r\n  public onChangePrice(event: any): void {\r\n    this.isInvalidPrice = this.minimumPriceRange > this.maximumPriceRange;\r\n  }\r\n  //Function that is working on AREA filter/check\r\n  public onChangeArea(event: any): void {\r\n    this.isInvalidArea = this.minimumAreaRange > this.maximumAreaRange;\r\n  }\r\n\r\n  // Function to patch the value from ng select\r\n  changeAssignedToCityAdmin(access: any) {\r\n    console.log(access);\r\n    this.assignLeadData = [];\r\n    access.forEach((element) => {\r\n      console.log(element);\r\n      this.assignLeadData.push({\r\n        userId: element.userId,\r\n        fullname: element.fullname,\r\n        contact: element.contact,\r\n        date: new Date(),\r\n      });\r\n      this.addinventoryForm.patchValue({\r\n        assigned_history: this.assignLeadData,\r\n      });\r\n    });\r\n    console.log(this.assignLeadData);\r\n    console.log(this.addinventoryForm.get(\"assigned_history\").value);\r\n  }\r\n\r\n  // Function to patch the value from ng select\r\n  changeAssignedAdmin(access: any) {\r\n    console.log(access);\r\n    this.assignLeadData = [];\r\n    access.forEach((element) => {\r\n      console.log(element);\r\n      this.assignLeadData.push({\r\n        userId: element.userId,\r\n        fullname: element.fullname,\r\n        contact: element.contact,\r\n        date: new Date(),\r\n      });\r\n      this.addinventoryForm.patchValue({\r\n        assigned_history: this.assignLeadData,\r\n      });\r\n    });\r\n    console.log(this.assignLeadData);\r\n    console.log(this.addinventoryForm.get(\"assigned_history\").value);\r\n  }\r\n  changeAssignedAgent(access: any) {\r\n    console.log(access);\r\n    this.assignLeadData = [];\r\n    access.forEach((element) => {\r\n      console.log(element);\r\n      this.assignLeadData.push({\r\n        userId: element.userId,\r\n        fullname: element.fullname,\r\n        contact: element.contact,\r\n        date: new Date(),\r\n      });\r\n      this.addinventoryForm.patchValue({\r\n        assigned_history: this.assignLeadData,\r\n      });\r\n    });\r\n  }\r\n  updatefields() {\r\n    if (this.user.assigned_history) {\r\n      console.log(this.addinventoryForm.get(\"assigned_type\").value);\r\n      this.assignLeadData = [];\r\n\r\n      if (this.user.assigned_type === \"Agents\") {\r\n        for (let i = 0; i < this.user.assigned_history.length; i++) {\r\n          console.log(this.user.assigned_history[i].fullname);\r\n          this.agentAssignedNames.push(this.user?.assigned_history[i].fullname);\r\n          this.assignLeadData.push({\r\n            userId: this.user?.assigned_history[i].userId,\r\n            fullname: this.user?.assigned_history[i].fullname,\r\n            contact: this.user?.assigned_history[i].contact,\r\n            date: new Date(),\r\n          });\r\n        }\r\n      } else if (this.user.assigned_type === \"Admin\") {\r\n        for (let i = 0; i < this.user.assigned_history.length; i++) {\r\n          console.log(this.user.assigned_history[i].fullname);\r\n          this.superAdminAssignedNames.push(\r\n            this.user?.assigned_history[i].fullname\r\n          );\r\n          this.assignLeadData.push({\r\n            userId: this.user?.assigned_history[i].userId,\r\n            fullname: this.user?.assigned_history[i].fullname,\r\n            contact: this.user?.assigned_history[i].contact,\r\n            date: new Date(),\r\n          });\r\n        }\r\n      } else if (this.user.assigned_type === \"city_admin\") {\r\n        for (let i = 0; i < this.user.assigned_history.length; i++) {\r\n          console.log(this.user.assigned_history[i].fullname);\r\n          this.cityAdminAssignedNames.push(\r\n            this.user?.assigned_history[i].fullname\r\n          );\r\n          this.assignLeadData.push({\r\n            userId: this.user?.assigned_history[i].userId,\r\n            fullname: this.user?.assigned_history[i].fullname,\r\n            contact: this.user?.assigned_history[i].contact,\r\n            date: new Date(),\r\n          });\r\n        }\r\n      }\r\n\r\n      this.addinventoryForm.patchValue({\r\n        assigned_history: this.assignLeadData,\r\n      });\r\n    }\r\n    console.log(this.user);\r\n\r\n    this.formSendingStatus = \"Save\";\r\n    this.addinventoryForm.patchValue({\r\n      property_type1: this.user?.property_type1,\r\n    });\r\n    this.addinventoryForm.patchValue({ client_type: this.user?.client_type });\r\n    this.clientType = this.user?.client_type;\r\n\r\n    this.addinventoryForm.patchValue({\r\n      property_type: this.user?.property_type,\r\n    });\r\n    this.addinventoryForm.patchValue({ form_title: this.user?.form_title });\r\n    this.addinventoryForm.patchValue({\r\n      assigned_type: this.user?.assigned_type,\r\n    });\r\n    this.addinventoryForm.patchValue({ area: this.user?.area });\r\n    this.addinventoryForm.patchValue({ comments: this.user?.comments });\r\n    this.addinventoryForm.patchValue({ area_unit: this.user?.area_unit });\r\n    this.addinventoryForm.patchValue({ max_area: this.user?.max_area });\r\n    this.addinventoryForm.patchValue({ max_price: this.user?.max_price });\r\n    this.addinventoryForm.patchValue({ _id: this.user?._id });\r\n    this.addinventoryForm.patchValue({ location: this.user?.location });\r\n    this.addinventoryForm.patchValue({ priority: this.user?.priority });\r\n\r\n    this.addinventoryForm.patchValue({\r\n      added_By: {\r\n        fullname: this.user?.added_By?.fullname,\r\n        userId: this.user?.added_By?.userId,\r\n        contact: this.user?.added_By?.contact,\r\n      },\r\n    });\r\n    console.log(this.user.location);\r\n\r\n    this.addinventoryForm.patchValue({ min_area: this.user?.min_area });\r\n    this.addinventoryForm.patchValue({ min_price: this.user?.min_price });\r\n    this.minimumPriceRange = this.user?.min_price;\r\n    this.maximumPriceRange = this.user?.max_price;\r\n    this.minimumAreaRange = this.user?.min_area;\r\n    this.maximumAreaRange = this.user?.max_area;\r\n\r\n    this.addinventoryForm.patchValue({ max_price: this.user?.max_price });\r\n\r\n    this.addinventoryForm.patchValue({ area: this.user?.area });\r\n    this.addinventoryForm.patchValue({ client_type: this.user?.client_type });\r\n    this.addinventoryForm.patchValue({ demand_price: this.user?.demand_price });\r\n    this.addinventoryForm.patchValue({\r\n      property_purpose: this.user?.property_purpose,\r\n    });\r\n    this.addinventoryForm.patchValue({ beds_number: this.user?.beds_number });\r\n    this.addinventoryForm.patchValue({ client_name: this.user?.client_name });\r\n    this.addinventoryForm.patchValue({\r\n      client_number: this.user?.client_number,\r\n    });\r\n    this.addinventoryForm.patchValue({ city: this.user?.city });\r\n\r\n    if (this.user.location) {\r\n      this.selectStringLocations = this.user?.location[0].location;\r\n      this.selectedLocations = this.user?.location[0].location;\r\n      console.log(this.selectStringLocations);\r\n    }\r\n\r\n    if (this.user.city) {\r\n      this.getLocations(this.user?.city[0]._id);\r\n      console.log(this.user?.city[0]._id);\r\n      this.selectedCity = this.user?.city[0].city;\r\n    }\r\n  }\r\n\r\n  // File Upload Functions below\r\n  handleFileInput(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n  }\r\n\r\n  getCity(cityId: any) {\r\n    const city = this.cities.filter((city: any) => {\r\n      return city._id === cityId;\r\n    });\r\n    if (city[0]) {\r\n      return city[0].city;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  getLocation(locId: any) {\r\n    const location = this.locations.filter((location: any) => {\r\n      return location._id === locId;\r\n    });\r\n    if (location[0]) {\r\n      return location[0].location;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  changeCity(city: any) {\r\n    console.log(city.city);\r\n\r\n    this.userLocationMatched = false;\r\n    this.selectStringLocations = null;\r\n    this.selectAgentValue = null;\r\n    this.locations = [];\r\n\r\n    if (city) this.getLocations(city._id);\r\n    this.addinventoryForm.patchValue({ city });\r\n    this.locations = \"\";\r\n    if (this.user) {\r\n      if (this.selectedCity == city?.city) {\r\n        console.log(\"inside\");\r\n\r\n        console.log(this.selectStringLocations);\r\n        console.log(this.selectedLocations);\r\n        this.selectStringLocations = this.selectedLocations;\r\n        this.addinventoryForm.patchValue({ location: this.user?.location });\r\n      } else this.selectStringLocations = \"\";\r\n    }\r\n  }\r\n  changeLocation(location: any) {\r\n    this.userLocationMatched = false;\r\n    this.selectAgentValue = null;\r\n    this.selectedLocations = location?.location;\r\n    this.addinventoryForm.patchValue({ location });\r\n    console.log(this.addinventoryForm.value);\r\n  }\r\n\r\n  changeClientType(clientType: any) {\r\n    this.clientType = clientType?.access;\r\n    this.addinventoryForm.patchValue({ client_type: this.clientType });\r\n    console.log(this.addinventoryForm?.value);\r\n  }\r\n\r\n  // Getting cities from backend Api's\r\n  getCities() {\r\n    this.authService.getCities().subscribe(\r\n      (cities) => {\r\n        if (\r\n          this.token.access === \"city_admin\" ||\r\n          this.token.access === \"agent\"\r\n        ) {\r\n          if (this.token?.city.city == \"Islamabad\") {\r\n            this.city.push(cities[2]);\r\n            this.cities = this.city;\r\n          } else if (this.token?.city.city == \"Rawalpindi\") {\r\n            this.city.push(cities[1]);\r\n            this.cities = this.city;\r\n          } else if (this.token?.city.city == \"Peshawar\") {\r\n            this.city.push(cities[0]);\r\n          }\r\n        } else {\r\n          this.cities = cities;\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  public priceConverter(value) {\r\n    return this.authService.priceFilter(value);\r\n  }\r\n  getLocations(selectedCity?: any) {\r\n    console.log(selectedCity);\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        this.locations = locations;\r\n        if (selectedCity) {\r\n          this.locations = locations.filter((loc) => {\r\n            return loc.cityId == selectedCity;\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  // Check whether user pressed 'buy' or 'rent' button\r\n  setValue(value: string) {\r\n    this.optionValue1 = value;\r\n  }\r\n  demandValue(value) {\r\n    this.demandValueVariable = value.target.value;\r\n  }\r\n  demandValue1(value) {\r\n    this.demandValueVariable1 = value.target.value;\r\n  }\r\n  demandValue2(value) {\r\n    this.demandValueVariable2 = value.target.value;\r\n  }\r\n  // Submit form to backend service\r\n  submitForm() {\r\n    this.submitted = true;\r\n    if (this.addinventoryForm.invalid) {\r\n      console.log(\"Erroneous\");\r\n      this.toastr.error(\"Fill all the Required Fields\", \"Error\", {\r\n        timeOut: 5000,\r\n      });\r\n      return;\r\n    }\r\n    if (this.addinventoryForm.get(\"assigned_type\").value === \"self\") {\r\n    }\r\n\r\n    this.assignLeadData = [];\r\n\r\n    console.log(this.addinventoryForm.value);\r\n\r\n    if (this.user) {\r\n      this.authService\r\n        .updateInventory(this.user._id, this.addinventoryForm.value)\r\n        .subscribe((data: any) => {\r\n          console.log(\"Update inventory response data: \", data);\r\n          const email = this.addinventoryForm.value.email;\r\n          const msg = data.message;\r\n          if (msg == \"Inventory updated successfully\") {\r\n            this.toastr.success(msg, \"Success\", {\r\n              timeOut: 5000,\r\n            });\r\n            if (this.addinventoryForm.get(\"form_title\").value === \"Inventory\") {\r\n              this.router.navigate([\"/inventory\"]);\r\n            } else if (\r\n              this.addinventoryForm.get(\"form_title\").value === \"Lead\"\r\n            ) {\r\n              this.router.navigate([\"/leads\"]);\r\n            } else if (\r\n              this.addinventoryForm.get(\"form_title\").value === \"Both\"\r\n            ) {\r\n              this.router.navigate([\"/both\"]);\r\n            }\r\n          } else {\r\n            this.toastr.error(msg, \"Error\", {\r\n              timeOut: 5000,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      const form_title = this.addinventoryForm.get(\"form_title\").value;\r\n      console.log(this.addinventoryForm.value);\r\n      this.addinventoryForm.patchValue({\r\n        added_By: {\r\n          fullname: this.token?.fullname,\r\n          userId: this.token?.userId,\r\n          contact: this.token?.contact,\r\n        },\r\n      });\r\n      console.log(this.addinventoryForm.value);\r\n      this.authService.createInventory(this.addinventoryForm.value).subscribe(\r\n        (data) => {\r\n          console.log(\"signup data: \", data);\r\n\r\n          //\r\n          // this.authService.assignLeadToAgent(this.addinventoryForm.value).subscribe(\r\n          //   (data: any) => {\r\n          //     console.log(data);\r\n          //     this.toastr.success(data.message, \"Success\", {\r\n          //       timeOut: 5000,\r\n          //     });\r\n          //   },\r\n          //   (error) => {\r\n          //     console.log(error);\r\n\r\n          //     if (error.error.code == 11000)\r\n          //       this.toastr.error(error.error.message, \"Error\", {\r\n          //         timeOut: 5000,\r\n          //       });\r\n          //   }\r\n          // );\r\n          //\r\n          const email = this.addinventoryForm.value.email;\r\n          if (form_title === \"Inventory\") {\r\n            this.toastr.success(\"Inventory Added\", \"Success\", {\r\n              timeOut: 5000,\r\n            });\r\n            this.router.navigate([\"/inventory\"]);\r\n          } else if (form_title === \"Lead\") {\r\n            this.toastr.success(\"Lead Added\", \"Success\", {\r\n              timeOut: 5000,\r\n            });\r\n            this.router.navigate([\"/leads\"]);\r\n          } else if (form_title === \"Both\") {\r\n            this.toastr.success(\"Both Added\", \"Success\", {\r\n              timeOut: 5000,\r\n            });\r\n            this.router.navigate([\"/both\"]);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n          this.toastr.error(error.message, \"Error\", {\r\n            timeOut: 5000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 mb-4\">\r\n                        <form class=\"form-register\" [formGroup]=\"addinventoryForm\" (ngSubmit)=\"submitForm()\">\r\n\r\n                            <h2 class=\"register-heading h3 mb-2 text-gray-800\">Add {{form_title}}</h2>\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-5 col-sm-5 radio-mid\">\r\n\r\n                                    <div class=\"radio\">\r\n                                        <div class=\"btn-group btn-group-toggle\">\r\n                                            <label *ngIf=\"addinventoryForm.get('form_title').value == 'Lead'\" class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Lead'\">\r\n                                                <input type=\"radio\" formControlName=\"form_title\" value=\"Lead\"> Lead\r\n                                            </label>\r\n                                            <h6 *ngIf=\"addinventoryForm.get('form_title').value == 'Lead'\" class=\"require\">*</h6>\r\n\r\n\r\n                                            <label *ngIf=\"addinventoryForm.get('form_title').value == 'Inventory'\" class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Inventory'\">\r\n                                                <input type=\"radio\"\r\n                                                    [attr.disabled]=\"addinventoryForm.get('form_title').value !== 'Inventory'\"\r\n                                                    formControlName=\"form_title\" value=\"Inventory\">\r\n                                                Inventory\r\n                                            </label>\r\n                                            <h6 *ngIf=\"addinventoryForm.get('form_title').value == 'Inventory'\" class=\"require\">*</h6>\r\n\r\n                                            <label *ngIf=\"addinventoryForm.get('form_title').value == 'Both'\" class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('form_title').value === 'Both'\">\r\n                                                <input type=\"radio\"\r\n                                                    [attr.disabled]=\"addinventoryForm.get('form_title').value !== 'Both'\"\r\n                                                    formControlName=\"form_title\" value=\"Both\">\r\n                                                Both\r\n                                            </label>\r\n                                            <h6 *ngIf=\"addinventoryForm.get('form_title').value == 'Both'\" class=\"require\">*</h6>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div class=\"row\" *ngIf=\"addinventoryForm.get('form_title').value !== 'Inventory'\">\r\n                                    <div class=\"col-md-5 col-sm-5\"><br><br>\r\n                                        <div class=\"radio\">\r\n                                            <div class=\"btn-group btn-group-toggle\">\r\n                                                <label style=\"margin-left: 0px;\" class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Sell'\">\r\n                                                    <input type=\"radio\" formControlName=\"property_purpose\" value=\"Sell\"> Sell\r\n                                                </label>\r\n                                                <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Buy'\">\r\n                                                    <input type=\"radio\" formControlName=\"property_purpose\" value=\"Buy\"> Buy\r\n                                                </label>\r\n                                                <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Rent'\">\r\n                                                    <input type=\"radio\" formControlName=\"property_purpose\" value=\"Rent\"> Rent\r\n                                                </label>\r\n                                                <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Rent-Out'\">\r\n                                                    <input type=\"radio\" formControlName=\"property_purpose\" value=\"Rent-Out\"> Rent-Out\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <b class=\"steps\">Step 2: Select Purpose</b>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\" *ngIf=\"addinventoryForm.get('form_title').value == 'Inventory'\">\r\n                                    <div class=\"col-md-5 col-sm-5\"><br><br>\r\n                                        <div class=\"radio\">\r\n                                            <div class=\"btn-group btn-group-toggle\">\r\n                                                <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Sell'\">\r\n                                                    <input type=\"radio\" formControlName=\"property_purpose\" value=\"Sell\"> Sell\r\n                                                </label>\r\n                                                <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_purpose').value === 'Rent-Out'\">\r\n                                                    <input type=\"radio\" formControlName=\"property_purpose\" value=\"Rent-Out\"> Rent-Out\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <b class=\"steps\">Step 2: Select Purpose</b>\r\n                                    </div>\r\n                                </div>\r\n                                <br><br>\r\n                                <div class=\"row\">\r\n                                    <div class=\"form-group\" *ngIf=\"!user\">\r\n                                        <div>\r\n                                            <ng-select class=\"ng-select\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"_id\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\r\n                                            </ng-select>\r\n                                            <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\r\n                                                <div *ngIf=\"f.city.errors.required\">City is required</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\" *ngIf=\"user\">\r\n                                        <div>\r\n                                            <ng-select [(ngModel)]=\"user.city[0].city\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\">\r\n                                            </ng-select>\r\n                                            <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\r\n                                                <div *ngIf=\"f.city.errors.required\">City is required</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\" *ngIf=\"user\">\r\n                                        <div class=\"input-group\">\r\n                                            <ng-select [(ngModel)]=\"selectStringLocations\" [ngModelOptions]=\"{standalone: true}\" class=\"ng-select inputs2\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\r\n                                            </ng-select>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\" *ngIf=\"!user\">\r\n                                        <div>\r\n                                            <ng-select class=\"ng-select inputs2\" [(ngModel)]=\"selectStringLocations\" [ngModelOptions]=\"{standalone: true}\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\"\r\n                                                (change)=\"changeLocation($event)\">\r\n                                            </ng-select>\r\n                                            <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n                                                <div *ngIf=\"f.location.errors.required\">Location is required</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row btn-group-toggle\">\r\n\r\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'home'||addinventoryForm.get('property_type').value === 'House' ||addinventoryForm.get('property_type').value === 'Apartment'||addinventoryForm.get('property_type').value === 'Farm House'||addinventoryForm.get('property_type').value === 'Penthouse'||addinventoryForm.get('property_type').value === 'Upper Portion'||addinventoryForm.get('property_type').value === 'Lower Portion'\">\r\n                                        <input type=\"radio\" formControlName=\"property_type\" value=\"home\"> Home\r\n                                    </label>\r\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'plot' || addinventoryForm.get('property_type').value === 'Residential Plot' || addinventoryForm.get('property_type').value === 'Commercial Plot'||addinventoryForm.get('property_type').value === 'Farm House Plot'\"\r\n                                        *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Sell' \">\r\n                                        <input type=\"radio\" formControlName=\"property_type\" value=\"plot\"> Plot\r\n                                    </label>\r\n                                    <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'commercial' || addinventoryForm.get('property_type').value === 'Office' || addinventoryForm.get('property_type').value === 'Shop' || addinventoryForm.get('property_type').value === 'Plaza' || addinventoryForm.get('property_type').value === 'Floor'\">\r\n                                        <input type=\"radio\" formControlName=\"property_type\" value=\"commercial\"> Commercial\r\n                                    </label>\r\n                                </div>\r\n                                <br>\r\n                                <div class=\"row\">\r\n                                    <div class=\"tab-pane\" id=\"home\" *ngIf=\"addinventoryForm.get('property_type').value === 'home'||addinventoryForm.get('property_type').value === 'House' ||addinventoryForm.get('property_type').value === 'Apartment'||addinventoryForm.get('property_type').value === 'Farm House'||addinventoryForm.get('property_type').value === 'Penthouse'||addinventoryForm.get('property_type').value === 'Upper Portion'||addinventoryForm.get('property_type').value === 'Lower Portion'\">\r\n\r\n                                        <div class=\"btn-group btn-group-toggle\">\r\n                                            <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'House'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"House\"> House\r\n                                            </label>\r\n\r\n                                            <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Apartment'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Apartment\">\r\n                                                Apartment\r\n                                            </label>\r\n                                            <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Farm House'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Farm House\">\r\n                                                Farm House\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"btn-group btn-group-toggle\" *ngIf=\"addinventoryForm.get('property_purpose').value === 'Rent' || addinventoryForm.get('property_purpose').value === 'Rent-Out'\">\r\n                                            <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Penthouse'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Penthouse\">\r\n                                                Penthouse\r\n                                            </label>\r\n\r\n                                            <label class=\"btn btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Lower Portion'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Lower Portion\"> Lower Portion\r\n                                            </label>\r\n\r\n                                            <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Upper Portion'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Upper Portion\">\r\n                                                Upper Portion\r\n                                            </label>\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div class=\"tab-pane\" id=\"plot\" *ngIf=\"addinventoryForm.get('property_type').value === 'plot'||addinventoryForm.get('property_type').value === 'Residential Plot'||addinventoryForm.get('property_type').value === 'Commercial Plot'||addinventoryForm.get('property_type').value === 'Farm House Plot'\">\r\n                                        <div class=\"btn-group btn-group-toggle\">\r\n                                            <label class=\"btn btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Residential Plot'\" style=\"\r\n                                            width: 150px;\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Residential Plot\">\r\n                                                Residential Plot\r\n                                            </label>\r\n\r\n                                            <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Commercial Plot'\" style=\"\r\n                                            width: 150px;\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Commercial Plot\">\r\n                                                Commercial Plot\r\n                                            </label>\r\n\r\n                                            <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Farm House Plot'\" style=\"\r\n                                            width: 150px;\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Farm House Plot\">\r\n                                                Farm House Plot\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"tab-pane\" id=\"commercial\" *ngIf=\"addinventoryForm.get('property_type').value === 'commercial'||addinventoryForm.get('property_type').value === 'Office'||addinventoryForm.get('property_type').value === 'Shop'||addinventoryForm.get('property_type').value === 'Plaza'||addinventoryForm.get('property_type').value === 'Floor'\">\r\n\r\n                                        <div class=\"btn-group btn-group-toggle\">\r\n                                            <label class=\"btn btn3  btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Office'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Office\"> Office\r\n                                            </label>\r\n\r\n                                            <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Shop'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Shop\">\r\n                                                Shop\r\n                                            </label>\r\n\r\n                                            <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Plaza'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Plaza\">\r\n                                                Plaza\r\n                                            </label>\r\n\r\n                                            <label class=\"btn  btn3 btn-primary\" [class.active]=\"addinventoryForm.get('property_type').value === 'Floor'\">\r\n                                                <input type=\"radio\" formControlName=\"property_type\" value=\"Floor\"> Floor\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-4 col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"dropdown\">\r\n\r\n                                            </div><b class=\"steps\">Step 4: Select Property Type</b>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Rent' \">\r\n\r\n                                <div style=\"color: red\" *ngIf=\"isInvalidPrice\">Please check your PRICE ranges</div>\r\n                                <div class=\"row\">\r\n                                    <br> <b class=\"price\">Price Range</b>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 col-sm-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"\">\r\n                                                <input type=\"text\" placeholder=\"Min\" (keyup)=\"demandValue($event)\" class=\"form-control\" formControlName=\"min_price\" name=\"minimumPriceRange\" [(ngModel)]=\"minimumPriceRange\" (ngModelChange)=\"onChangePrice($event)\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-sm-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"\">\r\n                                                <input type=\"text\" placeholder=\"Max\" class=\"form-control\" (keyup)=\"demandValue1($event)\" formControlName=\"max_price\" name=\"maximumPriceRange\" [(ngModel)]=\"maximumPriceRange\" (ngModelChange)=\"onChangePrice($event)\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Sell' || addinventoryForm.get('property_purpose').value === 'Rent-Out' \">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 col-sm-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"\">\r\n                                                <br> <b>Demand </b>\r\n                                                <input type=\"text\" placeholder=\"\" (keyup)=\"demandValue2($event)\" class=\"form-control\" formControlName=\"demand_price\" autocomplete=\"off\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" />\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\" *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Rent'\">\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group input-group\" style=\"\r\n                       \r\n                        \r\n                        width: 91%;\r\n                          font-size: 15px;\r\n                          font-weight: 700;\r\n                      \r\n                          border-radius: 4px\r\n                            \">\r\n                                        <input class=\"form-control mr-2\" style=\"color: brown !important; margin-right: 0rem !important\" id=\"disabledInput\" type=\"text\" placeholder=\"  {{ priceConverter(demandValueVariable) }}\" disabled />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group input-group\" style=\"\r\n                       \r\n                        \r\n                        width: 91%;\r\n                          font-size: 15px;\r\n                          font-weight: 700;\r\n                      \r\n                          border-radius: 4px\r\n                            \">\r\n                                        <input class=\"form-control mr-2\" style=\"color: brown !important; margin-right: 0rem !important\" id=\"disabledInput\" type=\"text\" placeholder=\"  {{ priceConverter(demandValueVariable1) }}\" disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\" *ngIf=\"addinventoryForm.get('property_purpose').value === 'Sell' || addinventoryForm.get('property_purpose').value === 'Rent-Out' \">\r\n                                <div class=\"col-md-3\">\r\n                                    <div class=\"form-group input-group\" style=\"\r\n                       \r\n                        \r\n                        width: 91%;\r\n                          font-size: 15px;\r\n                          font-weight: 700;\r\n                      \r\n                          border-radius: 4px\r\n                            \">\r\n                                        <input class=\"form-control mr-2\" style=\"color: brown !important; margin-right: 0rem !important\" id=\"disabledInput\" type=\"text\" placeholder=\"  {{ priceConverter(demandValueVariable2) }}\" disabled />\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Rent' \">\r\n                                <div style=\"color: red\" *ngIf=\"isInvalidArea\">Please check your AREA ranges</div>\r\n                                <div class=\"row\">\r\n                                    <br> <b class=\"price\">Area Range</b>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 col-sm-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"\">\r\n                                                <input type=\"text\" placeholder=\"Min\" class=\"form-control\" formControlName=\"min_area\" name=\"minimumAreaRange\" [(ngModel)]=\"minimumAreaRange\" (ngModelChange)=\"onChangeArea($event)\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-3 col-sm-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"\">\r\n                                                <input type=\"text\" placeholder=\"Max\" class=\"form-control\" formControlName=\"max_area\" name=\"maximumAreaRange\" [(ngModel)]=\"maximumAreaRange\" (ngModelChange)=\"onChangeArea($event)\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Buy' || addinventoryForm.get('property_purpose').value === 'Rent' \">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8 col-sm-4\">\r\n\r\n                                        <div class=\"radio\">\r\n                                            <div class=\"btn-group btn-group-toggle\">\r\n                                                <label style=\"\r\n                                                margin-left: 0px;\r\n                                            \" class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Feet'\">\r\n                                                    <input type=\"radio\" formControlName=\"area_unit\" value=\"Sq. Feet\" autocomplete=\"off\"\r\n                                                        checked> Sq. Feet\r\n                                                </label>\r\n                                                <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Yard'\">\r\n                                                    <input type=\"radio\" formControlName=\"area_unit\" value=\"Sq. Yard\" autocomplete=\"off\">\r\n                                                    Sq. Yard\r\n                                                </label>\r\n                                                <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Marla'\">\r\n                                                    <input type=\"radio\" formControlName=\"area_unit\" value=\"Marla\" autocomplete=\"off\">\r\n                                                    Marla\r\n                                                </label>\r\n                                                <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Kanal'\">\r\n                                                    <input type=\"radio\" formControlName=\"area_unit\" value=\"Kanal\" autocomplete=\"off\">\r\n                                                    Kanal\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\" *ngIf=\"addinventoryForm.get('property_type').value === 'home' || addinventoryForm.get('property_type').value === 'House' || addinventoryForm.get('property_type').value === 'Apartment'\">\r\n                                <div class=\"col-md-3 col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <b>Beds Number</b>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"beds_number\" placeholder=\"Beds Number\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.beds_number.errors }\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                                        />\r\n                                        <b class=\"steps\">Step 7: Select Number of Beds</b>\r\n                                        <div *ngIf=\"submitted && f.beds_number.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.beds_number.errors.required\">Bed is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Sell' \">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-3 col-sm-3\">\r\n                                        <div class=\"form-group\">\r\n                                            <div>\r\n                                                <b>Simple Area</b>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"area\" autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.area.errors }\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-5 col-sm-2\">\r\n\r\n                                        <div class=\"radio select-btn\">\r\n                                            <div class=\"btn-group btn-group-toggle\">\r\n                                                <label style=\"\r\n                                                margin-left: 0px;\r\n                                            \" class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Feet'\">\r\n                                                    <input type=\"radio\" formControlName=\"area_unit\" value=\"Sq. Feet\" autocomplete=\"off\"\r\n                                                        checked> Sq. Feet\r\n                                                </label>\r\n                                                <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Sq. Yard'\">\r\n                                                    <input type=\"radio\" formControlName=\"area_unit\" value=\"Sq. Yard\" autocomplete=\"off\">\r\n                                                    Sq. Yard\r\n                                                </label>\r\n                                                <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Marla'\">\r\n                                                    <input type=\"radio\" formControlName=\"area_unit\" value=\"Marla\" autocomplete=\"off\">\r\n                                                    Marla\r\n                                                </label>\r\n                                                <label class=\"btn btn-secondary\" [class.active]=\"addinventoryForm.get('area_unit').value === 'Kanal'\">\r\n                                                    <input type=\"radio\" formControlName=\"area_unit\" value=\"Kanal\" autocomplete=\"off\">\r\n                                                    Kanal\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n\r\n\r\n                                <div class=\"col-md-3 col-sm-3 form-group\">\r\n                                    <div class=\"\"><br> <b>Client Name</b>\r\n                                        <input formControlName=\"client_name\" class=\"form-control\" type=\"text\" placeholder=\"Client Name \" [ngClass]=\"{ 'is-invalid': submitted && f.client_name.errors }\" />\r\n                                        <b class=\"steps\">Step 8: Select Client Name</b>\r\n\r\n                                        <div *ngIf=\"submitted && f.client_name.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.client_name.errors.required\">Client Name is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 col-sm-3 form-group\">\r\n                                    <div class=\"\"> <br><b>Client Number</b>\r\n                                        <input formControlName=\"client_number\" class=\"form-control\" type=\"text\" placeholder=\"Client Number\" [ngClass]=\"{ 'is-invalid': submitted && f.client_number.errors }\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\r\n                                        />\r\n                                        <b class=\"steps\">Step 9: Select Client Number</b>\r\n                                        <div *ngIf=\"submitted && f.client_number.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.client_number.errors.required\">Client Number is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 col-sm-3 form-group\">\r\n                                    <div *ngIf=\"addinventoryForm.get('property_purpose').value === 'Sell'\"> <b>Client Type</b>\r\n\r\n                                        <ng-select class=\"ng-select inputs2 mt-2\" [(ngModel)]=\"clientType\" [ngModelOptions]=\"{standalone: true}\" style=\"margin-left: 0px;\" [items]=\"client_type\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Client Type\" (change)=\"changeClientType($event)\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div *ngIf=\"addinventoryForm.get('property_purpose').value != 'Sell'\"> <b>Client Type</b>\r\n\r\n                                        <ng-select class=\"ng-select inputs2 mt-2\" [(ngModel)]=\"clientType\" [ngModelOptions]=\"{standalone: true}\" style=\"margin-left: 0px;\" [items]=\"client_type1\" bindLabel=\"access\" bindValue=\"access\" placeholder=\"Select Client Type\" (change)=\"changeClientType($event)\">\r\n                                        </ng-select>\r\n                                    </div><b class=\"steps\">Step 10: Select Client Type</b>\r\n                                </div>\r\n                                <div class=\"col-3 form-group\">\r\n                                    <b>Comment</b>\r\n                                    <label for=\"exampleFormControlTextarea1\"></label>\r\n                                    <textarea class=\"form-control\" formControlName=\"comments\" placeholder=\"Comment here\" style=\"\r\n                                    height: 120px;\r\n                                \"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-5 col-sm-5\">\r\n                                    <div class=\"radio\">\r\n\r\n                                        <div class=\"btn-group btn-group-toggle\">\r\n                                            <label style=\"\r\n                                            margin-left: 0px;\r\n                                        \" class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('assigned_type').value === 'self'\">\r\n                                                <input type=\"radio\" formControlName=\"assigned_type\" value=\"self\"> Self\r\n                                            </label>\r\n\r\n                                            <label class=\"btn btn-primary\" *ngIf=\"token.access == 'super_admin' || token.access == 'city_admin'\" [class.active]=\"addinventoryForm.get('assigned_type').value === 'Admin'\">\r\n                                                <input type=\"radio\" formControlName=\"assigned_type\" value=\"Admin\">\r\n                                                Super Admin\r\n                                            </label>\r\n                                            <label class=\"btn btn-primary\" [class.active]=\"addinventoryForm.get('assigned_type').value === 'city_admin'\">\r\n                                                <input type=\"radio\" formControlName=\"assigned_type\" value=\"city_admin\">\r\n                                                City Admin\r\n                                            </label>\r\n\r\n                                            <label class=\"btn btn-primary\" *ngIf=\"token.access != 'agent'\" [class.active]=\"addinventoryForm.get('assigned_type').value === 'Agents'\">\r\n                                                <input type=\"radio\" formControlName=\"assigned_type\" value=\"Agents\">\r\n                                                Agents\r\n                                            </label>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <br />\r\n                            <div class=\"row\">\r\n                                <br /><br />\r\n                                <div *ngIf=\"addinventoryForm.get('assigned_type').value === 'city_admin'\">\r\n                                    <ng-select class=\"ng-select inputs2\" [(ngModel)]=\"cityAdminAssignedNames\" [ngModelOptions]=\"{standalone: true}\" [items]=\"cityAdminList\" bindLabel=\"city.city\" [multiple]=\"true\" bindValue=\"fullname\" placeholder=\"Select city admin\" (change)=\"changeAssignedToCityAdmin($event)\">\r\n                                    </ng-select>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"addinventoryForm.get('assigned_type').value === 'Admin'\">\r\n                                    <ng-select class=\"ng-select inputs2\" [(ngModel)]=\"superAdminAssignedNames\" [ngModelOptions]=\"{standalone: true}\" [items]=\"superAdminList\" bindLabel=\"access\" [multiple]=\"true\" bindValue=\"access\" placeholder=\"Select Admin\" (change)=\"changeAssignedAdmin($event)\">\r\n                                    </ng-select>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"addinventoryForm.get('assigned_type').value === 'Agents'\">\r\n                                    <ng-select #agentSelect class=\"ng-select inputs2\" [(ngModel)]=\"agentAssignedNames\" [ngModelOptions]=\"{standalone: true}\" [items]=\"agentList\" [multiple]=\"true\" bindLabel=\"fullname\" bindValue=\"fullname\" placeholder=\"Select Agent\" (change)=\"changeAssignedAgent($event)\">\r\n                                    </ng-select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <b><label>Priority</label></b>\r\n                            <br>\r\n                            <div class=\"row\">\r\n\r\n                                <label class=\"radio-inline priority-radio\" style=\"color: #04615ecc;margin-left: 15px\">\r\n                                    <input type=\"radio\" formControlName=\"priority\" name=\"priority\" value=\"Normal\">Normal</label>\r\n                                <label class=\"radio-inline priority-radio\" style=\"color: brown;margin-left: 15px\">\r\n                                    <input type=\"radio\" formControlName=\"priority\" name=\"priority\" value=\"Hot\">Hot</label>\r\n                                <label class=\"radio-inline priority-radio\" style=\"color: red;\">\r\n                                    <input type=\"radio\" formControlName=\"priority\" name=\"priority\" value=\"Super Hot\">Super Hot\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-group pull-right\">\r\n                                <button type=\"submit\" class=\"btn btn1 btn-primary\">{{formSendingStatus}}</button>\r\n                                <br><br><br>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n// import { first } from 'rxjs/operators';\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-location\",\r\n  templateUrl: \"./add-location.component.html\",\r\n  styleUrls: [\"./add-location.component.css\"],\r\n})\r\nexport class AddLocationComponent implements OnInit {\r\n  @ViewChild(\"content\") content: any;\r\n  addLocationForm: FormGroup;\r\n  cities: any;\r\n  locations: any;\r\n  selectStringLocations: any;\r\n  user: any;\r\n  subLocation: any = [\r\n    {\r\n      subLocation: \"\",\r\n    },\r\n  ];\r\n  changeType: any = 'location';\r\n  location: any;\r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    public authService: AuthenticationService,\r\n    public router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n    this.user = this.authService.getUser();\r\n    if (this.user) {\r\n      console.log(this.user);\r\n      this.authService.removeUser();\r\n      this.updateLocationForm();\r\n    }\r\n\r\n    this.getCities();\r\n  }\r\n  initialize() {\r\n    this.addLocationForm = this.formBuilder.group({\r\n      cityId: [],\r\n      city: [, Validators.required],\r\n      location: [, Validators.required],\r\n      subLocations: [\r\n        {\r\n          subLocation: \"\",\r\n        },\r\n        Validators.required,\r\n      ],\r\n    });\r\n    this.getCities();\r\n  }\r\n  setChangeType(type: any) {\r\n    this.changeType = type;\r\n  }\r\n  updateLocationForm() {\r\n    console.log(this.user?.subLocations);\r\n\r\n    this.addLocationForm.patchValue({ city: this.user?.cityName });\r\n    this.subLocation = this.user?.subLocations;\r\n    console.log(this.subLocation);\r\n\r\n    this.addLocationForm.patchValue({ location: this.user?.location });\r\n    this.selectStringLocations = this.user?.location;\r\n    console.log(this.addLocationForm.get(\"city\").value);\r\n    console.log(this.addLocationForm.get(\"location\").value);\r\n    // if(this.addLocationForm.get(\"city\").value == 'Islamabad')\r\n    // console.log('true');\r\n  }\r\n  getCities() {\r\n    this.authService.getCities().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.cities = data;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  getLocations(selectedCity?) {\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        this.locations = locations;\r\n        if (selectedCity) {\r\n          this.locations = locations.filter((loc) => {\r\n            return loc.cityId == selectedCity;\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  changeCity(city: any) {\r\n    this.selectStringLocations = null;\r\n    this.locations = [];\r\n    if (city) this.getLocations(city._id);\r\n  }\r\n  changeLocation(location: any) {\r\n    this.location = location;\r\n    // console.log(this.location);\r\n  }\r\n  addLocation() {\r\n    console.log(this.subLocation);\r\n    console.log(this.addLocationForm.value);\r\n\r\n    this.addLocationForm.patchValue({\r\n      subLocations: this.subLocation,\r\n    });\r\n\r\n    console.log(this.addLocationForm.value);\r\n    if (this.addLocationForm.get(\"city\").value == \"Islamabad\")\r\n      this.addLocationForm.patchValue({ cityId: 5 });\r\n    if (this.addLocationForm.get(\"city\").value == \"Rawalpindi\")\r\n      this.addLocationForm.patchValue({ cityId: 4 });\r\n    if (this.addLocationForm.get(\"city\").value == \"Peshawar\")\r\n      this.addLocationForm.patchValue({ cityId: 3 });\r\n    console.log(this.addLocationForm.value);\r\n    this.authService\r\n      .addLocations(this.addLocationForm.value)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        const code = data.code;\r\n        if (code === 200) {\r\n          this.toastr.success(data.message, \"Success\", {\r\n            timeOut: 5000,\r\n          });\r\n          this.router.navigate([\"/location\"]);\r\n        }\r\n      });\r\n  }\r\n  addSubLocation() {\r\n    console.log(this.subLocation[0].subLocation);\r\n    console.log(this.location.subLocations);\r\n    let subLoc = [];\r\n    for (let i = 0; i < this.location.subLocations.length; i++) {\r\n      subLoc[i] = this.location?.subLocations[i];\r\n    }\r\n    console.log(subLoc);\r\n    subLoc.push({\r\n      subLocation: this.subLocation[0].subLocation,\r\n    });\r\n    console.log(subLoc);\r\n    console.log(this.location);\r\n    this.location.subLocations = subLoc;\r\n    console.log(this.location);\r\n    console.log(this.location);\r\n\r\n    this.authService\r\n      .addSubLocation(this.location?._id, this.location)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n      });\r\n  }\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-10 offset-md-1 mb-4 mt-4\">\r\n                        <div>\r\n\r\n                            <div class=\"radio mb-5\">\r\n                                <div class=\"btn-group btn-group-toggle\">\r\n                                    <button [class.active]=\"changeType === 'location'\" class=\"btn btn-primary\"\r\n                                        (click)=\"setChangeType('location')\">Location</button>\r\n                                    <button *ngIf=\"!user\" [class.active]=\"changeType === 'subLocation'\" class=\"btn btn-primary ml-3\"\r\n                                        (click)=\"setChangeType('subLocation')\">Sub Location</button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <form class=\"form-register\" [formGroup]=\"addLocationForm\">\r\n                            <div *ngIf=\"changeType == 'location'\">\r\n                                <h2 class=\"h3 mb-2 text-gray-600 mt-3\">Add Location</h2>\r\n\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-md-5 col-sm-5 radio-mid\">\r\n\r\n                                        <div class=\"radio\">\r\n                                            <div class=\"btn-group btn-group-toggle\">\r\n                                                <label class=\"btn btn-primary\"\r\n                                                    [class.active]=\"addLocationForm.get('city').value === 'Islamabad'\">\r\n                                                    <input type=\"radio\" formControlName=\"city\" value=\"Islamabad\">\r\n                                                    Islamabad\r\n                                                </label>\r\n                                                <label class=\"btn btn-primary ml-3\"\r\n                                                    [class.active]=\"addLocationForm.get('city').value === 'Rawalpindi'\">\r\n                                                    <input type=\"radio\" formControlName=\"city\" value=\"Rawalpindi\">\r\n                                                    Rawalpindi\r\n                                                </label>\r\n                                                <label class=\"btn btn-primary ml-3\"\r\n                                                    [class.active]=\"addLocationForm.get('city').value === 'Peshawar'\">\r\n                                                    <input type=\"radio\" formControlName=\"city\" value=\"Peshawar\">\r\n                                                    Peshawar\r\n                                                </label>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <!-- <div class=\"radio mt-3\">\r\n                                    <div class=\"btn-group btn-group-toggle\">\r\n                                        <label class=\"btn btn-primary\">\r\n                                    <input type=\"radio\" formControlName=\"city\" [class.active]=\"addLocationForm.get('city').value == 'Islamabad'\" value=\"Islamabad\"> Islamabad\r\n                                </label>\r\n\r\n                                        <label class=\"btn btn-primary ml-3\">\r\n                                    <input type=\"radio\" formControlName=\"city\" [class.active]=\"addLocationForm.get('city').value == 'Rawalpindi'\"  value=\"Rawalpindi\">\r\n                                    Rawalpindi\r\n                                </label>\r\n\r\n                                        <label class=\"btn btn-primary ml-3\">\r\n                                    <input type=\"radio\" formControlName=\"city\" [class.active]=\"addLocationForm.get('city').value == 'Peshawar'\"  value=\"Peshawar\">\r\n                                    Peshawar\r\n                                </label>\r\n\r\n                                    </div>\r\n                                </div> -->\r\n\r\n                                <div class=\"row mt-3\">\r\n                                    <div class=\"col-md-3 col-sm-3 form-group\">\r\n                                        <div class=\"\"><br> <b>Add new Location</b>\r\n                                            <input formControlName=\"location\" class=\"form-control\" type=\"text\"\r\n                                                placeholder=\"Location \" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-md-3 col-sm-3 form-group\">\r\n                                        <div class=\"\"><br> <b>Add new Sub Location</b>\r\n                                            <input [(ngModel)]=\"subLocation[0].subLocation\"\r\n                                                [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" type=\"text\"\r\n                                                placeholder=\"Sub-Location \" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-12 pull-right\">\r\n                                        <button class=\"btn btn-primary\" (click)=\"addLocation()\">submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"changeType == 'subLocation'\">\r\n                                <div class=\"row mt-5 ml-1\">\r\n                                    <h2 class=\"h3 mb-2 text-gray-600\"><b>Add Sub Location</b></h2>\r\n                                </div>\r\n                                <div class=\"row mt-3\">\r\n\r\n                                    <div class=\"col-3\">\r\n                                        <ng-select class=\"ng-select\" formControlName=\"city\" [items]=\"cities\"\r\n                                            bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\"\r\n                                            (change)=\"changeCity($event)\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class=\"col-3\">\r\n                                        <ng-select class=\"ng-select\" formControlName=\"location\"\r\n                                            [(ngModel)]=\"selectStringLocations\" [items]=\"locations\" bindLabel=\"location\"\r\n                                            bindValue=\"location\" (change)=\"changeLocation($event)\"\r\n                                            placeholder=\"Select Location\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row mt-3\">\r\n\r\n                                    <div class=\"col-md-3 col-sm-3 form-group\">\r\n                                        <div class=\"\"><br> <b>Add new Sub Location</b>\r\n                                            <input [(ngModel)]=\"subLocation[0].subLocation\"\r\n                                                [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" type=\"text\"\r\n                                                placeholder=\"Sub-Location \" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col-12 pull-right\">\r\n                                        <button class=\"btn btn-primary\" (click)=\"addSubLocation()\">submit</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { RouteInfo } from \"./sidebar.metadata\";\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n  {\r\n    path: \"\",\r\n    title: \"Dashboard\",\r\n    icon: \"mdi mdi-dots-horizontal\",\r\n    class: \"nav-small-cap\",\r\n    extralink: true,\r\n    submenu: [],\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    title: \"User Profile\",\r\n    icon: \"mdi mdi-account\",\r\n    class: \"\",\r\n    extralink: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    path: \"/users\",\r\n    title: \"Agent\",\r\n    icon: \"fa fa-users\",\r\n    class: \"\",\r\n    extralink: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    path: \"/inventory\",\r\n    title: \"Inventory\",\r\n    icon: \"fas fa-file-alt\",\r\n    class: \"\",\r\n    extralink: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    path: \"/leads\",\r\n    title: \"Leads\",\r\n    icon: \"fas fa-phone-volume\",\r\n    class: \"\",\r\n    extralink: false,\r\n    submenu: [],\r\n  }\r\n];\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AuthenticationService } from \"../services/Authentication/authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n// import { first } from 'rxjs/operators';\r\nimport { ToastrService } from \"ngx-toastr\";\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.css\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  @ViewChild(\"content\") content;\r\n  sideMenuCollapsed = false;\r\n\r\n  submitted = false;\r\n  registerForm: FormGroup;\r\n  cities: any;\r\n  locations: any;\r\n  user: any;\r\n  abc: any;\r\n  accessType = [\r\n    { access: \"agent\" },\r\n    { access: \"city_admin\" },\r\n    { access: \"call_center\" },\r\n  ];\r\n  selectedLocations: any = [];\r\n  selectedCity: any;\r\n  selectStringLocations: any = [];\r\n  checked: boolean;\r\n\r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    public authService: AuthenticationService,\r\n    public router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n    this.removeUser();\r\n    this.initialize();\r\n    if (this.user) {\r\n      this.updatefields();\r\n    }\r\n  }\r\n\r\n  changePassword() {\r\n    this.checked = !this.checked;\r\n  }\r\n\r\n  removeUser() {\r\n    this.authService.removeUser();\r\n  }\r\n  getUser() {\r\n    this.user = this.authService.getUser();\r\n  }\r\n  updatefields() {\r\n    this.registerForm.patchValue({ fullname: this.user?.fullname });\r\n    this.registerForm.patchValue({ email: this.user?.email });\r\n    this.registerForm.patchValue({ password: this.user?.password });\r\n    this.registerForm.patchValue({ location: this.user?.location });\r\n    this.registerForm.patchValue({ city: this.user?.city });\r\n    this.registerForm.patchValue({ contact: this.user?.contact });\r\n    this.registerForm.patchValue({ access: this.user?.access });\r\n    console.log(this.registerForm);\r\n\r\n    if (this.user.location) {\r\n      for (let i = 0; i < this.user.location.length; i++) {\r\n        console.log(this.user.location[i].location);\r\n        this.selectStringLocations.push(this.user?.location[i].location);\r\n        this.selectedLocations.push(this.user?.location[i].location);\r\n      }\r\n      console.log(this.selectStringLocations);\r\n    }\r\n\r\n    if (this.user.city) {\r\n      this.getLocations(this.user?.city._id);\r\n      console.log(this.user?.city.city);\r\n    }\r\n    this.selectedCity = this.user?.city?.city;\r\n  }\r\n  initialize() {\r\n    if (this.user) {\r\n      this.registerForm = this.formBuilder.group({\r\n        fullname: [\"\", Validators.required],\r\n        email: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.email,\r\n            Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),\r\n          ],\r\n        ],\r\n        location: [\"\", Validators.required],\r\n        contact: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(12),\r\n            Validators.maxLength(12),\r\n          ],\r\n        ],\r\n        access: [\"\", Validators.required],\r\n        city: [\"\", Validators.required],\r\n        confirm_password: [\"\", [Validators.minLength(6)]],\r\n        password: [\"\", [Validators.minLength(6)]],\r\n      });\r\n    } else {\r\n      this.registerForm = this.formBuilder.group({\r\n        fullname: [\"\", Validators.required],\r\n        email: [\r\n          \"\",\r\n          [\r\n            Validators.required,\r\n            Validators.email,\r\n            Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),\r\n          ],\r\n        ],\r\n        password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n        location: [, Validators.required],\r\n        city: [\"\", Validators.required],\r\n        contact: [\r\n          \"92\",\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(12),\r\n            Validators.maxLength(12),\r\n          ],\r\n        ],\r\n        access: [\"\", Validators.required],\r\n        confirm_password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n      });\r\n    }\r\n    this.getCities();\r\n  }\r\n  password(event: any, value: any) {\r\n    const password = this.registerForm.get(\"password\");\r\n    const confirm_password = this.registerForm.get(\"confirm_password\");\r\n    if (value === \"Pass\" && event === confirm_password?.value) {\r\n      this.abc = \"\";\r\n    } else if (value === \"Conf\" && event === password?.value) {\r\n      this.abc = \"\";\r\n    } else {\r\n      this.abc = \"Password not matched\";\r\n    }\r\n  }\r\n\r\n  // Calling Api to get the Cities\r\n  getCities() {\r\n    console.log(\"getcities\");\r\n\r\n    this.authService.getCities().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.cities = data;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  // Calling Api to get the Locations\r\n  getLocations(selectedCity?) {\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        console.log(locations);\r\n        this.locations = locations;\r\n        if (selectedCity) {\r\n          this.locations = locations.filter((loc) => {\r\n            return loc.cityId == selectedCity;\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //Function to change the city of --ng select city--\r\n  changeCity(city: any) {\r\n    this.selectStringLocations = [];\r\n    this.locations = [];\r\n    if (city) this.getLocations(city._id);\r\n    this.registerForm.patchValue({ city });\r\n    this.locations = \"\";\r\n    if (this.user) {\r\n      if (this.selectedCity == city?.city) {\r\n        console.log(this.selectStringLocations);\r\n        console.log(this.selectedLocations);\r\n        this.selectStringLocations = this.selectedLocations;\r\n        console.log(this.selectStringLocations);\r\n\r\n        this.registerForm.patchValue({ location: this.user?.location });\r\n      } else this.selectStringLocations = [];\r\n    }\r\n  }\r\n\r\n  //Function to change the location of --ng select location--\r\n  changeLocation(location: any) {\r\n    console.log(location);\r\n    this.registerForm.patchValue({ location: location });\r\n    console.log(this.registerForm.value);\r\n  }\r\n\r\n  // Patch the value of access input using this below function\r\n  changeAccess(access: any) {\r\n    console.log(access);\r\n\r\n    if (access) this.registerForm.patchValue({ access: access?.access });\r\n  }\r\n\r\n  // Function to register the user by sending whole form\r\n  registerUser() {\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid) {\r\n      console.log(\"Erroneous\");\r\n      this.toastr.error(\"Can not Registered\", \"Error\", {\r\n        timeOut: 5000,\r\n      });\r\n      return;\r\n    }\r\n    if (this.user) {\r\n      console.log(this.registerForm.value);\r\n      this.authService\r\n        .updateUser(this.user._id, this.registerForm.value)\r\n        .subscribe((data: any) => {\r\n          console.log(\"signup data: \", data);\r\n          const email = this.registerForm.value.email;\r\n          const msg = data.message;\r\n          const code = data.code;\r\n          if (code === 200) {\r\n            this.toastr.success(msg, \"Success\", {\r\n              timeOut: 5000,\r\n            });\r\n            this.router.navigateByUrl(\"/agents\");\r\n          } else {\r\n            this.toastr.error(msg, \"Error\", {\r\n              timeOut: 5000,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      console.log(this.registerForm.value);\r\n      this.authService.register(this.registerForm.value).subscribe(\r\n        (data) => {\r\n          console.log(\"signup data: \", data);\r\n          const msg = data.message;\r\n\r\n          if (data.userData._id) {\r\n            this.toastr.success(msg, \"Success\", {\r\n              timeOut: 5000,\r\n            });\r\n\r\n            this.router.navigateByUrl(\"/agents\");\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error.error.message);\r\n          this.toastr.error(error.error.message, \"Error\", {\r\n            timeOut: 5000,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-lg-8 col-md-10 col-12 offset-md-1 mb-4 mt-4\">\r\n                        <div class=\"register\">\r\n                            <h2 class=\"h3 mb-2 text-center\">Welcome to my asasa</h2>\r\n                            <form class=\"form-register\" [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\">\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fa fa-user fa\" aria-hidden=\"true\"></i>\r\n                                        <input type=\"text\" class=\"form-control inputs\" formControlName=\"fullname\"\r\n                                            placeholder=\"Full name\" autocomplete=\"off\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\r\n                                        <div *ngIf=\"submitted && f.fullname.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.fullname.errors.required\">Name is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                                        <input type=\"text\" class=\"form-control emailInput\" formControlName=\"email\" id=\"email\"\r\n                                            autocomplete=\"off\" placeholder=\"Enter Email\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"user\" class=\"form-group\">\r\n                                    <div class=\"form-check updatePassword\">\r\n                                        <label class=\"form-check-label\" for=\"exampleCheck1\">Do you want to change your\r\n                                            Password?</label>\r\n                                        <input (click)=\"changePassword()\" type=\"checkbox\" class=\"form-check-input\"\r\n                                            id=\"exampleCheck1\">\r\n                                    </div>\r\n                                    <div class=\"form-group\" *ngIf=\"checked\">\r\n                                        <div class=\"input-group\">\r\n                                            <i class=\"fas fa-unlock\"></i>\r\n                                            <input type=\"password\" (keyup)=\"password($event.target.value, 'Pass')\"\r\n                                                class=\"form-control inputs\" formControlName=\"password\" autocomplete=\"off\"\r\n                                                placeholder=\"Password\"\r\n                                                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                                                <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                                                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            \r\n            \r\n                                <div class=\"form-group\" *ngIf=\"!user\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-unlock\"></i>\r\n                                        <input type=\"password\" (keyup)=\"password($event.target.value, 'Pass')\"\r\n                                            class=\"form-control inputs\" formControlName=\"password\" autocomplete=\"off\"\r\n                                            placeholder=\"Password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.password.errors.required\">Password is required.</div>\r\n                                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            \r\n                                <div class=\"form-group\" *ngIf=\"!user\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-unlock\"></i>\r\n                                        <input type=\"password\" (keyup)=\"password($event.target.value, 'Conf')\"\r\n                                            class=\"form-control inputs\" formControlName=\"confirm_password\" autocomplete=\"off\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.confirm_password.errors }\" />\r\n                                        <div *ngIf=\"submitted && f.confirm_password.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.confirm_password.errors.required\">Confirm Password is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"!submitted\" class=\"texts\">{{abc}}</div>\r\n                                    <div *ngIf=\"submitted && !f.confirm_password.errors\" class=\"texts\">{{abc}}</div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-phone\"></i>\r\n                                        <input formControlName=\"contact\" type=\"text\" class=\"form-control inputs\" autocomplete=\"off\"\r\n                                            placeholder=\"Phone Number - (92**********)\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.contact.errors }\"\r\n                                            oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\" />\r\n                                        <div *ngIf=\"submitted && f.contact.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.contact.errors.required\">Contact is required</div>\r\n                                            <div *ngIf=\"f.contact.errors.minlength\">Contact must not be less 12 characters</div>\r\n                                            <div *ngIf=\"f.contact.errors.maxlength\">Contact must not be more than 12 characters\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id='message'></div>\r\n                                </div>\r\n                                <div class=\"form-group\" *ngIf=\"!user\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-building\"></i>\r\n                                        <ng-select class=\"ng-select inputs2 notvalid\" [items]=\"cities\" bindLabel=\"city\"\r\n                                            bindValue=\"_id\" placeholder=\"Select City\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" (change)=\"changeCity($event)\"\r\n                                            required>\r\n                                        </ng-select>\r\n                                        <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.city.errors.required\">City is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\" *ngIf=\"user\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-building\"></i>\r\n                                        <ng-select [(ngModel)]=\"user.city.city\" [ngModelOptions]=\"{standalone: true}\"\r\n                                            class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\"\r\n                                            placeholder=\"Select City\" [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\"\r\n                                            (change)=\"changeCity($event)\">\r\n                                        </ng-select>\r\n                                        <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.city.errors.required\">City is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\" *ngIf=\"user\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-street-view\"></i>\r\n                                        <ng-select [(ngModel)]=\"selectStringLocations\" [multiple]=\"true\"\r\n                                            [ngModelOptions]=\"{standalone: true}\" class=\"ng-select inputs2\" [items]=\"locations\"\r\n                                            bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\"\r\n                                            (change)=\"changeLocation($event)\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                </div>\r\n            \r\n                                <div class=\"form-group\" *ngIf=\"!user\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-street-view\"></i>\r\n                                        <ng-select class=\"ng-select inputs2\" [(ngModel)]=\"selectStringLocations\" [multiple]=\"true\"\r\n                                            [ngModelOptions]=\"{standalone: true}\" [items]=\"locations\" bindLabel=\"location\"\r\n                                            bindValue=\"location\" placeholder=\"Select Location\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\"\r\n                                            (change)=\"changeLocation($event)\">\r\n                                        </ng-select>\r\n                                        <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.location.errors.required\">Location is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\" *ngIf=\"!user\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-universal-access\"></i>\r\n                                        <ng-select class=\"ng-select inputs2\" [items]=\"accessType\" bindLabel=\"access\"\r\n                                            bindValue=\"access\" placeholder=\"Select Access Type\"\r\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.access.errors }\"\r\n                                            (change)=\"changeAccess($event)\">\r\n                                        </ng-select>\r\n                                        <div *ngIf=\"submitted && f.access.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.access.errors.required\">Access is required</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\" *ngIf=\"user\">\r\n                                    <div class=\"input-group\">\r\n                                        <i class=\"fas fa-universal-access\"></i>\r\n                                        <ng-select [(ngModel)]=\"user.access\" [ngModelOptions]=\"{standalone: true}\"\r\n                                            class=\"ng-select inputs2\" [items]=\"accessType\" bindLabel=\"access\" bindValue=\"access\"\r\n                                            placeholder=\"Select Access Type\" (change)=\"changeAccess($event)\">\r\n                                        </ng-select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group pull-right\">\r\n                                    <button type=\"submit\" class='btn' class=\"btn btn-primary\">\r\n                                        <span *ngIf=\"!user\">Register</span>\r\n                                        <span *ngIf=\"user\">Save</span>\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<app-header></app-header>\r\n<div id=\"wrapper\">\r\n    <app-dashboard (widthEmittedEvent)=\"contentWidthEmitted($event)\"></app-dashboard>\r\n    <div id=\"content-wrapper\" class=\"d-flex flex-column\" #content>\r\n        <div id=\"content\">\r\n\r\n            <div class=\"container-fluid\">\r\n                <h1 class=\"h3 mb-2 text-gray-800\">Both Leads/Inventory Table</h1>\r\n\r\n                <div class=\"row mb-3 mt-5\">\r\n                    <div class=\"col-12\">\r\n                        <button class=\"btn btn-primary\" (click)=\"setFormTitle('Both')\">Add New</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select [items]=\"options\" bindLabel=\"name\" bindValue=\"value\" placeholder=\"Filter By\" [(ngModel)]=\"selectedOption\" (change)=\"optionChange($event)\" [clearable]=\"false\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Search {{ placeholder }}\" [(ngModel)]=\"refId\" />\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"cities\" bindLabel=\"city\" bindValue=\"city\" placeholder=\"Select City\" (change)=\"changeCity($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <ng-select class=\"ng-select inputs2\" [items]=\"locations\" bindLabel=\"location\" bindValue=\"location\" placeholder=\"Select Location\" (change)=\"changeLocation($event)\">\r\n                        </ng-select>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"Start Date\" (change)=\"changeStartDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"text\" onfocus=\"(this.type='date')\" class=\"form-control\" placeholder=\"End Date\" (change)=\"changeEndDate($event)\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Min Demand\" [(ngModel)]=\"minDemand\">\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6 col-lg-3 mb-3\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Max Demand\" [(ngModel)]=\"maxDemand\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"btn-container\">\r\n                        <button onclick=\"window.print()\" class=\"btn btn-primary\">Print</button>\r\n                        <button (click)=\"exportTOExcel()\" class=\"btn btn-primary\">Excel</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"table-container mb-5 mt-4 both\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th (click)=\"sort('id')\" scope=\"col\">ID <i class=\"fa fa-sort\"></i></th>\r\n                                        <th scope=\"col\">Added By</th>\r\n                                        <th scope=\"col\">Purpose</th>\r\n                                        <th scope=\"col\">Client</th>\r\n\r\n                                        <th scope=\"col\">Prop. Type</th>\r\n                                        <th scope=\"col\">Area</th>\r\n                                        <th scope=\"col\" width=\"30\">Location</th>\r\n                                        <th scope=\"col\">Demand</th>\r\n                                        <th scope=\"col\">Beds</th>\r\n                                        <th scope=\"col\">Assigned To</th>\r\n                                        <th scope=\"col\">Added On</th>\r\n                                        <th scope=\"col\">Operations</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let user of user | filterlist: selectedOption:refId | tableFilter: city | LocationFilter:location | demandFilter: minDemand:maxDemand | dateFilter: startDate:endDate | orderBy: key: reverse | paginate:{itemsPerPage:50,currentPage:p};\">\r\n                                        <td>\r\n                                            <span *ngIf=\"user?.priority == 'Super Hot'\"><img class=\"super-hot\"\r\n                                                    src=\"\\assets\\icons\\super_hot.svg\"></span>\r\n                                            <span *ngIf=\"user?.priority == 'Hot'\"><img class=\"super-hot\"\r\n                                                    src=\"\\assets\\icons\\hot.svg\"></span>\r\n                                            <span *ngIf=\"user?.priority == 'Normal'\"><img class=\"normal\"\r\n                                                    src=\"\\assets\\icons\\normal.svg\"></span>\r\n                                        </td>\r\n\r\n\r\n                                        <td>{{ user?.refId }}</td>\r\n                                        <td>{{user?.added_By?.fullname}}</td>\r\n                                        <td>{{ user?.property_purpose }}</td>\r\n\r\n                                        <td><b>Name : </b>{{ user?.client_name | titlecase }} <br> <b>Number : </b>{{ user?.client_number}} <br>\r\n                                            <b> Client Type :</b> {{ user?.client_type }}\r\n                                        </td>\r\n\r\n                                        <td>{{ user?.property_type }}</td>\r\n\r\n\r\n                                        <td *ngIf=\"user?.area != null; else elseBlockArea\">\r\n                                            <span>{{ user?.area + \" - \" + user?.area_unit }}</span>\r\n                                        </td>\r\n                                        <ng-template #elseBlockArea>\r\n                                            <td>\r\n                                                <span *ngIf=\"\r\n                            user?.max_area == null || user?.min_area == null;\r\n                            else elseBlockArea2\r\n                            \">\r\n                                                    <span>None</span>\r\n                                                </span>\r\n                                                <ng-template #elseBlockArea2>\r\n                                                    <span><b>Max:</b> {{ user?.max_area + \" - \" + user?.area_unit\r\n                                                        }}<br /><b>Min:</b>\r\n                                                        {{ user?.min_area + \" - \" + user?.area_unit }}</span>\r\n                                                </ng-template>\r\n                                            </td>\r\n                                        </ng-template>\r\n\r\n                                        <td>\r\n                                            {{user?.city[0]?.city}}<span>&nbsp;&nbsp;</span><br><span class=\"badge badge-light\" *ngFor=\"let loc of user?.location\">{{ loc.location }}, </span>\r\n                                        </td>\r\n\r\n                                        <td *ngIf=\"user.min_price != null && user.max_price != null else elseBlockDemand\"><b>Max:</b> {{ user.max_price | currency :'Rs ' : 'symbol' : '1.0-0' }}\r\n                                            <br><b>Min:</b> {{ user.min_price | currency :'Rs ' : 'symbol' : '1.0-0' }}</td>\r\n                                        <ng-template #elseBlockDemand>\r\n                                            <td>{{ user.demand_price | currency :'Rs ' : 'symbol' : '1.0-0' }}</td>\r\n                                        </ng-template>\r\n                                        <!--  -->\r\n\r\n                                        <td *ngIf=\"user?.beds_number != null; else elseBeds\">\r\n                                            <span>{{ user?.beds_number }}</span>\r\n                                        </td>\r\n                                        <ng-template #elseBeds>\r\n                                            <td>\r\n                                                <span>None</span>\r\n                                            </td>\r\n                                        </ng-template>\r\n                                        <!--  -->\r\n\r\n                                        <!-- <td>{{ user?.beds_number }}</td> -->\r\n                                        <td>\r\n                                            <span *ngIf=\"user?.assignedTo?.length === 0\">Self</span>\r\n                                            <span *ngIf=\"user?.assignedTo?.length > 0\">\r\n                                                <span *ngFor=\"let assign of user?.assignedTo\">{{ assign }}<span>,</span><br></span>\r\n                                            </span>\r\n                                        </td>\r\n                                        <td>{{ user?.created | date: \"dd/MM/yyyy\"}}</td>\r\n                                        <td><i class=\"fa fa-edit icon\" (click)=\"setUserToEdit(user)\"></i>\r\n                                            <a (click)=\"setUserToEdit(user)\" role=\"button\"></a>\r\n\r\n                                            <i class=\"fa fa-trash icon\" (click)=\"confirmID(user._id)\" data-toggle=\"modal\" data-target=\"#exampleModal1\"></i>\r\n\r\n                                        </td>\r\n                                        <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                            <div class=\"modal-dialog\" role=\"document\">\r\n                                                <div class=\"modal-content\">\r\n                                                    <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Confirmation</h5>\r\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                            <span aria-hidden=\"true\">&times;</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"modal-body\">\r\n                                                        Are you sure you want to Delete it?\r\n                                                    </div>\r\n                                                    <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                                                            Close\r\n                                                        </button>\r\n                                                        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"deleteLead()\">\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import * as XLSX from \"xlsx\";\r\nimport { JSON2SheetOpts } from \"xlsx\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { formatDate } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-both\",\r\n  templateUrl: \"./both.component.html\",\r\n  styleUrls: [\"./both.component.css\"],\r\n})\r\nexport class BothComponent implements OnInit {\r\n\r\n  @ViewChild('content') content: any;\r\n  user: any = [];\r\n  savedId: any;\r\n\r\n  withAutofocus = `<button type=\"button\" ngbAutofocus class=\"btn btn-danger\"\r\n      (click)=\"modal.close('Ok click')\">Ok</button>`;\r\n  deleteId: any;\r\n  key: any;\r\n  reverse: boolean = true;\r\n  p: number = 1;\r\n  data: any = [];\r\n  cities: any;\r\n  locations: any;\r\n  city: any;\r\n  location: any;\r\n\r\n  currentLoginUser: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthenticationService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n  general_search: any;\r\n\r\n  options = [\r\n    // {\r\n    //   value: \"cityName\",\r\n    //   name: \"Filter By City\",\r\n    //   placeholder: \"City\",\r\n    // },\r\n    // {\r\n    //   value: \"SubLocation\",\r\n    //   name: \"Filter By Location\",\r\n    //   placeholder: \"Location\",\r\n    // },\r\n    {\r\n      value: \"property_type\",\r\n      name: \"Filter By Property Type\",\r\n      placeholder: \"Property Types\",\r\n    },\r\n    {\r\n      value: \"added_ByName\",\r\n      name: \"Filter By Added By\",\r\n      placeholder: \"Added By\",\r\n    },\r\n    {\r\n      value: \"assignedTo\",\r\n      name: \"Filter By Assigned To\",\r\n      placeholder: \"Assigned To\",\r\n    },\r\n  ];\r\n  selectedOption = this.options[0].value;\r\n  placeholder = this.options[0].placeholder;\r\n  refId: any;\r\n  startDate: String;\r\n  endDate: String;\r\n  minDemand: any;\r\n  maxDemand: any;\r\n\r\n  ngOnInit(): void {\r\n    this.tokenization();\r\n    this.getAllList();\r\n    this.getCities();\r\n  }\r\n  \r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.currentLoginUser = decodedToken.data;\r\n    console.log(this.currentLoginUser);\r\n  }\r\n\r\n  changeStartDate(e: any) {\r\n    this.startDate = formatDate(new Date(e.target.value),'yyyy-MM-dd','en_US');\r\n    // console.log('Start', this.startDate);\r\n  }\r\n  changeEndDate(e: any) {\r\n    this.endDate= formatDate(new Date(e.target.value),'yyyy-MM-dd','en_US');\r\n    // console.log('End', this.endDate);\r\n  }\r\n  getAllList() {\r\n    this.authService.getAll().subscribe(\r\n      (data) => {\r\n        // this.user = data.inventories;\r\n        data = data.inventories;\r\n        \r\n        data.forEach((element) => {\r\n          element.assignedTo = [];\r\n          element.added_ByName = element.added_By.fullname;\r\n          element.cityName = element.city[0]?.city;\r\n          element.locationName = [];\r\n          element.SubLocation = [];\r\n          for (let i = 0; i < element.location.length; i++) {\r\n            element.locationName.push(element.location[i]?.location);\r\n            element.SubLocation.push(element.location[i]?.location);\r\n          }\r\n          if (element.demand_price != null) {\r\n            element.demand = element.demand_price;\r\n          } else if (element.max_price) {\r\n            element.demand = element.max_price;\r\n          } else if (element.min_price) {\r\n            element.demand = element.min_price;\r\n          }\r\n\r\n          for (let i = 0; i < element.assigned_history?.length; i++) {\r\n            if (element.assigned_history[i]?.fullname === \"\") continue;\r\n            element.assignedTo[i] = element.assigned_history[i]?.fullname;\r\n          }\r\n\r\n          if(this.currentLoginUser.access === \"city_admin\") {\r\n            element.city.forEach(city => {\r\n              if(this.currentLoginUser.city.city === city.city) {\r\n                this.user.push(element);\r\n                return;\r\n              }\r\n            });\r\n          } else if(this.currentLoginUser.access === \"agent\") {\r\n            if(this.currentLoginUser.userId === element.added_By.userId) {\r\n              this.user.push(element);\r\n              return;\r\n            } else {\r\n              element.assigned_history.forEach(history => {\r\n                if(this.currentLoginUser.userId === history?.userId) {\r\n                  this.user.push(element);\r\n                  return;\r\n                }\r\n              });\r\n            }\r\n          } else {\r\n            this.user.push(element);\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  \r\n  changeCity(city: any) {\r\n    this.locations = [];\r\n    this.location = \"\";\r\n    this.city = city?.city;\r\n    console.log(this.city);\r\n\r\n    this.locations = [];\r\n    if (city) this.getLocations(city._id);\r\n  }\r\n  changeLocation(location: any) {\r\n    this.location = location?.location;\r\n    console.log(this.location);\r\n  }\r\n  \r\n  // Calling Api to get the Cities\r\n  getCities() {\r\n    this.authService.getCities().subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.cities = data;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  // Calling Api to get the Locations\r\n  getLocations(selectedCity?) {\r\n    this.authService.getLocations().subscribe(\r\n      (locations) => {\r\n        console.log(locations);\r\n        this.locations = locations;\r\n        if (selectedCity) {\r\n          this.locations = locations.filter((loc) => {\r\n            return loc.cityId == selectedCity;\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  optionChange(e: any) {\r\n    this.placeholder = e.placeholder;\r\n    this.refId = \"\";\r\n    console.log(this.selectedOption);\r\n  }\r\n\r\n  setUserToEdit(user: any) {\r\n    this.authService.setUser(user);\r\n    this.authService.setFormTitle(\"Both\");\r\n    this.router.navigate([\"/add\", user.form_title]);\r\n  }\r\n\r\n  setFormTitle(name: any) {\r\n    this.authService.setFormTitle(name);\r\n    this.router.navigate([\"/add\", name]);\r\n  }\r\n\r\n  sort(key: any) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  // Function to delete the single inventory\r\n  deleteLead() {\r\n    console.log(this.deleteId);\r\n\r\n    this.authService.deleteInventory(this.deleteId).subscribe((data) => {\r\n      console.log(data);\r\n      if (data.code === 200) {\r\n        this.toastr.success(data.message, \"Success\", {\r\n          timeOut: 5000,\r\n        });\r\n        this.getAllList();\r\n        //   for ( let i = 0; i < this.user.length; i++){\r\n        //      if ( this.user[i]._id === this.saveID) { this.user.splice(i, 1); i--; }}\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmID(id) {\r\n    console.log(id);\r\n\r\n    this.deleteId = id;\r\n  }\r\n\r\n  exportTOExcel() {\r\n    let options: JSON2SheetOpts = { header: [] };\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.user, options);\r\n\r\n    var wscols = [\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n      { wch: 30 },\r\n    ];\r\n\r\n    ws[\"!cols\"] = wscols;\r\n    ws[\"!cols\"][0] = { hidden: true };\r\n    ws[\"!cols\"][1] = { hidden: true };\r\n    ws[\"!cols\"][2] = { hidden: true };\r\n    ws[\"!cols\"][3] = { hidden: true };\r\n    ws[\"!cols\"][4] = { hidden: true };\r\n\r\n    ws[\"!cols\"][8] = { hidden: true };\r\n\r\n    ws[\"!cols\"][25] = { hidden: true };\r\n\r\n    ws[\"!cols\"][26] = { hidden: true };\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"All Data Export\");\r\n    XLSX.writeFile(wb, \"Both.xlsx\");\r\n  }\r\n\r\n  contentWidthEmitted(value) {\r\n    this.content.nativeElement.style.marginLeft = `${value}px`;\r\n  }\r\n}\r\n","import { CanActivate, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../Authentication/authentication.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport * as jwt_decode from 'jwt-decode';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RedirectLoginGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthenticationService) {}\r\n\r\n  async canActivate() {\r\n    const token = await this.authService.getToken();\r\n    if (token) {\r\n      this.router.navigateByUrl('/profile');\r\n  } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { MapComponent } from \"./map/map.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ForgetpassComponent } from \"./forgetpass/forgetpass.component\";\r\nimport { ForgetpassverifyComponent } from \"./forgetpassverify/forgetpassverify.component\";\r\nimport { NewpassComponent } from \"./newpass/newpass.component\";\r\nimport { SignupotpComponent } from \"./signupotp/signupotp.component\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { ProfileComponent } from \"./dashboard/profile/profile.component\";\r\nimport { InventoryComponent } from \"./dashboard/inventory/inventory.component\";\r\nimport { BothComponent } from \"./dashboard/both/both.component\";\r\nimport { UsersComponent } from \"./dashboard/users/users.component\";\r\nimport { LeadsComponent } from \"./dashboard/leads/leads.component\";\r\nimport { InactiveComponent } from \"./dashboard/inactive/inactive.component\";\r\nimport { OptionsComponent } from \"./dashboard/options/options.component\";\r\nimport { AddUsersComponent } from \"./dashboard/users/add-users/add-users.component\";\r\nimport { AddLeadsComponent } from \"./dashboard/leads/add-leads/add-leads.component\";\r\nimport { AddInventoriesComponent } from \"./dashboard/inventory/add-inventories/add-inventories.component\";\r\nimport { RedirectLoginGuard } from \"./services/guards/redirectlogin.guard\";\r\nimport { IsLoginGuard } from \"./services/guards/islogin.guard\";\r\nimport { AssignedLeadsComponent } from \"./dashboard/assigned-leads/assigned-leads.component\";\r\nimport { PageNotFoundComponent } from \"./dashboard/page-not-found/page-not-found.component\";\r\nimport { LocationComponent } from \"./dashboard/location/location.component\";\r\nimport { AddLocationComponent } from \"./dashboard/location/add-location/add-location.component\";\r\nimport { RoleGuard } from \"./services/guards/role.guard\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"map\",\r\n    canActivate: [IsLoginGuard],\r\n    component: MapComponent,\r\n  },\r\n  {\r\n    path: \"\",\r\n    canActivate: [RedirectLoginGuard],\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: \"register\",\r\n    canActivate: [RoleGuard],\r\n    data: { \r\n      expectedRole: ['super_admin', 'city_admin']\r\n    },\r\n    component: SignupComponent,\r\n  },\r\n  { path: \"forgetpass-component\", component: ForgetpassComponent },\r\n  {\r\n    path: \"forgetpassverify-component/:email\",\r\n    component: ForgetpassverifyComponent,\r\n  },\r\n  { path: \"newpass-component/:email\", component: NewpassComponent },\r\n  {\r\n    path: \"signupotp-component/:email\",\r\n    canActivate: [IsLoginGuard],\r\n    component: SignupotpComponent,\r\n  },\r\n  // {\r\n  //   path: \"dashboard\",\r\n  //   canActivate: [IsLoginGuard],\r\n  //   component: DashboardComponent,\r\n  // },\r\n  {\r\n    path: \"navbar\",\r\n    canActivate: [IsLoginGuard],\r\n    component: DashboardComponent,\r\n  },\r\n  {\r\n    path: \"profile/:email\",\r\n    canActivate: [IsLoginGuard],\r\n    component: ProfileComponent,\r\n  },\r\n  {\r\n    path: \"profile\",\r\n    canActivate: [IsLoginGuard],\r\n    component: ProfileComponent,\r\n  },\r\n  {\r\n    path: \"inventory\",\r\n    canActivate: [IsLoginGuard],\r\n    component: InventoryComponent,\r\n  },\r\n  {\r\n    path: \"agents\",\r\n    canActivate: [IsLoginGuard],\r\n    component: UsersComponent,\r\n  },\r\n  {\r\n    path: \"location\",\r\n    canActivate: [IsLoginGuard],\r\n    component: LocationComponent,\r\n  },\r\n  {\r\n    path: \"add-location\",\r\n    canActivate: [RoleGuard],\r\n    data: { \r\n      expectedRole: ['super_admin', 'city_admin']\r\n    },\r\n    component: AddLocationComponent,\r\n  },\r\n  {\r\n    path: \"assigned-leads\",\r\n    canActivate: [IsLoginGuard],\r\n    component: AssignedLeadsComponent,\r\n  },\r\n  {\r\n    path: \"both\",\r\n    canActivate: [IsLoginGuard],\r\n    component: BothComponent,\r\n  },\r\n  {\r\n    path: \"leads\",\r\n    canActivate: [IsLoginGuard],\r\n    component: LeadsComponent,\r\n  },\r\n  {\r\n    path: \"inactive\",\r\n    canActivate: [IsLoginGuard],\r\n    component: InactiveComponent,\r\n  },\r\n  {\r\n    path: \"options\",\r\n    canActivate: [IsLoginGuard],\r\n    component: OptionsComponent,\r\n  },\r\n  {\r\n    path: \"add-users\",\r\n    canActivate: [IsLoginGuard],\r\n    component: AddUsersComponent,\r\n  },\r\n  {\r\n    path: \"add-leads\",\r\n    canActivate: [IsLoginGuard],\r\n    component: AddLeadsComponent,\r\n  },\r\n  {\r\n    path: \"add/:formName\",\r\n    canActivate: [IsLoginGuard],\r\n    component: AddInventoriesComponent,\r\n  },\r\n  {\r\n    path: \"add-inventories\",\r\n    canActivate: [IsLoginGuard],\r\n    component: AddInventoriesComponent,\r\n  },\r\n  {\r\n    path: \"**\",\r\n    canActivate: [IsLoginGuard],\r\n    component: PageNotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","<div class=\"container\">\r\n    <div class=\"row center\">\r\n        <img class=\"wave\" src=\"assets/icons/wave.png\">\r\n        <div class=\"container\">\r\n            <div class=\"img\">\r\n                <img src=\"assets/icons/bg.svg\">\r\n            </div>\r\n            <div class=\"login-content text-center\">\r\n                <div class=\"login\">\r\n                    <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\r\n                        <img src=\"assets/icons/avatar.svg\">\r\n                        <h3>Welcome to Agent Dashboard</h3>\r\n                        <div class=\"input-div one\" style=\"background-color: #fff; padding-left: 5px;\">\r\n                            <div class=\"i\">\r\n                                <i class=\"fa fa-user\"></i>\r\n                            </div>\r\n                            <div class=\"div\">\r\n                                <!-- <h5>Username</h5> -->\r\n                                <input type=\"text\" class=\"input\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" type=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"\">\r\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback text-left\">\r\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-div pass\" style=\"background-color: #fff;\">\r\n                            <div class=\"i\">\r\n                                <i class=\"fa fa-lock\"></i>\r\n                            </div>\r\n                            <div class=\"div\">\r\n                                <!-- <h5>Password</h5> -->\r\n                                <input type=\"password\" class=\"input\" class=\"input-field\" type=\"password\" formControlName=\"password\" placeholder=\"Password\" required=\"\" class=\"\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\r\n                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback text-left\">\r\n                                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" class=\"btn\" value=\"Login\">\r\n                        <hr class=\"mt-4 mb-4\">\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"col-5 left\">\r\n            <div>\r\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"col-1 v2 \" *ngIf=\"mobileView ==false\">\r\n            <div class=\"vl\"></div>\r\n            Log - in\r\n            <div class=\"vl\"></div>\r\n        </div>\r\n        <div class=\"col-6 right\">\r\n            <h2 class=\"text-center\">Welcome to my asasa</h2>\r\n            <form class=\"form-register\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\r\n                <div class=\"form-group\" class='input-container'>\r\n                    <div class=\"input-group\">\r\n                        <i class=\"fa fa-user icon\"></i>\r\n                        <input class=\"form-control\" class=\"input-field\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" type=\"email\" name=\"email\"\r\n                            formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\"\r\n                            class=\"form-control rounded-pill border-0 shadow-sm px-4\">\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"input-group\">\r\n                        <i class=\"fa fa-lock icon\"></i>\r\n                        <input class=\"input-field\" type=\"password\" formControlName=\"password\" placeholder=\"Password\"\r\n                            required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\">\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6\r\n                                characters\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <br>\r\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\">\r\n                        Login</button>\r\n                </div>\r\n                <div class=\"custom-control custom-checkbox mb-3\">\r\n                    <a routerLink=\"/forgetpass-component\"> <b>Forget Password</b></a>\r\n                    <br>\r\n                    Not Registered?\r\n                    <a routerLink=\"/register\"> <b>Sign up!</b></a>\r\n                </div>\r\n            </form>\r\n        </div> -->","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService } from \"../services/Authentication/authentication.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup; // Instance of Form group that will get form data from user end (i.e; login.html)\r\n  // registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  mobileView: boolean;\r\n  username: string;\r\n  email: string;\r\n  errorMessage: any;\r\n  tokendata: any;\r\n  constructor(\r\n    public formBuilder: FormBuilder, // Creating an instance of Formbuilder\r\n    public authService: AuthenticationService, // Instance of Authentication services created in front end\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n    this.tokenization();\r\n  }\r\n  async tokenization() {\r\n    const token = await this.authService.getToken();\r\n    const decodedToken = await this.authService.getDecodedToken(token);\r\n    this.tokendata = decodedToken?.data;\r\n    console.log(this.tokendata);\r\n  }\r\n  initialize() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\"),\r\n        ],\r\n      ],\r\n      password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n    });\r\n\r\n    this.route.params.subscribe((param) => {\r\n      this.email = param.email;\r\n    });\r\n  }\r\n  loginUser() {\r\n    this.submitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(this.loginForm.value).subscribe(\r\n      (data) => {\r\n        console.log(\"Subscribed Data: \", data);\r\n        const msg = data.message;\r\n        const token = data.token;\r\n        const email = this.loginForm.value.email;\r\n        this.toastr.success(msg, \"Success\", {\r\n          timeOut: 5000,\r\n        });\r\n        this.authService.setToken(token);\r\n        this.router.navigate([\"/profile\", email]);\r\n      },\r\n      (error) => {\r\n        console.error(error.error.message);\r\n        this.errorMessage = error;\r\n        this.toastr.error(error.error.message, \"Error\", {\r\n          timeOut: 5000,\r\n        });\r\n      }\r\n    );\r\n  }\r\n  // getting input labels values from user end (login.html)\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'tableFilter05'\r\n})\r\nexport class TableFilter05Pipe implements PipeTransform {\r\n\r\n  transform(\r\n    user,\r\n    search_demand: string\r\n  ): typeof user {\r\n\r\n    if (!user || !search_demand) {\r\n      return user;\r\n    }\r\n    return user.filter(user =>\r\n      user.Demand.toLowerCase().indexOf(search_demand.toLowerCase()) !== -1);\r\n\r\n  }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-forgetpass',\r\n  templateUrl: './forgetpass.component.html',\r\n  styleUrls: ['./forgetpass.component.css']\r\n})\r\nexport class ForgetpassComponent implements OnInit {\r\n  forgetPassForm: FormGroup;\r\n  submitted = false;\r\n  constructor(\r\n    private authServ: AuthenticationService,\r\n    public formBuilder: FormBuilder,\r\n    public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forgetPassForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]]\r\n    });\r\n  }\r\n  get f() { return this.forgetPassForm.controls; }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.forgetPassForm.invalid) {\r\n      return;\r\n    }\r\n    console.log(\"Sending this email: \" + this.forgetPassForm.value.email);\r\n    const body = {\r\n      email: this.forgetPassForm.value.email\r\n    }\r\n    this.authServ.verifyEmail(body).subscribe(data => {\r\n      console.log(data);\r\n      const status = data.success;\r\n      const msg = data.status;\r\n      const email = this.forgetPassForm.value.email;\r\n      if (status) {\r\n        alert(msg)\r\n\r\n        this.router.navigate(['forgetpassverify-component', email]);\r\n      }\r\n      else\r\n      {\r\n        alert(msg);\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 col-md-5 left\">\r\n            <div>\r\n\r\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-1 v2\">\r\n            <div class=\"vl\"></div>\r\n            Forget password\r\n            <div class=\"vl\"></div>\r\n        </div>\r\n\r\n        <div class=\"col-sm-6 col-md-6 right\">\r\n            <h2>Welcome to my asasa</h2>\r\n            <form class=\"form-register\" [formGroup]=\"forgetPassForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\" class='input-container'>\r\n                    <div class=\"input-group\">\r\n                        <i class=\"fa fa-user icon\"></i>\r\n                        <input class=\"form-control\" class=\"input-field\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"inputEmail\" type=\"text\" name=\"email\" formControlName=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\">\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"custom-control custom-checkbox mb-3\"> -->\r\n                <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\">\r\n                <div class=\"form-group\">\r\n                    <button type=\"submit\" class=\"btn btn-info rounded-pill\">Get Code</button>\r\n                </div>\r\n                <button class=\"btn btn-info rounded-pill\" routerLink=\"/\">Back</button>\r\n                <!-- </div> -->\r\n\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormArray,\r\n  NgForm,\r\n} from \"@angular/forms\";\r\n// import { from } from 'rxjs';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AuthenticationService } from \"src/app/services/Authentication/authentication.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: \"app-add-users\",\r\n  templateUrl: \"./add-users.component.html\",\r\n  styleUrls: [\"./add-users.component.css\"],\r\n})\r\nexport class AddUsersComponent implements OnInit {\r\n  submitted = false;\r\n  user: any;\r\n  cartService: any;\r\n  adduserForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  formDeclare() {\r\n    this.adduserForm = this.formBuilder.group({\r\n      location: [\"\", Validators.required],\r\n      email: [\"\", Validators.required],\r\n      userId: [\"\", Validators.required],\r\n      status: [\"\", Validators.required],\r\n      fullname: [\"\", Validators.required],\r\n      contact: [\"\", Validators.required],\r\n      access: [\"\", Validators.required],\r\n    });\r\n  }\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.adduserForm.controls;\r\n  }\r\n  ngOnInit(): void {\r\n    this.formDeclare();\r\n  }\r\n  createUser() {\r\n    this.authService.createUsers(this.adduserForm).subscribe((res) => {\r\n      console.log(\"Subscribed data: \", res);\r\n    });\r\n  }\r\n  submitForm() {\r\n    this.submitted = true; // stop here if form is invalid\r\n    if (this.adduserForm.invalid) {\r\n      this.toastr.error(\"Fields Empty\", \"Error\", {\r\n        timeOut: 5000,\r\n      });\r\n      // console.log('Erroneous')\r\n      return;\r\n    } else {\r\n      console.log(\"calling the service: \", this.adduserForm.value);\r\n      this.authService.createUsers(this.adduserForm.value).subscribe((res) => {\r\n        this.adduserForm.reset();\r\n        this.toastr.success(\"User Added\", \"Success\", {\r\n          timeOut: 9000,\r\n        });\r\n        console.log(\"Subscribed data: \", res);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\" register\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2 register-left\">\r\n            <img src=\"assets/icons/asasa.gif\" alt=\"\" />\r\n            <h2><b>Asasa Real Estate</b></h2>\r\n        </div>\r\n        <div class=\"col-md-10 col-sm-10 register-right\">\r\n            <form class=\"form-register\" [formGroup]=\"adduserForm\">\r\n                <h2 class=\"register-heading\">Add User</h2>\r\n                <div class=\"row register-form\">\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"\">\r\n                                <!-- <br><br> -->\r\n                                User ID\r\n                                <input type=\"number\" class=\"form-control\" formControlName=\"userId\" id=\"userId\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.userId.errors }\" />\r\n                                <!-- <label for=\"nme\"><span>Enter ID</span></label> -->\r\n                                <div *ngIf=\"submitted && f.userId.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.userId.errors.required\">Id is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"\">\r\n\r\n                                Full Name\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"fullname\" id=\"fullname\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\r\n                                <!-- <label for=\"nme\"><span>Enter Full Name</span></label> -->\r\n                                <div *ngIf=\"submitted && f.fullname.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.fullname.errors.required\">Name is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"\">\r\n                                <br> Contact #\r\n                                <input type=\"number\" class=\"form-control\" formControlName=\"contact\" id=\"contact\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.contact.errors }\" />\r\n                                <div *ngIf=\"submitted && f.contact.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.contact.errors.required\">Contact is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"\">\r\n                                <br> Location\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"location\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\" />\r\n                                <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.location.errors.required\">Location is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"\">\r\n                                <br><br> Email Address\r\n                                <input type=\"email\" class=\"form-control\" formControlName=\"email\" required autocomplete=\"off\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- Right side column -->\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <!-- <br> -->\r\n                        <br><br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"\">\r\n                                Access\r\n                                <input formControlName=\"access\" class=\"form-control\" type=\"text\" list=\"productName\" [ngClass]=\"{ 'is-invalid': submitted && f.access.errors }\" />\r\n                                <div *ngIf=\"submitted && f.access.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.access.errors.required\">Access is required</div>\r\n                                </div>\r\n                                <datalist id=\"productName\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-sm-6\">\r\n                        <br><br>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"\">\r\n                                Status\r\n                                <input formControlName=\"status\" class=\"form-control\" type=\"text\" list=\"productName1\" [ngClass]=\"{ 'is-invalid': submitted && f.status.errors }\" />\r\n                                <div *ngIf=\"submitted && f.status.errors\" class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"f.status.errors.required\">Status is required</div>\r\n                                </div>\r\n                                <datalist id=\"productName1\">\r\n                                    <option value=\"Pen\">Pen</option>\r\n                                    <option value=\"Pencil\">Pencil</option>\r\n                                    <option value=\"Paper\">Paper</option>\r\n                                </datalist>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-sm-12\">\r\n                        <br><br>\r\n                        <div class=\"form-group\" class=\"pull-right\">\r\n                            <button (click)=\"submitForm()\" class=\"btn btn-primary\">Add</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../services/Authentication/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-forgetpassverify',\r\n  templateUrl: './forgetpassverify.component.html',\r\n  styleUrls: ['./forgetpassverify.component.css']\r\n})\r\nexport class ForgetpassverifyComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  email: string;\r\n  forgetpassForm: FormGroup;\r\n  constructor(\r\n    private authServ: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(param => {\r\n      this.email = param.email;\r\n      // console.log(this.email);\r\n    });\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    this.forgetpassForm = this.formBuilder.group({\r\n      code: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6), Validators.pattern('^[0-9]+$')]]\r\n    });\r\n  }\r\n  get f() { return this.forgetpassForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.forgetpassForm.invalid) {\r\n      return;\r\n    }\r\n    const user = {\r\n      email: this.email,\r\n      otpcode: this.forgetpassForm.value.code\r\n    };\r\n\r\n    // this.authServ.verifyOTPEmail(user).subscribe(data => {\r\n    //   console.log(data);\r\n    // });\r\n    this.authServ.verifyOTPCode(user).subscribe(data => {\r\n      console.log(data);\r\n      const status = data.success;\r\n      const msg = data.status;\r\n      if (status) {\r\n\r\n        alert(msg)\r\n        this.router.navigate(['newpass-component', this.email]);\r\n      } else {\r\n        alert(msg);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 col-md-5 left\">\r\n            <div>\r\n\r\n                <img class=\"left-img\" src=\"assets/icons/asasa.gif\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-1 v2\">\r\n            <div class=\"vl\"></div>\r\n            Verification\r\n            <div class=\"vl\"></div>\r\n        </div>\r\n\r\n        <div class=\"col-sm-6 col-md-6 right\">\r\n            <h2>Welcome to my asasa</h2>\r\n\r\n            <form class=\"form-register\" [formGroup]=\"forgetpassForm\" (ngSubmit)=\"onSubmit()\">\r\n\t\t\t\t<div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                    <i class=\"fa fa-user icon\"></i>\r\n                    <input type=\"text\" class=\"form-control inputs\" formControlName=\"code\" name=\"code\" id=\"code\"  \r\n                        placeholder=\"Enter 6-digit verify code\"\r\n                        [ngClass]=\"{ 'is-invalid': submitted && f.code.errors }\">\r\n                    <div *ngIf=\"submitted && f.code.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.code.errors.required\">Code is required</div>\r\n                        <div *ngIf=\"f.code.errors.minlength\">Code must be at least 6 characters</div>\r\n                        <div *ngIf=\"f.code.errors.maxlength\">Code should not be greater than 6 characters</div>\r\n                        <div *ngIf=\"f.code.errors.pattern\">Code must be a valid number sequence</div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <!-- <input id=\"customCheck1\" type=\"checkbox\" checked class=\"custom-control-input\"> -->\r\n                <div class=\"form-group\">\r\n\t\t\t\t\t<button type=\"submit\" class='btn'\r\n\t\t\t\t\t\tclass=\"btn btn-primary rounded-pill\">Verify</button>\r\n\t\t\t\t</div>\r\n                <button class=\"btn btn-primary rounded-pill\" routerLink=\"/forgetpass-component\">back</button>\r\n                <!-- <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary\" routerLink=\"/newpass-component\">Verify</button>\r\n                </div>\r\n                <button class=\"btn1 btn-primary\" routerLink=\"/forgetpass-component\">back</button> -->\r\n\r\n                <!-- </div> -->\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}